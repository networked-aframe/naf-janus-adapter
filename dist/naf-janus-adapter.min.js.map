{"version":3,"file":"naf-janus-adapter.min.js","mappings":"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","sources":["webpack://@networked-aframe/naf-janus-adapter/./node_modules/@networked-aframe/minijanus/minijanus.js","webpack://@networked-aframe/naf-janus-adapter/./src/index.js","webpack://@networked-aframe/naf-janus-adapter/./node_modules/debug/src/browser.js","webpack://@networked-aframe/naf-janus-adapter/./node_modules/debug/src/common.js","webpack://@networked-aframe/naf-janus-adapter/./node_modules/ms/index.js","webpack://@networked-aframe/naf-janus-adapter/./node_modules/sdp/sdp.js","webpack://@networked-aframe/naf-janus-adapter/webpack/bootstrap","webpack://@networked-aframe/naf-janus-adapter/webpack/startup"],"sourcesContent":["/**\n * Represents a handle to a single Janus plugin on a Janus session. Each WebRTC connection to the Janus server will be\n * associated with a single handle. Once attached to the server, this handle will be given a unique ID which should be\n * used to associate it with future signalling messages.\n *\n * See https://janus.conf.meetecho.com/docs/rest.html#handles.\n **/\nfunction JanusPluginHandle(session) {\n  this.session = session;\n  this.id = undefined;\n}\n\n/** Attaches this handle to the Janus server and sets its ID. **/\nJanusPluginHandle.prototype.attach = function(plugin, loop_index) {\n  var payload = { plugin: plugin, loop_index: loop_index, \"force-bundle\": true, \"force-rtcp-mux\": true };\n  return this.session.send(\"attach\", payload).then(resp => {\n    this.id = resp.data.id;\n    return resp;\n  });\n};\n\n/** Detaches this handle. **/\nJanusPluginHandle.prototype.detach = function() {\n  return this.send(\"detach\");\n};\n\n/** Registers a callback to be fired upon the reception of any incoming Janus signals for this plugin handle with the\n * `janus` attribute equal to `ev`.\n **/\nJanusPluginHandle.prototype.on = function(ev, callback) {\n  return this.session.on(ev, signal => {\n    if (signal.sender == this.id) {\n      callback(signal);\n    }\n  });\n};\n\n/**\n * Sends a signal associated with this handle. Signals should be JSON-serializable objects. Returns a promise that will\n * be resolved or rejected when a response to this signal is received, or when no response is received within the\n * session timeout.\n **/\nJanusPluginHandle.prototype.send = function(type, signal) {\n  return this.session.send(type, Object.assign({ handle_id: this.id }, signal));\n};\n\n/** Sends a plugin-specific message associated with this handle. **/\nJanusPluginHandle.prototype.sendMessage = function(body) {\n  return this.send(\"message\", { body: body });\n};\n\n/** Sends a JSEP offer or answer associated with this handle. **/\nJanusPluginHandle.prototype.sendJsep = function(jsep) {\n  return this.send(\"message\", { body: {}, jsep: jsep });\n};\n\n/** Sends an ICE trickle candidate associated with this handle. **/\nJanusPluginHandle.prototype.sendTrickle = function(candidate) {\n  return this.send(\"trickle\", { candidate: candidate });\n};\n\n/**\n * Represents a Janus session -- a Janus context from within which you can open multiple handles and connections. Once\n * created, this session will be given a unique ID which should be used to associate it with future signalling messages.\n *\n * See https://janus.conf.meetecho.com/docs/rest.html#sessions.\n **/\nfunction JanusSession(output, options) {\n  this.output = output;\n  this.id = undefined;\n  this.nextTxId = 0;\n  this.txns = {};\n  this.eventHandlers = {};\n  this.options = Object.assign({\n    verbose: false,\n    timeoutMs: 10000,\n    keepaliveMs: 30000\n  }, options);\n}\n\n/** Creates this session on the Janus server and sets its ID. **/\nJanusSession.prototype.create = function() {\n  return this.send(\"create\").then(resp => {\n    this.id = resp.data.id;\n    return resp;\n  });\n};\n\n/**\n * Destroys this session. Note that upon destruction, Janus will also close the signalling transport (if applicable) and\n * any open WebRTC connections.\n **/\nJanusSession.prototype.destroy = function() {\n  return this.send(\"destroy\").then((resp) => {\n    this.dispose();\n    return resp;\n  });\n};\n\n/**\n * Disposes of this session in a way such that no further incoming signalling messages will be processed.\n * Outstanding transactions will be rejected.\n **/\nJanusSession.prototype.dispose = function() {\n  this._killKeepalive();\n  this.eventHandlers = {};\n  for (var txId in this.txns) {\n    if (this.txns.hasOwnProperty(txId)) {\n      var txn = this.txns[txId];\n      clearTimeout(txn.timeout);\n      txn.reject(new Error(\"Janus session was disposed.\"));\n      delete this.txns[txId];\n    }\n  }\n};\n\n/**\n * Whether this signal represents an error, and the associated promise (if any) should be rejected.\n * Users should override this to handle any custom plugin-specific error conventions.\n **/\nJanusSession.prototype.isError = function(signal) {\n  return signal.janus === \"error\";\n};\n\n/** Registers a callback to be fired upon the reception of any incoming Janus signals for this session with the\n * `janus` attribute equal to `ev`.\n **/\nJanusSession.prototype.on = function(ev, callback) {\n  var handlers = this.eventHandlers[ev];\n  if (handlers == null) {\n    handlers = this.eventHandlers[ev] = [];\n  }\n  handlers.push(callback);\n};\n\n/**\n * Callback for receiving JSON signalling messages pertinent to this session. If the signals are responses to previously\n * sent signals, the promises for the outgoing signals will be resolved or rejected appropriately with this signal as an\n * argument.\n *\n * External callers should call this function every time a new signal arrives on the transport; for example, in a\n * WebSocket's `message` event, or when a new datum shows up in an HTTP long-polling response.\n **/\nJanusSession.prototype.receive = function(signal) {\n  if (this.options.verbose) {\n    this._logIncoming(signal);\n  }\n  if (signal.session_id != this.id) {\n    console.warn(\"Incorrect session ID received in Janus signalling message: was \" + signal.session_id + \", expected \" + this.id + \".\");\n  }\n\n  var responseType = signal.janus;\n  var handlers = this.eventHandlers[responseType];\n  if (handlers != null) {\n    for (var i = 0; i < handlers.length; i++) {\n      handlers[i](signal);\n    }\n  }\n\n  if (signal.transaction != null) {\n    var txn = this.txns[signal.transaction];\n    if (txn == null) {\n      // this is a response to a transaction that wasn't caused via JanusSession.send, or a plugin replied twice to a\n      // single request, or the session was disposed, or something else that isn't under our purview; that's fine\n      return;\n    }\n\n    if (responseType === \"ack\" && txn.type == \"message\") {\n      // this is an ack of an asynchronously-processed plugin request, we should wait to resolve the promise until the\n      // actual response comes in\n      return;\n    }\n\n    clearTimeout(txn.timeout);\n\n    delete this.txns[signal.transaction];\n    (this.isError(signal) ? txn.reject : txn.resolve)(signal);\n  }\n};\n\n/**\n * Sends a signal associated with this session, beginning a new transaction. Returns a promise that will be resolved or\n * rejected when a response is received in the same transaction, or when no response is received within the session\n * timeout.\n **/\nJanusSession.prototype.send = function(type, signal) {\n  signal = Object.assign({ transaction: (this.nextTxId++).toString() }, signal);\n  return new Promise((resolve, reject) => {\n    var timeout = null;\n    if (this.options.timeoutMs) {\n      timeout = setTimeout(() => {\n        delete this.txns[signal.transaction];\n        reject(new Error(\"Signalling transaction with txid \" + signal.transaction + \" timed out.\"));\n      }, this.options.timeoutMs);\n    }\n    this.txns[signal.transaction] = { resolve: resolve, reject: reject, timeout: timeout, type: type };\n    this._transmit(type, signal);\n  });\n};\n\nJanusSession.prototype._transmit = function(type, signal) {\n  signal = Object.assign({ janus: type }, signal);\n\n  if (this.id != null) { // this.id is undefined in the special case when we're sending the session create message\n    signal = Object.assign({ session_id: this.id }, signal);\n  }\n\n  if (this.options.verbose) {\n    this._logOutgoing(signal);\n  }\n\n  this.output(JSON.stringify(signal));\n  this._resetKeepalive();\n};\n\nJanusSession.prototype._logOutgoing = function(signal) {\n  var kind = signal.janus;\n  if (kind === \"message\" && signal.jsep) {\n    kind = signal.jsep.type;\n  }\n  var message = \"> Outgoing Janus \" + (kind || \"signal\") + \" (#\" + signal.transaction + \"): \";\n  console.debug(\"%c\" + message, \"color: #040\", signal);\n};\n\nJanusSession.prototype._logIncoming = function(signal) {\n  var kind = signal.janus;\n  var message = signal.transaction ?\n      \"< Incoming Janus \" + (kind || \"signal\") + \" (#\" + signal.transaction + \"): \" :\n      \"< Incoming Janus \" + (kind || \"signal\") + \": \";\n  console.debug(\"%c\" + message, \"color: #004\", signal);\n};\n\nJanusSession.prototype._sendKeepalive = function() {\n  return this.send(\"keepalive\");\n};\n\nJanusSession.prototype._killKeepalive = function() {\n  clearTimeout(this.keepaliveTimeout);\n};\n\nJanusSession.prototype._resetKeepalive = function() {\n  this._killKeepalive();\n  if (this.options.keepaliveMs) {\n    this.keepaliveTimeout = setTimeout(() => {\n      this._sendKeepalive().catch(e => console.error(\"Error received from keepalive: \", e));\n    }, this.options.keepaliveMs);\n  }\n};\n\nmodule.exports = {\n  JanusPluginHandle,\n  JanusSession\n};\n","/* global NAF */\nvar mj = require(\"@networked-aframe/minijanus\");\nmj.JanusSession.prototype.sendOriginal = mj.JanusSession.prototype.send;\nmj.JanusSession.prototype.send = function(type, signal) {\n  return this.sendOriginal(type, signal).catch((e) => {\n    if (e.message && e.message.indexOf(\"timed out\") > -1) {\n      console.error(\"web socket timed out\");\n      NAF.connection.adapter.reconnect();\n    } else {\n      throw(e);\n    }\n  });\n}\n\nvar sdpUtils = require(\"sdp\");\nvar debug = require(\"debug\")(\"naf-janus-adapter:debug\");\nvar warn = require(\"debug\")(\"naf-janus-adapter:warn\");\nvar error = require(\"debug\")(\"naf-janus-adapter:error\");\nvar isSafari = /^((?!chrome|android).)*safari/i.test(navigator.userAgent);\n\nconst SUBSCRIBE_TIMEOUT_MS = 15000;\n\nconst AVAILABLE_OCCUPANTS_THRESHOLD = 5;\nconst MAX_SUBSCRIBE_DELAY = 5000;\n\nfunction randomDelay(min, max) {\n  return new Promise(resolve => {\n    const delay = Math.random() * (max - min) + min;\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction debounce(fn) {\n  var curr = Promise.resolve();\n  return function() {\n    var args = Array.prototype.slice.call(arguments);\n    curr = curr.then(_ => fn.apply(this, args));\n  };\n}\n\nfunction randomUint() {\n  return Math.floor(Math.random() * Number.MAX_SAFE_INTEGER);\n}\n\nfunction untilDataChannelOpen(dataChannel) {\n  return new Promise((resolve, reject) => {\n    if (dataChannel.readyState === \"open\") {\n      resolve();\n    } else {\n      let resolver, rejector;\n\n      const clear = () => {\n        dataChannel.removeEventListener(\"open\", resolver);\n        dataChannel.removeEventListener(\"error\", rejector);\n      };\n\n      resolver = () => {\n        clear();\n        resolve();\n      };\n      rejector = () => {\n        clear();\n        reject();\n      };\n\n      dataChannel.addEventListener(\"open\", resolver);\n      dataChannel.addEventListener(\"error\", rejector);\n    }\n  });\n}\n\nconst isH264VideoSupported = (() => {\n  const video = document.createElement(\"video\");\n  return video.canPlayType('video/mp4; codecs=\"avc1.42E01E, mp4a.40.2\"') !== \"\";\n})();\n\nconst OPUS_PARAMETERS = {\n  // indicates that we want to enable DTX to elide silence packets\n  usedtx: 1,\n  // indicates that we prefer to receive mono audio (important for voip profile)\n  stereo: 0,\n  // indicates that we prefer to send mono audio (important for voip profile)\n  \"sprop-stereo\": 0\n};\n\nconst DEFAULT_PEER_CONNECTION_CONFIG = {\n  iceServers: [{ urls: \"stun:stun1.l.google.com:19302\" }, { urls: \"stun:stun2.l.google.com:19302\" }]\n};\n\nconst WS_NORMAL_CLOSURE = 1000;\n\nclass JanusAdapter {\n  constructor() {\n    this.room = null;\n    // We expect the consumer to set a client id before connecting.\n    this.clientId = null;\n    this.joinToken = null;\n\n    this.serverUrl = null;\n    this.webRtcOptions = {};\n    this.peerConnectionConfig = null;\n    this.ws = null;\n    this.session = null;\n    this.reliableTransport = \"datachannel\";\n    this.unreliableTransport = \"datachannel\";\n\n    // In the event the server restarts and all clients lose connection, reconnect with\n    // some random jitter added to prevent simultaneous reconnection requests.\n    this.initialReconnectionDelay = 1000 * Math.random();\n    this.reconnectionDelay = this.initialReconnectionDelay;\n    this.reconnectionTimeout = null;\n    this.maxReconnectionAttempts = 10;\n    this.reconnectionAttempts = 0;\n    this.isReconnecting = false;\n\n    this.publisher = null;\n    this.occupantIds = [];\n    this.occupants = {};\n    this.mediaStreams = {};\n    this.localMediaStream = null;\n    this.pendingMediaRequests = new Map();\n\n    this.pendingOccupants = new Set();\n    this.availableOccupants = [];\n    this.requestedOccupants = null;\n\n    this.blockedClients = new Map();\n    this.frozenUpdates = new Map();\n\n    this.timeOffsets = [];\n    this.serverTimeRequests = 0;\n    this.avgTimeOffset = 0;\n\n    this.onWebsocketOpen = this.onWebsocketOpen.bind(this);\n    this.onWebsocketClose = this.onWebsocketClose.bind(this);\n    this.onWebsocketMessage = this.onWebsocketMessage.bind(this);\n    this.onDataChannelMessage = this.onDataChannelMessage.bind(this);\n    this.onData = this.onData.bind(this);\n  }\n\n  setServerUrl(url) {\n    this.serverUrl = url;\n  }\n\n  setApp(app) {}\n\n  setRoom(roomName) {\n    this.room = roomName;\n  }\n\n  setJoinToken(joinToken) {\n    this.joinToken = joinToken;\n  }\n\n  setClientId(clientId) {\n    this.clientId = clientId;\n  }\n\n  setWebRtcOptions(options) {\n    this.webRtcOptions = options;\n  }\n\n  setPeerConnectionConfig(peerConnectionConfig) {\n    this.peerConnectionConfig = peerConnectionConfig;\n  }\n\n  setServerConnectListeners(successListener, failureListener) {\n    this.connectSuccess = successListener;\n    this.connectFailure = failureListener;\n  }\n\n  setRoomOccupantListener(occupantListener) {\n    this.onOccupantsChanged = occupantListener;\n  }\n\n  setDataChannelListeners(openListener, closedListener, messageListener) {\n    this.onOccupantConnected = openListener;\n    this.onOccupantDisconnected = closedListener;\n    this.onOccupantMessage = messageListener;\n  }\n\n  setReconnectionListeners(reconnectingListener, reconnectedListener, reconnectionErrorListener) {\n    // onReconnecting is called with the number of milliseconds until the next reconnection attempt\n    this.onReconnecting = reconnectingListener;\n    // onReconnected is called when the connection has been reestablished\n    this.onReconnected = reconnectedListener;\n    // onReconnectionError is called with an error when maxReconnectionAttempts has been reached\n    this.onReconnectionError = reconnectionErrorListener;\n  }\n\n  setEventLoops(loops) {\n    this.loops = loops;\n  }\n\n  connect() {\n    if (this.serverUrl === '/') {\n      this.serverUrl = '/janus';\n    }\n    if (this.serverUrl === '/janus') {\n      if (location.protocol === 'https:') {\n        this.serverUrl = 'wss://' + location.host + '/janus';\n      } else {\n        this.serverUrl = 'ws://' + location.host + '/janus';\n      }\n    }\n    debug(`connecting to ${this.serverUrl}`);\n\n    const websocketConnection = new Promise((resolve, reject) => {\n      this.ws = new WebSocket(this.serverUrl, \"janus-protocol\");\n\n      this.session = new mj.JanusSession(this.ws.send.bind(this.ws), { timeoutMs: 40000 });\n\n      this.websocketConnectionPromise = {};\n      this.websocketConnectionPromise.resolve = resolve;\n      this.websocketConnectionPromise.reject = reject;\n\n      this.ws.addEventListener(\"close\", this.onWebsocketClose);\n      this.ws.addEventListener(\"message\", this.onWebsocketMessage);\n\n      this.wsOnOpen = () => {\n        this.ws.removeEventListener(\"open\", this.wsOnOpen);\n        this.onWebsocketOpen()\n          .then(resolve)\n          .catch(reject);\n      };\n\n      this.ws.addEventListener(\"open\", this.wsOnOpen);\n    });\n\n    return Promise.all([websocketConnection, this.updateTimeOffset()]);\n  }\n\n  disconnect() {\n    debug(`disconnecting`);\n\n    clearTimeout(this.reconnectionTimeout);\n\n    this.removeAllOccupants();\n\n    if (this.publisher) {\n      // Close the publisher peer connection. Which also detaches the plugin handle.\n      this.publisher.conn.close();\n      this.publisher = null;\n    }\n\n    if (this.session) {\n      this.session.dispose();\n      this.session = null;\n    }\n\n    if (this.ws) {\n      this.ws.removeEventListener(\"open\", this.wsOnOpen);\n      this.ws.removeEventListener(\"close\", this.onWebsocketClose);\n      this.ws.removeEventListener(\"message\", this.onWebsocketMessage);\n      this.ws.close();\n      this.ws = null;\n    }\n\n    // Now that all RTCPeerConnection closed, be sure to not call\n    // reconnect() again via performDelayedReconnect if previous\n    // RTCPeerConnection was in the failed state.\n    if (this.delayedReconnectTimeout) {\n      clearTimeout(this.delayedReconnectTimeout);\n      this.delayedReconnectTimeout = null;\n    }\n  }\n\n  isDisconnected() {\n    return this.ws === null;\n  }\n\n  async onWebsocketOpen() {\n    // Create the Janus Session\n    await this.session.create();\n\n    // Attach the SFU Plugin and create a RTCPeerConnection for the publisher.\n    // The publisher sends audio and opens two bidirectional data channels.\n    // One reliable datachannel and one unreliable.\n    this.publisher = await this.createPublisher();\n\n    // Call the naf connectSuccess callback before we start receiving WebRTC messages.\n    this.connectSuccess(this.clientId);\n\n    for (let i = 0; i < this.publisher.initialOccupants.length; i++) {\n      const occupantId = this.publisher.initialOccupants[i];\n      if (occupantId === this.clientId) continue; // Happens during non-graceful reconnects due to zombie sessions\n      this.addAvailableOccupant(occupantId);\n    }\n\n    this.syncOccupants();\n  }\n\n  onWebsocketClose(event) {\n    // The connection was closed successfully. Don't try to reconnect.\n    if (event.code === WS_NORMAL_CLOSURE) {\n      return;\n    }\n\n    this.websocketConnectionPromise.reject(event);\n\n    if (!this.isReconnecting) {\n      this.isReconnecting = true;\n      console.warn(\"Janus websocket closed unexpectedly.\");\n      if (this.onReconnecting) {\n        this.onReconnecting(this.reconnectionDelay);\n      }\n\n      this.reconnectionTimeout = setTimeout(() => this.reconnect(), this.reconnectionDelay);\n    }\n  }\n\n  reconnect() {\n    // Dispose of all networked entities and other resources tied to the session.\n    this.disconnect();\n\n    this.connect()\n      .then(() => {\n        this.reconnectionDelay = this.initialReconnectionDelay;\n        this.reconnectionAttempts = 0;\n        this.isReconnecting = false;\n\n        if (this.onReconnected) {\n          this.onReconnected();\n        }\n      })\n      .catch(error => {\n        this.reconnectionDelay += 1000;\n        this.reconnectionAttempts++;\n\n        if (this.reconnectionAttempts > this.maxReconnectionAttempts) {\n          const error = new Error(\n            \"Connection could not be reestablished, exceeded maximum number of reconnection attempts.\"\n          );\n          if (this.onReconnectionError) {\n            return this.onReconnectionError(error);\n          } else {\n            console.warn(error);\n            return;\n          }\n        }\n\n        console.warn(\"Error during reconnect, retrying.\");\n        console.warn(error);\n\n        if (this.onReconnecting) {\n          this.onReconnecting(this.reconnectionDelay);\n        }\n\n        this.reconnectionTimeout = setTimeout(() => this.reconnect(), this.reconnectionDelay);\n      });\n  }\n\n  performDelayedReconnect() {\n    if (this.delayedReconnectTimeout) {\n      clearTimeout(this.delayedReconnectTimeout);\n    }\n\n    this.delayedReconnectTimeout = setTimeout(() => {\n      this.delayedReconnectTimeout = null;\n      this.reconnect();\n    }, 10000);\n  }\n\n  onWebsocketMessage(event) {\n    this.session.receive(JSON.parse(event.data));\n  }\n\n  addAvailableOccupant(occupantId) {\n    if (this.availableOccupants.indexOf(occupantId) === -1) {\n      this.availableOccupants.push(occupantId);\n    }\n  }\n\n  removeAvailableOccupant(occupantId) {\n    const idx = this.availableOccupants.indexOf(occupantId);\n    if (idx !== -1) {\n      this.availableOccupants.splice(idx, 1);\n    }\n  }\n\n  syncOccupants(requestedOccupants) {\n    if (requestedOccupants) {\n      this.requestedOccupants = requestedOccupants;\n    }\n\n    if (!this.requestedOccupants) {\n      return;\n    }\n\n    // Add any requested, available, and non-pending occupants.\n    for (let i = 0; i < this.requestedOccupants.length; i++) {\n      const occupantId = this.requestedOccupants[i];\n      if (!this.occupants[occupantId] && this.availableOccupants.indexOf(occupantId) !== -1 && !this.pendingOccupants.has(occupantId)) {\n        this.addOccupant(occupantId);\n      }\n    }\n\n    // Remove any unrequested and currently added occupants.\n    for (let j = 0; j < this.availableOccupants.length; j++) {\n      const occupantId = this.availableOccupants[j];\n      if (this.occupants[occupantId] && this.requestedOccupants.indexOf(occupantId) === -1) {\n        this.removeOccupant(occupantId);\n      }\n    }\n\n    // Call the Networked AFrame callbacks for the updated occupants list.\n    this.onOccupantsChanged(this.occupants);\n  }\n\n  async addOccupant(occupantId) {\n    this.pendingOccupants.add(occupantId);\n    \n    const availableOccupantsCount = this.availableOccupants.length;\n    if (availableOccupantsCount > AVAILABLE_OCCUPANTS_THRESHOLD) {\n      await randomDelay(0, MAX_SUBSCRIBE_DELAY);\n    }\n  \n    const subscriber = await this.createSubscriber(occupantId);\n    if (subscriber) {\n      if(!this.pendingOccupants.has(occupantId)) {\n        subscriber.conn.close();\n      } else {\n        this.pendingOccupants.delete(occupantId);\n        this.occupantIds.push(occupantId);\n        this.occupants[occupantId] = subscriber;\n\n        this.setMediaStream(occupantId, subscriber.mediaStream);\n\n        // Call the Networked AFrame callbacks for the new occupant.\n        this.onOccupantConnected(occupantId);\n      }\n    }\n  }\n\n  removeAllOccupants() {\n    this.pendingOccupants.clear();\n    for (let i = this.occupantIds.length - 1; i >= 0; i--) {\n      this.removeOccupant(this.occupantIds[i]);\n    }\n  }\n\n  removeOccupant(occupantId) {\n    this.pendingOccupants.delete(occupantId);\n    \n    if (this.occupants[occupantId]) {\n      // Close the subscriber peer connection. Which also detaches the plugin handle.\n      this.occupants[occupantId].conn.close();\n      delete this.occupants[occupantId];\n      \n      this.occupantIds.splice(this.occupantIds.indexOf(occupantId), 1);\n    }\n\n    if (this.mediaStreams[occupantId]) {\n      delete this.mediaStreams[occupantId];\n    }\n\n    if (this.pendingMediaRequests.has(occupantId)) {\n      const msg = \"The user disconnected before the media stream was resolved.\";\n      this.pendingMediaRequests.get(occupantId).audio.reject(msg);\n      this.pendingMediaRequests.get(occupantId).video.reject(msg);\n      this.pendingMediaRequests.delete(occupantId);\n    }\n\n    // Call the Networked AFrame callbacks for the removed occupant.\n    this.onOccupantDisconnected(occupantId);\n  }\n\n  associate(conn, handle) {\n    conn.addEventListener(\"icecandidate\", ev => {\n      handle.sendTrickle(ev.candidate || null).catch(e => error(\"Error trickling ICE: %o\", e));\n    });\n    conn.addEventListener(\"iceconnectionstatechange\", ev => {\n      if (conn.iceConnectionState === \"connected\") {\n        console.log(\"ICE state changed to connected\");\n      }\n      if (conn.iceConnectionState === \"disconnected\") {\n        console.warn(\"ICE state changed to disconnected\");\n      }\n      if (conn.iceConnectionState === \"failed\") {\n        console.warn(\"ICE failure detected. Reconnecting in 10s.\");\n        this.performDelayedReconnect();\n      }\n    })\n\n    // we have to debounce these because janus gets angry if you send it a new SDP before\n    // it's finished processing an existing SDP. in actuality, it seems like this is maybe\n    // too liberal and we need to wait some amount of time after an offer before sending another,\n    // but we don't currently know any good way of detecting exactly how long :(\n    conn.addEventListener(\n      \"negotiationneeded\",\n      debounce(ev => {\n        debug(\"Sending new offer for handle: %o\", handle);\n        var offer = conn.createOffer().then(this.configurePublisherSdp).then(this.fixSafariIceUFrag);\n        var local = offer.then(o => conn.setLocalDescription(o));\n        var remote = offer;\n\n        remote = remote\n          .then(this.fixSafariIceUFrag)\n          .then(j => handle.sendJsep(j))\n          .then(r => conn.setRemoteDescription(r.jsep));\n        return Promise.all([local, remote]).catch(e => error(\"Error negotiating offer: %o\", e));\n      })\n    );\n    handle.on(\n      \"event\",\n      debounce(ev => {\n        var jsep = ev.jsep;\n        if (jsep && jsep.type == \"offer\") {\n          debug(\"Accepting new offer for handle: %o\", handle);\n          var answer = conn\n            .setRemoteDescription(this.configureSubscriberSdp(jsep))\n            .then(_ => conn.createAnswer())\n            .then(this.fixSafariIceUFrag);\n          var local = answer.then(a => conn.setLocalDescription(a));\n          var remote = answer.then(j => handle.sendJsep(j));\n          return Promise.all([local, remote]).catch(e => error(\"Error negotiating answer: %o\", e));\n        } else {\n          // some other kind of event, nothing to do\n          return null;\n        }\n      })\n    );\n  }\n\n  async createPublisher() {\n    var handle = new mj.JanusPluginHandle(this.session);\n    var conn = new RTCPeerConnection(this.peerConnectionConfig || DEFAULT_PEER_CONNECTION_CONFIG);\n\n    debug(\"pub waiting for sfu\");\n    await handle.attach(\"janus.plugin.sfu\", this.loops && this.clientId ? parseInt(this.clientId) % this.loops : undefined);\n\n    this.associate(conn, handle);\n\n    debug(\"pub waiting for data channels & webrtcup\");\n    var webrtcup = new Promise(resolve => handle.on(\"webrtcup\", resolve));\n\n    // Unreliable datachannel: sending and receiving component updates.\n    // Reliable datachannel: sending and recieving entity instantiations.\n    var reliableChannel = conn.createDataChannel(\"reliable\", { ordered: true });\n    var unreliableChannel = conn.createDataChannel(\"unreliable\", {\n      ordered: false,\n      maxRetransmits: 0\n    });\n\n    reliableChannel.addEventListener(\"message\", e => this.onDataChannelMessage(e, \"janus-reliable\"));\n    unreliableChannel.addEventListener(\"message\", e => this.onDataChannelMessage(e, \"janus-unreliable\"));\n\n    await webrtcup;\n    await untilDataChannelOpen(reliableChannel);\n    await untilDataChannelOpen(unreliableChannel);\n\n    // doing this here is sort of a hack around chrome renegotiation weirdness --\n    // if we do it prior to webrtcup, chrome on gear VR will sometimes put a\n    // renegotiation offer in flight while the first offer was still being\n    // processed by janus. we should find some more principled way to figure out\n    // when janus is done in the future.\n    if (this.localMediaStream) {\n      this.localMediaStream.getTracks().forEach(track => {\n        conn.addTrack(track, this.localMediaStream);\n      });\n    }\n\n    // Handle all of the join and leave events.\n    handle.on(\"event\", ev => {\n      var data = ev.plugindata.data;\n      if (data.event == \"join\" && data.room_id == this.room) {\n        if (this.delayedReconnectTimeout) {\n          // Don't create a new RTCPeerConnection, all RTCPeerConnection will be closed in less than 10s.\n          return;\n        }\n        this.addAvailableOccupant(data.user_id);\n        this.syncOccupants();\n      } else if (data.event == \"leave\" && data.room_id == this.room) {\n        this.removeAvailableOccupant(data.user_id);\n        this.removeOccupant(data.user_id);\n      } else if (data.event == \"blocked\") {\n        document.body.dispatchEvent(new CustomEvent(\"blocked\", { detail: { clientId: data.by } }));\n      } else if (data.event == \"unblocked\") {\n        document.body.dispatchEvent(new CustomEvent(\"unblocked\", { detail: { clientId: data.by } }));\n      } else if (data.event === \"data\") {\n        this.onData(JSON.parse(data.body), \"janus-event\");\n      }\n    });\n\n    debug(\"pub waiting for join\");\n\n    // Send join message to janus. Listen for join/leave messages. Automatically subscribe to all users' WebRTC data.\n    var message = await this.sendJoin(handle, {\n      notifications: true,\n      data: true\n    });\n\n    if (!message.plugindata.data.success) {\n      const err = message.plugindata.data.error;\n      console.error(err);\n      // We may get here because of an expired JWT.\n      // Close the connection ourself otherwise janus will close it after\n      // session_timeout because we didn't send any keepalive and this will\n      // trigger a delayed reconnect because of the iceconnectionstatechange\n      // listener for failure state.\n      // Even if the app code calls disconnect in case of error, disconnect\n      // won't close the peer connection because this.publisher is not set.\n      conn.close();\n      throw err;\n    }\n\n    var initialOccupants = message.plugindata.data.response.users[this.room] || [];\n\n    if (initialOccupants.includes(this.clientId)) {\n      console.warn(\"Janus still has previous session for this client. Reconnecting in 10s.\");\n      this.performDelayedReconnect();\n    }\n\n    debug(\"publisher ready\");\n    return {\n      handle,\n      initialOccupants,\n      reliableChannel,\n      unreliableChannel,\n      conn\n    };\n  }\n\n  configurePublisherSdp(jsep) {\n    jsep.sdp = jsep.sdp.replace(/a=fmtp:(109|111).*\\r\\n/g, (line, pt) => {\n      const parameters = Object.assign(sdpUtils.parseFmtp(line), OPUS_PARAMETERS);\n      return sdpUtils.writeFmtp({ payloadType: pt, parameters: parameters });\n    });\n    return jsep;\n  }\n\n  configureSubscriberSdp(jsep) {\n    // todo: consider cleaning up these hacks to use sdputils\n    if (!isH264VideoSupported) {\n      if (navigator.userAgent.indexOf(\"HeadlessChrome\") !== -1) {\n        // HeadlessChrome (e.g. puppeteer) doesn't support webrtc video streams, so we remove those lines from the SDP.\n        jsep.sdp = jsep.sdp.replace(/m=video[^]*m=/, \"m=\");\n      }\n    }\n\n    // TODO: Hack to get video working on Chrome for Android. https://groups.google.com/forum/#!topic/mozilla.dev.media/Ye29vuMTpo8\n    if (navigator.userAgent.indexOf(\"Android\") === -1) {\n      jsep.sdp = jsep.sdp.replace(\n        \"a=rtcp-fb:107 goog-remb\\r\\n\",\n        \"a=rtcp-fb:107 goog-remb\\r\\na=rtcp-fb:107 transport-cc\\r\\na=fmtp:107 level-asymmetry-allowed=1;packetization-mode=1;profile-level-id=42e01f\\r\\n\"\n      );\n    } else {\n      jsep.sdp = jsep.sdp.replace(\n        \"a=rtcp-fb:107 goog-remb\\r\\n\",\n        \"a=rtcp-fb:107 goog-remb\\r\\na=rtcp-fb:107 transport-cc\\r\\na=fmtp:107 level-asymmetry-allowed=1;packetization-mode=1;profile-level-id=42001f\\r\\n\"\n      );\n    }\n    return jsep;\n  }\n\n  async fixSafariIceUFrag(jsep) {\n    // Safari produces a \\n instead of an \\r\\n for the ice-ufrag. See https://github.com/meetecho/janus-gateway/issues/1818\n    jsep.sdp = jsep.sdp.replace(/[^\\r]\\na=ice-ufrag/g, \"\\r\\na=ice-ufrag\");\n    return jsep\n  }\n\n  async createSubscriber(occupantId, maxRetries = 5) {\n    if (this.availableOccupants.indexOf(occupantId) === -1) {\n      console.warn(occupantId + \": cancelled occupant connection, occupant left before subscription negotation.\");\n      return null;\n    }\n\n    var handle = new mj.JanusPluginHandle(this.session);\n    var conn = new RTCPeerConnection(this.peerConnectionConfig || DEFAULT_PEER_CONNECTION_CONFIG);\n\n    debug(occupantId + \": sub waiting for sfu\");\n    await handle.attach(\"janus.plugin.sfu\", this.loops ? parseInt(occupantId) % this.loops : undefined);\n\n    this.associate(conn, handle);\n\n    debug(occupantId + \": sub waiting for join\");\n\n    if (this.availableOccupants.indexOf(occupantId) === -1) {\n      conn.close();\n      console.warn(occupantId + \": cancelled occupant connection, occupant left after attach\");\n      return null;\n    }\n\n    let webrtcFailed = false;\n\n    const webrtcup = new Promise(resolve => {\n      const leftInterval = setInterval(() => {\n        if (this.availableOccupants.indexOf(occupantId) === -1) {\n          clearInterval(leftInterval);\n          resolve();\n        }\n      }, 1000);\n\n      const timeout = setTimeout(() => {\n        clearInterval(leftInterval);\n        webrtcFailed = true;\n        resolve();\n      }, SUBSCRIBE_TIMEOUT_MS);\n\n      handle.on(\"webrtcup\", () => {\n        clearTimeout(timeout);\n        clearInterval(leftInterval);\n        resolve();\n      });\n    });\n\n    // Send join message to janus. Don't listen for join/leave messages. Subscribe to the occupant's media.\n    // Janus should send us an offer for this occupant's media in response to this.\n    await this.sendJoin(handle, { media: occupantId });\n\n    if (this.availableOccupants.indexOf(occupantId) === -1) {\n      conn.close();\n      console.warn(occupantId + \": cancelled occupant connection, occupant left after join\");\n      return null;\n    }\n\n    debug(occupantId + \": sub waiting for webrtcup\");\n    await webrtcup;\n\n    if (this.availableOccupants.indexOf(occupantId) === -1) {\n      conn.close();\n      console.warn(occupantId + \": cancel occupant connection, occupant left during or after webrtcup\");\n      return null;\n    }\n\n    if (webrtcFailed) {\n      conn.close();\n      if (maxRetries > 0) {\n        console.warn(occupantId + \": webrtc up timed out, retrying\");\n        return this.createSubscriber(occupantId, maxRetries - 1);\n      } else {\n        console.warn(occupantId + \": webrtc up timed out\");\n        return null;\n      }\n    }\n\n    if (isSafari && !this._iOSHackDelayedInitialPeer) {\n      // HACK: the first peer on Safari during page load can fail to work if we don't\n      // wait some time before continuing here. See: https://github.com/mozilla/hubs/pull/1692\n      await (new Promise((resolve) => setTimeout(resolve, 3000)));\n      this._iOSHackDelayedInitialPeer = true;\n    }\n\n    var mediaStream = new MediaStream();\n    var receivers = conn.getReceivers();\n    receivers.forEach(receiver => {\n      if (receiver.track) {\n        mediaStream.addTrack(receiver.track);\n      }\n    });\n    if (mediaStream.getTracks().length === 0) {\n      mediaStream = null;\n    }\n\n    debug(occupantId + \": subscriber ready\");\n    return {\n      handle,\n      mediaStream,\n      conn\n    };\n  }\n\n  sendJoin(handle, subscribe) {\n    return handle.sendMessage({\n      kind: \"join\",\n      room_id: this.room,\n      user_id: this.clientId,\n      subscribe,\n      token: this.joinToken\n    });\n  }\n\n  toggleFreeze() {\n    if (this.frozen) {\n      this.unfreeze();\n    } else {\n      this.freeze();\n    }\n  }\n\n  freeze() {\n    this.frozen = true;\n  }\n\n  unfreeze() {\n    this.frozen = false;\n    this.flushPendingUpdates();\n  }\n\n  dataForUpdateMultiMessage(networkId, message) {\n    // \"d\" is an array of entity datas, where each item in the array represents a unique entity and contains\n    // metadata for the entity, and an array of components that have been updated on the entity.\n    // This method finds the data corresponding to the given networkId.\n    for (let i = 0, l = message.data.d.length; i < l; i++) {\n      const data = message.data.d[i];\n\n      if (data.networkId === networkId) {\n        return data;\n      }\n    }\n\n    return null;\n  }\n\n  getPendingData(networkId, message) {\n    if (!message) return null;\n\n    let data = message.dataType === \"um\" ? this.dataForUpdateMultiMessage(networkId, message) : message.data;\n\n    // Ignore messages relating to users who have disconnected since freezing, their entities\n    // will have aleady been removed by NAF.\n    // Note that delete messages have no \"owner\" so we have to check for that as well.\n    if (data.owner && !this.occupants[data.owner]) return null;\n\n    // Ignore messages from users that we may have blocked while frozen.\n    if (data.owner && this.blockedClients.has(data.owner)) return null;\n\n    return data\n  }\n\n  // Used externally\n  getPendingDataForNetworkId(networkId) {\n    return this.getPendingData(networkId, this.frozenUpdates.get(networkId));\n  }\n\n  flushPendingUpdates() {\n    for (const [networkId, message] of this.frozenUpdates) {\n      let data = this.getPendingData(networkId, message);\n      if (!data) continue;\n\n      // Override the data type on \"um\" messages types, since we extract entity updates from \"um\" messages into\n      // individual frozenUpdates in storeSingleMessage.\n      const dataType = message.dataType === \"um\" ? \"u\" : message.dataType;\n\n      this.onOccupantMessage(null, dataType, data, message.source);\n    }\n    this.frozenUpdates.clear();\n  }\n\n  storeMessage(message) {\n    if (message.dataType === \"um\") { // UpdateMulti\n      for (let i = 0, l = message.data.d.length; i < l; i++) {\n        this.storeSingleMessage(message, i);\n      }\n    } else {\n      this.storeSingleMessage(message);\n    }\n  }\n\n  storeSingleMessage(message, index) {\n    const data = index !== undefined ? message.data.d[index] : message.data;\n    const dataType = message.dataType;\n    const source = message.source;\n\n    const networkId = data.networkId;\n\n    if (!this.frozenUpdates.has(networkId)) {\n      this.frozenUpdates.set(networkId, message);\n    } else {\n      const storedMessage = this.frozenUpdates.get(networkId);\n      const storedData = storedMessage.dataType === \"um\" ? this.dataForUpdateMultiMessage(networkId, storedMessage) : storedMessage.data;\n\n      // Avoid updating components if the entity data received did not come from the current owner.\n      const isOutdatedMessage = data.lastOwnerTime < storedData.lastOwnerTime;\n      const isContemporaneousMessage = data.lastOwnerTime === storedData.lastOwnerTime;\n      if (isOutdatedMessage || (isContemporaneousMessage && storedData.owner > data.owner)) {\n        return;\n      }\n\n      if (dataType === \"r\") {\n        const createdWhileFrozen = storedData && storedData.isFirstSync;\n        if (createdWhileFrozen) {\n          // If the entity was created and deleted while frozen, don't bother conveying anything to the consumer.\n          this.frozenUpdates.delete(networkId);\n        } else {\n          // Delete messages override any other messages for this entity\n          this.frozenUpdates.set(networkId, message);\n        }\n      } else {\n        // merge in component updates\n        if (storedData.components && data.components) {\n          Object.assign(storedData.components, data.components);\n        }\n      }\n    }\n  }\n\n  onDataChannelMessage(e, source) {\n    this.onData(JSON.parse(e.data), source);\n  }\n\n  onData(message, source) {\n    if (debug.enabled) {\n      debug(`DC in: ${message}`);\n    }\n\n    if (!message.dataType) return;\n\n    message.source = source;\n\n    if (this.frozen) {\n      this.storeMessage(message);\n    } else {\n      this.onOccupantMessage(null, message.dataType, message.data, message.source);\n    }\n  }\n\n  shouldStartConnectionTo(client) {\n    return true;\n  }\n\n  startStreamConnection(client) {}\n\n  closeStreamConnection(client) {}\n\n  getConnectStatus(clientId) {\n    return this.occupants[clientId] ? NAF.adapters.IS_CONNECTED : NAF.adapters.NOT_CONNECTED;\n  }\n\n  async updateTimeOffset() {\n    if (this.isDisconnected()) return;\n\n    const clientSentTime = Date.now();\n\n    const res = await fetch(document.location.href, {\n      method: \"HEAD\",\n      cache: \"no-cache\"\n    });\n\n    const precision = 1000;\n    const serverReceivedTime = new Date(res.headers.get(\"Date\")).getTime() + precision / 2;\n    const clientReceivedTime = Date.now();\n    const serverTime = serverReceivedTime + (clientReceivedTime - clientSentTime) / 2;\n    const timeOffset = serverTime - clientReceivedTime;\n\n    this.serverTimeRequests++;\n\n    if (this.serverTimeRequests <= 10) {\n      this.timeOffsets.push(timeOffset);\n    } else {\n      this.timeOffsets[this.serverTimeRequests % 10] = timeOffset;\n    }\n\n    this.avgTimeOffset = this.timeOffsets.reduce((acc, offset) => (acc += offset), 0) / this.timeOffsets.length;\n\n    if (this.serverTimeRequests > 10) {\n      debug(`new server time offset: ${this.avgTimeOffset}ms`);\n      setTimeout(() => this.updateTimeOffset(), 5 * 60 * 1000); // Sync clock every 5 minutes.\n    } else {\n      this.updateTimeOffset();\n    }\n  }\n\n  getServerTime() {\n    return Date.now() + this.avgTimeOffset;\n  }\n\n  getMediaStream(clientId, type = \"audio\") {\n    if (this.mediaStreams[clientId]) {\n      debug(`Already had ${type} for ${clientId}`);\n      return Promise.resolve(this.mediaStreams[clientId][type]);\n    } else {\n      debug(`Waiting on ${type} for ${clientId}`);\n      if (!this.pendingMediaRequests.has(clientId)) {\n        this.pendingMediaRequests.set(clientId, {});\n\n        const audioPromise = new Promise((resolve, reject) => {\n          this.pendingMediaRequests.get(clientId).audio = { resolve, reject };\n        });\n        const videoPromise = new Promise((resolve, reject) => {\n          this.pendingMediaRequests.get(clientId).video = { resolve, reject };\n        });\n\n        this.pendingMediaRequests.get(clientId).audio.promise = audioPromise;\n        this.pendingMediaRequests.get(clientId).video.promise = videoPromise;\n\n        audioPromise.catch(e => console.warn(`${clientId} getMediaStream Audio Error`, e));\n        videoPromise.catch(e => console.warn(`${clientId} getMediaStream Video Error`, e));\n      }\n      return this.pendingMediaRequests.get(clientId)[type].promise;\n    }\n  }\n\n  setMediaStream(clientId, stream) {\n    // Safari doesn't like it when you use single a mixed media stream where one of the tracks is inactive, so we\n    // split the tracks into two streams.\n    const audioStream = new MediaStream();\n    try {\n    stream.getAudioTracks().forEach(track => audioStream.addTrack(track));\n\n    } catch(e) {\n      console.warn(`${clientId} setMediaStream Audio Error`, e);\n    }\n    const videoStream = new MediaStream();\n    try {\n    stream.getVideoTracks().forEach(track => videoStream.addTrack(track));\n\n    } catch (e) {\n      console.warn(`${clientId} setMediaStream Video Error`, e);\n    }\n\n    this.mediaStreams[clientId] = { audio: audioStream, video: videoStream };\n\n    // Resolve the promise for the user's media stream if it exists.\n    if (this.pendingMediaRequests.has(clientId)) {\n      this.pendingMediaRequests.get(clientId).audio.resolve(audioStream);\n      this.pendingMediaRequests.get(clientId).video.resolve(videoStream);\n    }\n  }\n\n  getLocalMediaStream() {\n    return this.localMediaStream;\n  }\n\n  async setLocalMediaStream(stream) {\n    // our job here is to make sure the connection winds up with RTP senders sending the stuff in this stream,\n    // and not the stuff that isn't in this stream. strategy is to replace existing tracks if we can, add tracks\n    // that we can't replace, and disable tracks that don't exist anymore.\n\n    // note that we don't ever remove a track from the stream -- since Janus doesn't support Unified Plan, we absolutely\n    // can't wind up with a SDP that has >1 audio or >1 video tracks, even if one of them is inactive (what you get if\n    // you remove a track from an existing stream.)\n    if (this.publisher && this.publisher.conn) {\n      const existingSenders = this.publisher.conn.getSenders();\n      const newSenders = [];\n      const tracks = stream.getTracks();\n\n      for (let i = 0; i < tracks.length; i++) {\n        const t = tracks[i];\n        const sender = existingSenders.find(s => s.track != null && s.track.kind == t.kind);\n\n        if (sender != null) {\n          if (sender.replaceTrack) {\n            await sender.replaceTrack(t);\n          } else {\n            // Fallback for browsers that don't support replaceTrack. At this time of this writing\n            // most browsers support it, and testing this code path seems to not work properly\n            // in Chrome anymore.\n            stream.removeTrack(sender.track);\n            stream.addTrack(t);\n          }\n          newSenders.push(sender);\n        } else {\n          newSenders.push(this.publisher.conn.addTrack(t, stream));\n        }\n      }\n      existingSenders.forEach(s => {\n        if (!newSenders.includes(s)) {\n          s.track.enabled = false;\n        }\n      });\n    }\n    this.localMediaStream = stream;\n    this.setMediaStream(this.clientId, stream);\n  }\n\n  enableMicrophone(enabled) {\n    if (this.publisher && this.publisher.conn) {\n      this.publisher.conn.getSenders().forEach(s => {\n        if (s.track.kind == \"audio\") {\n          s.track.enabled = enabled;\n        }\n      });\n    }\n  }\n\n  sendData(clientId, dataType, data) {\n    if (!this.publisher) {\n      console.warn(\"sendData called without a publisher\");\n    } else {\n      switch (this.unreliableTransport) {\n        case \"websocket\":\n          if (this.ws.readyState === 1) { // OPEN\n            this.publisher.handle.sendMessage({ kind: \"data\", body: JSON.stringify({ dataType, data }), whom: clientId });\n          }\n          break;\n        case \"datachannel\":\n          if (this.publisher.unreliableChannel.readyState === \"open\") {\n            this.publisher.unreliableChannel.send(JSON.stringify({ clientId, dataType, data }));\n          }\n          break;\n        default:\n          this.unreliableTransport(clientId, dataType, data);\n          break;\n      }\n    }\n  }\n\n  sendDataGuaranteed(clientId, dataType, data) {\n    if (!this.publisher) {\n      console.warn(\"sendDataGuaranteed called without a publisher\");\n    } else {\n      switch (this.reliableTransport) {\n        case \"websocket\":\n          if (this.ws.readyState === 1) { // OPEN\n            this.publisher.handle.sendMessage({ kind: \"data\", body: JSON.stringify({ dataType, data }), whom: clientId });\n          }\n          break;\n        case \"datachannel\":\n          if (this.publisher.reliableChannel.readyState === \"open\") {\n            this.publisher.reliableChannel.send(JSON.stringify({ clientId, dataType, data }));\n          }\n          break;\n        default:\n          this.reliableTransport(clientId, dataType, data);\n          break;\n      }\n    }\n  }\n\n  broadcastData(dataType, data) {\n    if (!this.publisher) {\n      console.warn(\"broadcastData called without a publisher\");\n    } else {\n      switch (this.unreliableTransport) {\n        case \"websocket\":\n          if (this.ws.readyState === 1) { // OPEN\n            this.publisher.handle.sendMessage({ kind: \"data\", body: JSON.stringify({ dataType, data }) });\n          }\n          break;\n        case \"datachannel\":\n          if (this.publisher.unreliableChannel.readyState === \"open\") {\n            this.publisher.unreliableChannel.send(JSON.stringify({ dataType, data }));\n          }\n          break;\n        default:\n          this.unreliableTransport(undefined, dataType, data);\n          break;\n      }\n    }\n  }\n\n  broadcastDataGuaranteed(dataType, data) {\n    if (!this.publisher) {\n      console.warn(\"broadcastDataGuaranteed called without a publisher\");\n    } else {\n      switch (this.reliableTransport) {\n        case \"websocket\":\n          if (this.ws.readyState === 1) { // OPEN\n            this.publisher.handle.sendMessage({ kind: \"data\", body: JSON.stringify({ dataType, data }) });\n          }\n          break;\n        case \"datachannel\":\n          if (this.publisher.reliableChannel.readyState === \"open\") {\n            this.publisher.reliableChannel.send(JSON.stringify({ dataType, data }));\n          }\n          break;\n        default:\n          this.reliableTransport(undefined, dataType, data);\n          break;\n      }\n    }\n  }\n\n  kick(clientId, permsToken) {\n    return this.publisher.handle.sendMessage({ kind: \"kick\", room_id: this.room, user_id: clientId, token: permsToken }).then(() => {\n      document.body.dispatchEvent(new CustomEvent(\"kicked\", { detail: { clientId: clientId } }));\n    });\n  }\n\n  block(clientId) {\n    return this.publisher.handle.sendMessage({ kind: \"block\", whom: clientId }).then(() => {\n      this.blockedClients.set(clientId, true);\n      document.body.dispatchEvent(new CustomEvent(\"blocked\", { detail: { clientId: clientId } }));\n    });\n  }\n\n  unblock(clientId) {\n    return this.publisher.handle.sendMessage({ kind: \"unblock\", whom: clientId }).then(() => {\n      this.blockedClients.delete(clientId);\n      document.body.dispatchEvent(new CustomEvent(\"unblocked\", { detail: { clientId: clientId } }));\n    });\n  }\n}\n\nNAF.adapters.register(\"janus\", JanusAdapter);\n\nmodule.exports = JanusAdapter;\n","/* eslint-env browser */\n\n/**\n * This is the web browser implementation of `debug()`.\n */\n\nexports.formatArgs = formatArgs;\nexports.save = save;\nexports.load = load;\nexports.useColors = useColors;\nexports.storage = localstorage();\nexports.destroy = (() => {\n\tlet warned = false;\n\n\treturn () => {\n\t\tif (!warned) {\n\t\t\twarned = true;\n\t\t\tconsole.warn('Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`.');\n\t\t}\n\t};\n})();\n\n/**\n * Colors.\n */\n\nexports.colors = [\n\t'#0000CC',\n\t'#0000FF',\n\t'#0033CC',\n\t'#0033FF',\n\t'#0066CC',\n\t'#0066FF',\n\t'#0099CC',\n\t'#0099FF',\n\t'#00CC00',\n\t'#00CC33',\n\t'#00CC66',\n\t'#00CC99',\n\t'#00CCCC',\n\t'#00CCFF',\n\t'#3300CC',\n\t'#3300FF',\n\t'#3333CC',\n\t'#3333FF',\n\t'#3366CC',\n\t'#3366FF',\n\t'#3399CC',\n\t'#3399FF',\n\t'#33CC00',\n\t'#33CC33',\n\t'#33CC66',\n\t'#33CC99',\n\t'#33CCCC',\n\t'#33CCFF',\n\t'#6600CC',\n\t'#6600FF',\n\t'#6633CC',\n\t'#6633FF',\n\t'#66CC00',\n\t'#66CC33',\n\t'#9900CC',\n\t'#9900FF',\n\t'#9933CC',\n\t'#9933FF',\n\t'#99CC00',\n\t'#99CC33',\n\t'#CC0000',\n\t'#CC0033',\n\t'#CC0066',\n\t'#CC0099',\n\t'#CC00CC',\n\t'#CC00FF',\n\t'#CC3300',\n\t'#CC3333',\n\t'#CC3366',\n\t'#CC3399',\n\t'#CC33CC',\n\t'#CC33FF',\n\t'#CC6600',\n\t'#CC6633',\n\t'#CC9900',\n\t'#CC9933',\n\t'#CCCC00',\n\t'#CCCC33',\n\t'#FF0000',\n\t'#FF0033',\n\t'#FF0066',\n\t'#FF0099',\n\t'#FF00CC',\n\t'#FF00FF',\n\t'#FF3300',\n\t'#FF3333',\n\t'#FF3366',\n\t'#FF3399',\n\t'#FF33CC',\n\t'#FF33FF',\n\t'#FF6600',\n\t'#FF6633',\n\t'#FF9900',\n\t'#FF9933',\n\t'#FFCC00',\n\t'#FFCC33'\n];\n\n/**\n * Currently only WebKit-based Web Inspectors, Firefox >= v31,\n * and the Firebug extension (any Firefox version) are known\n * to support \"%c\" CSS customizations.\n *\n * TODO: add a `localStorage` variable to explicitly enable/disable colors\n */\n\n// eslint-disable-next-line complexity\nfunction useColors() {\n\t// NB: In an Electron preload script, document will be defined but not fully\n\t// initialized. Since we know we're in Chrome, we'll just detect this case\n\t// explicitly\n\tif (typeof window !== 'undefined' && window.process && (window.process.type === 'renderer' || window.process.__nwjs)) {\n\t\treturn true;\n\t}\n\n\t// Internet Explorer and Edge do not support colors.\n\tif (typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/(edge|trident)\\/(\\d+)/)) {\n\t\treturn false;\n\t}\n\n\tlet m;\n\n\t// Is webkit? http://stackoverflow.com/a/16459606/376773\n\t// document is undefined in react-native: https://github.com/facebook/react-native/pull/1632\n\t// eslint-disable-next-line no-return-assign\n\treturn (typeof document !== 'undefined' && document.documentElement && document.documentElement.style && document.documentElement.style.WebkitAppearance) ||\n\t\t// Is firebug? http://stackoverflow.com/a/398120/376773\n\t\t(typeof window !== 'undefined' && window.console && (window.console.firebug || (window.console.exception && window.console.table))) ||\n\t\t// Is firefox >= v31?\n\t\t// https://developer.mozilla.org/en-US/docs/Tools/Web_Console#Styling_messages\n\t\t(typeof navigator !== 'undefined' && navigator.userAgent && (m = navigator.userAgent.toLowerCase().match(/firefox\\/(\\d+)/)) && parseInt(m[1], 10) >= 31) ||\n\t\t// Double check webkit in userAgent just in case we are in a worker\n\t\t(typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/applewebkit\\/(\\d+)/));\n}\n\n/**\n * Colorize log arguments if enabled.\n *\n * @api public\n */\n\nfunction formatArgs(args) {\n\targs[0] = (this.useColors ? '%c' : '') +\n\t\tthis.namespace +\n\t\t(this.useColors ? ' %c' : ' ') +\n\t\targs[0] +\n\t\t(this.useColors ? '%c ' : ' ') +\n\t\t'+' + module.exports.humanize(this.diff);\n\n\tif (!this.useColors) {\n\t\treturn;\n\t}\n\n\tconst c = 'color: ' + this.color;\n\targs.splice(1, 0, c, 'color: inherit');\n\n\t// The final \"%c\" is somewhat tricky, because there could be other\n\t// arguments passed either before or after the %c, so we need to\n\t// figure out the correct index to insert the CSS into\n\tlet index = 0;\n\tlet lastC = 0;\n\targs[0].replace(/%[a-zA-Z%]/g, match => {\n\t\tif (match === '%%') {\n\t\t\treturn;\n\t\t}\n\t\tindex++;\n\t\tif (match === '%c') {\n\t\t\t// We only are interested in the *last* %c\n\t\t\t// (the user may have provided their own)\n\t\t\tlastC = index;\n\t\t}\n\t});\n\n\targs.splice(lastC, 0, c);\n}\n\n/**\n * Invokes `console.debug()` when available.\n * No-op when `console.debug` is not a \"function\".\n * If `console.debug` is not available, falls back\n * to `console.log`.\n *\n * @api public\n */\nexports.log = console.debug || console.log || (() => {});\n\n/**\n * Save `namespaces`.\n *\n * @param {String} namespaces\n * @api private\n */\nfunction save(namespaces) {\n\ttry {\n\t\tif (namespaces) {\n\t\t\texports.storage.setItem('debug', namespaces);\n\t\t} else {\n\t\t\texports.storage.removeItem('debug');\n\t\t}\n\t} catch (error) {\n\t\t// Swallow\n\t\t// XXX (@Qix-) should we be logging these?\n\t}\n}\n\n/**\n * Load `namespaces`.\n *\n * @return {String} returns the previously persisted debug modes\n * @api private\n */\nfunction load() {\n\tlet r;\n\ttry {\n\t\tr = exports.storage.getItem('debug');\n\t} catch (error) {\n\t\t// Swallow\n\t\t// XXX (@Qix-) should we be logging these?\n\t}\n\n\t// If debug isn't set in LS, and we're in Electron, try to load $DEBUG\n\tif (!r && typeof process !== 'undefined' && 'env' in process) {\n\t\tr = process.env.DEBUG;\n\t}\n\n\treturn r;\n}\n\n/**\n * Localstorage attempts to return the localstorage.\n *\n * This is necessary because safari throws\n * when a user disables cookies/localstorage\n * and you attempt to access it.\n *\n * @return {LocalStorage}\n * @api private\n */\n\nfunction localstorage() {\n\ttry {\n\t\t// TVMLKit (Apple TV JS Runtime) does not have a window object, just localStorage in the global context\n\t\t// The Browser also has localStorage in the global context.\n\t\treturn localStorage;\n\t} catch (error) {\n\t\t// Swallow\n\t\t// XXX (@Qix-) should we be logging these?\n\t}\n}\n\nmodule.exports = require('./common')(exports);\n\nconst {formatters} = module.exports;\n\n/**\n * Map %j to `JSON.stringify()`, since no Web Inspectors do that by default.\n */\n\nformatters.j = function (v) {\n\ttry {\n\t\treturn JSON.stringify(v);\n\t} catch (error) {\n\t\treturn '[UnexpectedJSONParseError]: ' + error.message;\n\t}\n};\n","\n/**\n * This is the common logic for both the Node.js and web browser\n * implementations of `debug()`.\n */\n\nfunction setup(env) {\n\tcreateDebug.debug = createDebug;\n\tcreateDebug.default = createDebug;\n\tcreateDebug.coerce = coerce;\n\tcreateDebug.disable = disable;\n\tcreateDebug.enable = enable;\n\tcreateDebug.enabled = enabled;\n\tcreateDebug.humanize = require('ms');\n\tcreateDebug.destroy = destroy;\n\n\tObject.keys(env).forEach(key => {\n\t\tcreateDebug[key] = env[key];\n\t});\n\n\t/**\n\t* The currently active debug mode names, and names to skip.\n\t*/\n\n\tcreateDebug.names = [];\n\tcreateDebug.skips = [];\n\n\t/**\n\t* Map of special \"%n\" handling functions, for the debug \"format\" argument.\n\t*\n\t* Valid key names are a single, lower or upper-case letter, i.e. \"n\" and \"N\".\n\t*/\n\tcreateDebug.formatters = {};\n\n\t/**\n\t* Selects a color for a debug namespace\n\t* @param {String} namespace The namespace string for the debug instance to be colored\n\t* @return {Number|String} An ANSI color code for the given namespace\n\t* @api private\n\t*/\n\tfunction selectColor(namespace) {\n\t\tlet hash = 0;\n\n\t\tfor (let i = 0; i < namespace.length; i++) {\n\t\t\thash = ((hash << 5) - hash) + namespace.charCodeAt(i);\n\t\t\thash |= 0; // Convert to 32bit integer\n\t\t}\n\n\t\treturn createDebug.colors[Math.abs(hash) % createDebug.colors.length];\n\t}\n\tcreateDebug.selectColor = selectColor;\n\n\t/**\n\t* Create a debugger with the given `namespace`.\n\t*\n\t* @param {String} namespace\n\t* @return {Function}\n\t* @api public\n\t*/\n\tfunction createDebug(namespace) {\n\t\tlet prevTime;\n\t\tlet enableOverride = null;\n\t\tlet namespacesCache;\n\t\tlet enabledCache;\n\n\t\tfunction debug(...args) {\n\t\t\t// Disabled?\n\t\t\tif (!debug.enabled) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst self = debug;\n\n\t\t\t// Set `diff` timestamp\n\t\t\tconst curr = Number(new Date());\n\t\t\tconst ms = curr - (prevTime || curr);\n\t\t\tself.diff = ms;\n\t\t\tself.prev = prevTime;\n\t\t\tself.curr = curr;\n\t\t\tprevTime = curr;\n\n\t\t\targs[0] = createDebug.coerce(args[0]);\n\n\t\t\tif (typeof args[0] !== 'string') {\n\t\t\t\t// Anything else let's inspect with %O\n\t\t\t\targs.unshift('%O');\n\t\t\t}\n\n\t\t\t// Apply any `formatters` transformations\n\t\t\tlet index = 0;\n\t\t\targs[0] = args[0].replace(/%([a-zA-Z%])/g, (match, format) => {\n\t\t\t\t// If we encounter an escaped % then don't increase the array index\n\t\t\t\tif (match === '%%') {\n\t\t\t\t\treturn '%';\n\t\t\t\t}\n\t\t\t\tindex++;\n\t\t\t\tconst formatter = createDebug.formatters[format];\n\t\t\t\tif (typeof formatter === 'function') {\n\t\t\t\t\tconst val = args[index];\n\t\t\t\t\tmatch = formatter.call(self, val);\n\n\t\t\t\t\t// Now we need to remove `args[index]` since it's inlined in the `format`\n\t\t\t\t\targs.splice(index, 1);\n\t\t\t\t\tindex--;\n\t\t\t\t}\n\t\t\t\treturn match;\n\t\t\t});\n\n\t\t\t// Apply env-specific formatting (colors, etc.)\n\t\t\tcreateDebug.formatArgs.call(self, args);\n\n\t\t\tconst logFn = self.log || createDebug.log;\n\t\t\tlogFn.apply(self, args);\n\t\t}\n\n\t\tdebug.namespace = namespace;\n\t\tdebug.useColors = createDebug.useColors();\n\t\tdebug.color = createDebug.selectColor(namespace);\n\t\tdebug.extend = extend;\n\t\tdebug.destroy = createDebug.destroy; // XXX Temporary. Will be removed in the next major release.\n\n\t\tObject.defineProperty(debug, 'enabled', {\n\t\t\tenumerable: true,\n\t\t\tconfigurable: false,\n\t\t\tget: () => {\n\t\t\t\tif (enableOverride !== null) {\n\t\t\t\t\treturn enableOverride;\n\t\t\t\t}\n\t\t\t\tif (namespacesCache !== createDebug.namespaces) {\n\t\t\t\t\tnamespacesCache = createDebug.namespaces;\n\t\t\t\t\tenabledCache = createDebug.enabled(namespace);\n\t\t\t\t}\n\n\t\t\t\treturn enabledCache;\n\t\t\t},\n\t\t\tset: v => {\n\t\t\t\tenableOverride = v;\n\t\t\t}\n\t\t});\n\n\t\t// Env-specific initialization logic for debug instances\n\t\tif (typeof createDebug.init === 'function') {\n\t\t\tcreateDebug.init(debug);\n\t\t}\n\n\t\treturn debug;\n\t}\n\n\tfunction extend(namespace, delimiter) {\n\t\tconst newDebug = createDebug(this.namespace + (typeof delimiter === 'undefined' ? ':' : delimiter) + namespace);\n\t\tnewDebug.log = this.log;\n\t\treturn newDebug;\n\t}\n\n\t/**\n\t* Enables a debug mode by namespaces. This can include modes\n\t* separated by a colon and wildcards.\n\t*\n\t* @param {String} namespaces\n\t* @api public\n\t*/\n\tfunction enable(namespaces) {\n\t\tcreateDebug.save(namespaces);\n\t\tcreateDebug.namespaces = namespaces;\n\n\t\tcreateDebug.names = [];\n\t\tcreateDebug.skips = [];\n\n\t\tconst split = (typeof namespaces === 'string' ? namespaces : '')\n\t\t\t.trim()\n\t\t\t.replace(' ', ',')\n\t\t\t.split(',')\n\t\t\t.filter(Boolean);\n\n\t\tfor (const ns of split) {\n\t\t\tif (ns[0] === '-') {\n\t\t\t\tcreateDebug.skips.push(ns.slice(1));\n\t\t\t} else {\n\t\t\t\tcreateDebug.names.push(ns);\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Checks if the given string matches a namespace template, honoring\n\t * asterisks as wildcards.\n\t *\n\t * @param {String} search\n\t * @param {String} template\n\t * @return {Boolean}\n\t */\n\tfunction matchesTemplate(search, template) {\n\t\tlet searchIndex = 0;\n\t\tlet templateIndex = 0;\n\t\tlet starIndex = -1;\n\t\tlet matchIndex = 0;\n\n\t\twhile (searchIndex < search.length) {\n\t\t\tif (templateIndex < template.length && (template[templateIndex] === search[searchIndex] || template[templateIndex] === '*')) {\n\t\t\t\t// Match character or proceed with wildcard\n\t\t\t\tif (template[templateIndex] === '*') {\n\t\t\t\t\tstarIndex = templateIndex;\n\t\t\t\t\tmatchIndex = searchIndex;\n\t\t\t\t\ttemplateIndex++; // Skip the '*'\n\t\t\t\t} else {\n\t\t\t\t\tsearchIndex++;\n\t\t\t\t\ttemplateIndex++;\n\t\t\t\t}\n\t\t\t} else if (starIndex !== -1) { // eslint-disable-line no-negated-condition\n\t\t\t\t// Backtrack to the last '*' and try to match more characters\n\t\t\t\ttemplateIndex = starIndex + 1;\n\t\t\t\tmatchIndex++;\n\t\t\t\tsearchIndex = matchIndex;\n\t\t\t} else {\n\t\t\t\treturn false; // No match\n\t\t\t}\n\t\t}\n\n\t\t// Handle trailing '*' in template\n\t\twhile (templateIndex < template.length && template[templateIndex] === '*') {\n\t\t\ttemplateIndex++;\n\t\t}\n\n\t\treturn templateIndex === template.length;\n\t}\n\n\t/**\n\t* Disable debug output.\n\t*\n\t* @return {String} namespaces\n\t* @api public\n\t*/\n\tfunction disable() {\n\t\tconst namespaces = [\n\t\t\t...createDebug.names,\n\t\t\t...createDebug.skips.map(namespace => '-' + namespace)\n\t\t].join(',');\n\t\tcreateDebug.enable('');\n\t\treturn namespaces;\n\t}\n\n\t/**\n\t* Returns true if the given mode name is enabled, false otherwise.\n\t*\n\t* @param {String} name\n\t* @return {Boolean}\n\t* @api public\n\t*/\n\tfunction enabled(name) {\n\t\tfor (const skip of createDebug.skips) {\n\t\t\tif (matchesTemplate(name, skip)) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\tfor (const ns of createDebug.names) {\n\t\t\tif (matchesTemplate(name, ns)) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\n\t\treturn false;\n\t}\n\n\t/**\n\t* Coerce `val`.\n\t*\n\t* @param {Mixed} val\n\t* @return {Mixed}\n\t* @api private\n\t*/\n\tfunction coerce(val) {\n\t\tif (val instanceof Error) {\n\t\t\treturn val.stack || val.message;\n\t\t}\n\t\treturn val;\n\t}\n\n\t/**\n\t* XXX DO NOT USE. This is a temporary stub function.\n\t* XXX It WILL be removed in the next major release.\n\t*/\n\tfunction destroy() {\n\t\tconsole.warn('Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`.');\n\t}\n\n\tcreateDebug.enable(createDebug.load());\n\n\treturn createDebug;\n}\n\nmodule.exports = setup;\n","/**\n * Helpers.\n */\n\nvar s = 1000;\nvar m = s * 60;\nvar h = m * 60;\nvar d = h * 24;\nvar w = d * 7;\nvar y = d * 365.25;\n\n/**\n * Parse or format the given `val`.\n *\n * Options:\n *\n *  - `long` verbose formatting [false]\n *\n * @param {String|Number} val\n * @param {Object} [options]\n * @throws {Error} throw an error if val is not a non-empty string or a number\n * @return {String|Number}\n * @api public\n */\n\nmodule.exports = function (val, options) {\n  options = options || {};\n  var type = typeof val;\n  if (type === 'string' && val.length > 0) {\n    return parse(val);\n  } else if (type === 'number' && isFinite(val)) {\n    return options.long ? fmtLong(val) : fmtShort(val);\n  }\n  throw new Error(\n    'val is not a non-empty string or a valid number. val=' +\n      JSON.stringify(val)\n  );\n};\n\n/**\n * Parse the given `str` and return milliseconds.\n *\n * @param {String} str\n * @return {Number}\n * @api private\n */\n\nfunction parse(str) {\n  str = String(str);\n  if (str.length > 100) {\n    return;\n  }\n  var match = /^(-?(?:\\d+)?\\.?\\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|weeks?|w|years?|yrs?|y)?$/i.exec(\n    str\n  );\n  if (!match) {\n    return;\n  }\n  var n = parseFloat(match[1]);\n  var type = (match[2] || 'ms').toLowerCase();\n  switch (type) {\n    case 'years':\n    case 'year':\n    case 'yrs':\n    case 'yr':\n    case 'y':\n      return n * y;\n    case 'weeks':\n    case 'week':\n    case 'w':\n      return n * w;\n    case 'days':\n    case 'day':\n    case 'd':\n      return n * d;\n    case 'hours':\n    case 'hour':\n    case 'hrs':\n    case 'hr':\n    case 'h':\n      return n * h;\n    case 'minutes':\n    case 'minute':\n    case 'mins':\n    case 'min':\n    case 'm':\n      return n * m;\n    case 'seconds':\n    case 'second':\n    case 'secs':\n    case 'sec':\n    case 's':\n      return n * s;\n    case 'milliseconds':\n    case 'millisecond':\n    case 'msecs':\n    case 'msec':\n    case 'ms':\n      return n;\n    default:\n      return undefined;\n  }\n}\n\n/**\n * Short format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction fmtShort(ms) {\n  var msAbs = Math.abs(ms);\n  if (msAbs >= d) {\n    return Math.round(ms / d) + 'd';\n  }\n  if (msAbs >= h) {\n    return Math.round(ms / h) + 'h';\n  }\n  if (msAbs >= m) {\n    return Math.round(ms / m) + 'm';\n  }\n  if (msAbs >= s) {\n    return Math.round(ms / s) + 's';\n  }\n  return ms + 'ms';\n}\n\n/**\n * Long format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction fmtLong(ms) {\n  var msAbs = Math.abs(ms);\n  if (msAbs >= d) {\n    return plural(ms, msAbs, d, 'day');\n  }\n  if (msAbs >= h) {\n    return plural(ms, msAbs, h, 'hour');\n  }\n  if (msAbs >= m) {\n    return plural(ms, msAbs, m, 'minute');\n  }\n  if (msAbs >= s) {\n    return plural(ms, msAbs, s, 'second');\n  }\n  return ms + ' ms';\n}\n\n/**\n * Pluralization helper.\n */\n\nfunction plural(ms, msAbs, n, name) {\n  var isPlural = msAbs >= n * 1.5;\n  return Math.round(ms / n) + ' ' + name + (isPlural ? 's' : '');\n}\n","/* eslint-env node */\n'use strict';\n\n// SDP helpers.\nconst SDPUtils = {};\n\n// Generate an alphanumeric identifier for cname or mids.\n// TODO: use UUIDs instead? https://gist.github.com/jed/982883\nSDPUtils.generateIdentifier = function() {\n  return Math.random().toString(36).substring(2, 12);\n};\n\n// The RTCP CNAME used by all peerconnections from the same JS.\nSDPUtils.localCName = SDPUtils.generateIdentifier();\n\n// Splits SDP into lines, dealing with both CRLF and LF.\nSDPUtils.splitLines = function(blob) {\n  return blob.trim().split('\\n').map(line => line.trim());\n};\n// Splits SDP into sessionpart and mediasections. Ensures CRLF.\nSDPUtils.splitSections = function(blob) {\n  const parts = blob.split('\\nm=');\n  return parts.map((part, index) => (index > 0 ?\n    'm=' + part : part).trim() + '\\r\\n');\n};\n\n// Returns the session description.\nSDPUtils.getDescription = function(blob) {\n  const sections = SDPUtils.splitSections(blob);\n  return sections && sections[0];\n};\n\n// Returns the individual media sections.\nSDPUtils.getMediaSections = function(blob) {\n  const sections = SDPUtils.splitSections(blob);\n  sections.shift();\n  return sections;\n};\n\n// Returns lines that start with a certain prefix.\nSDPUtils.matchPrefix = function(blob, prefix) {\n  return SDPUtils.splitLines(blob).filter(line => line.indexOf(prefix) === 0);\n};\n\n// Parses an ICE candidate line. Sample input:\n// candidate:702786350 2 udp 41819902 8.8.8.8 60769 typ relay raddr 8.8.8.8\n// rport 55996\"\n// Input can be prefixed with a=.\nSDPUtils.parseCandidate = function(line) {\n  let parts;\n  // Parse both variants.\n  if (line.indexOf('a=candidate:') === 0) {\n    parts = line.substring(12).split(' ');\n  } else {\n    parts = line.substring(10).split(' ');\n  }\n\n  const candidate = {\n    foundation: parts[0],\n    component: {1: 'rtp', 2: 'rtcp'}[parts[1]] || parts[1],\n    protocol: parts[2].toLowerCase(),\n    priority: parseInt(parts[3], 10),\n    ip: parts[4],\n    address: parts[4], // address is an alias for ip.\n    port: parseInt(parts[5], 10),\n    // skip parts[6] == 'typ'\n    type: parts[7],\n  };\n\n  for (let i = 8; i < parts.length; i += 2) {\n    switch (parts[i]) {\n      case 'raddr':\n        candidate.relatedAddress = parts[i + 1];\n        break;\n      case 'rport':\n        candidate.relatedPort = parseInt(parts[i + 1], 10);\n        break;\n      case 'tcptype':\n        candidate.tcpType = parts[i + 1];\n        break;\n      case 'ufrag':\n        candidate.ufrag = parts[i + 1]; // for backward compatibility.\n        candidate.usernameFragment = parts[i + 1];\n        break;\n      default: // extension handling, in particular ufrag. Don't overwrite.\n        if (candidate[parts[i]] === undefined) {\n          candidate[parts[i]] = parts[i + 1];\n        }\n        break;\n    }\n  }\n  return candidate;\n};\n\n// Translates a candidate object into SDP candidate attribute.\n// This does not include the a= prefix!\nSDPUtils.writeCandidate = function(candidate) {\n  const sdp = [];\n  sdp.push(candidate.foundation);\n\n  const component = candidate.component;\n  if (component === 'rtp') {\n    sdp.push(1);\n  } else if (component === 'rtcp') {\n    sdp.push(2);\n  } else {\n    sdp.push(component);\n  }\n  sdp.push(candidate.protocol.toUpperCase());\n  sdp.push(candidate.priority);\n  sdp.push(candidate.address || candidate.ip);\n  sdp.push(candidate.port);\n\n  const type = candidate.type;\n  sdp.push('typ');\n  sdp.push(type);\n  if (type !== 'host' && candidate.relatedAddress &&\n      candidate.relatedPort) {\n    sdp.push('raddr');\n    sdp.push(candidate.relatedAddress);\n    sdp.push('rport');\n    sdp.push(candidate.relatedPort);\n  }\n  if (candidate.tcpType && candidate.protocol.toLowerCase() === 'tcp') {\n    sdp.push('tcptype');\n    sdp.push(candidate.tcpType);\n  }\n  if (candidate.usernameFragment || candidate.ufrag) {\n    sdp.push('ufrag');\n    sdp.push(candidate.usernameFragment || candidate.ufrag);\n  }\n  return 'candidate:' + sdp.join(' ');\n};\n\n// Parses an ice-options line, returns an array of option tags.\n// Sample input:\n// a=ice-options:foo bar\nSDPUtils.parseIceOptions = function(line) {\n  return line.substring(14).split(' ');\n};\n\n// Parses a rtpmap line, returns RTCRtpCoddecParameters. Sample input:\n// a=rtpmap:111 opus/48000/2\nSDPUtils.parseRtpMap = function(line) {\n  let parts = line.substring(9).split(' ');\n  const parsed = {\n    payloadType: parseInt(parts.shift(), 10), // was: id\n  };\n\n  parts = parts[0].split('/');\n\n  parsed.name = parts[0];\n  parsed.clockRate = parseInt(parts[1], 10); // was: clockrate\n  parsed.channels = parts.length === 3 ? parseInt(parts[2], 10) : 1;\n  // legacy alias, got renamed back to channels in ORTC.\n  parsed.numChannels = parsed.channels;\n  return parsed;\n};\n\n// Generates a rtpmap line from RTCRtpCodecCapability or\n// RTCRtpCodecParameters.\nSDPUtils.writeRtpMap = function(codec) {\n  let pt = codec.payloadType;\n  if (codec.preferredPayloadType !== undefined) {\n    pt = codec.preferredPayloadType;\n  }\n  const channels = codec.channels || codec.numChannels || 1;\n  return 'a=rtpmap:' + pt + ' ' + codec.name + '/' + codec.clockRate +\n      (channels !== 1 ? '/' + channels : '') + '\\r\\n';\n};\n\n// Parses a extmap line (headerextension from RFC 5285). Sample input:\n// a=extmap:2 urn:ietf:params:rtp-hdrext:toffset\n// a=extmap:2/sendonly urn:ietf:params:rtp-hdrext:toffset\nSDPUtils.parseExtmap = function(line) {\n  const parts = line.substring(9).split(' ');\n  return {\n    id: parseInt(parts[0], 10),\n    direction: parts[0].indexOf('/') > 0 ? parts[0].split('/')[1] : 'sendrecv',\n    uri: parts[1],\n    attributes: parts.slice(2).join(' '),\n  };\n};\n\n// Generates an extmap line from RTCRtpHeaderExtensionParameters or\n// RTCRtpHeaderExtension.\nSDPUtils.writeExtmap = function(headerExtension) {\n  return 'a=extmap:' + (headerExtension.id || headerExtension.preferredId) +\n      (headerExtension.direction && headerExtension.direction !== 'sendrecv'\n        ? '/' + headerExtension.direction\n        : '') +\n      ' ' + headerExtension.uri +\n      (headerExtension.attributes ? ' ' + headerExtension.attributes : '') +\n      '\\r\\n';\n};\n\n// Parses a fmtp line, returns dictionary. Sample input:\n// a=fmtp:96 vbr=on;cng=on\n// Also deals with vbr=on; cng=on\nSDPUtils.parseFmtp = function(line) {\n  const parsed = {};\n  let kv;\n  const parts = line.substring(line.indexOf(' ') + 1).split(';');\n  for (let j = 0; j < parts.length; j++) {\n    kv = parts[j].trim().split('=');\n    parsed[kv[0].trim()] = kv[1];\n  }\n  return parsed;\n};\n\n// Generates a fmtp line from RTCRtpCodecCapability or RTCRtpCodecParameters.\nSDPUtils.writeFmtp = function(codec) {\n  let line = '';\n  let pt = codec.payloadType;\n  if (codec.preferredPayloadType !== undefined) {\n    pt = codec.preferredPayloadType;\n  }\n  if (codec.parameters && Object.keys(codec.parameters).length) {\n    const params = [];\n    Object.keys(codec.parameters).forEach(param => {\n      if (codec.parameters[param] !== undefined) {\n        params.push(param + '=' + codec.parameters[param]);\n      } else {\n        params.push(param);\n      }\n    });\n    line += 'a=fmtp:' + pt + ' ' + params.join(';') + '\\r\\n';\n  }\n  return line;\n};\n\n// Parses a rtcp-fb line, returns RTCPRtcpFeedback object. Sample input:\n// a=rtcp-fb:98 nack rpsi\nSDPUtils.parseRtcpFb = function(line) {\n  const parts = line.substring(line.indexOf(' ') + 1).split(' ');\n  return {\n    type: parts.shift(),\n    parameter: parts.join(' '),\n  };\n};\n\n// Generate a=rtcp-fb lines from RTCRtpCodecCapability or RTCRtpCodecParameters.\nSDPUtils.writeRtcpFb = function(codec) {\n  let lines = '';\n  let pt = codec.payloadType;\n  if (codec.preferredPayloadType !== undefined) {\n    pt = codec.preferredPayloadType;\n  }\n  if (codec.rtcpFeedback && codec.rtcpFeedback.length) {\n    // FIXME: special handling for trr-int?\n    codec.rtcpFeedback.forEach(fb => {\n      lines += 'a=rtcp-fb:' + pt + ' ' + fb.type +\n      (fb.parameter && fb.parameter.length ? ' ' + fb.parameter : '') +\n          '\\r\\n';\n    });\n  }\n  return lines;\n};\n\n// Parses a RFC 5576 ssrc media attribute. Sample input:\n// a=ssrc:3735928559 cname:something\nSDPUtils.parseSsrcMedia = function(line) {\n  const sp = line.indexOf(' ');\n  const parts = {\n    ssrc: parseInt(line.substring(7, sp), 10),\n  };\n  const colon = line.indexOf(':', sp);\n  if (colon > -1) {\n    parts.attribute = line.substring(sp + 1, colon);\n    parts.value = line.substring(colon + 1);\n  } else {\n    parts.attribute = line.substring(sp + 1);\n  }\n  return parts;\n};\n\n// Parse a ssrc-group line (see RFC 5576). Sample input:\n// a=ssrc-group:semantics 12 34\nSDPUtils.parseSsrcGroup = function(line) {\n  const parts = line.substring(13).split(' ');\n  return {\n    semantics: parts.shift(),\n    ssrcs: parts.map(ssrc => parseInt(ssrc, 10)),\n  };\n};\n\n// Extracts the MID (RFC 5888) from a media section.\n// Returns the MID or undefined if no mid line was found.\nSDPUtils.getMid = function(mediaSection) {\n  const mid = SDPUtils.matchPrefix(mediaSection, 'a=mid:')[0];\n  if (mid) {\n    return mid.substring(6);\n  }\n};\n\n// Parses a fingerprint line for DTLS-SRTP.\nSDPUtils.parseFingerprint = function(line) {\n  const parts = line.substring(14).split(' ');\n  return {\n    algorithm: parts[0].toLowerCase(), // algorithm is case-sensitive in Edge.\n    value: parts[1].toUpperCase(), // the definition is upper-case in RFC 4572.\n  };\n};\n\n// Extracts DTLS parameters from SDP media section or sessionpart.\n// FIXME: for consistency with other functions this should only\n//   get the fingerprint line as input. See also getIceParameters.\nSDPUtils.getDtlsParameters = function(mediaSection, sessionpart) {\n  const lines = SDPUtils.matchPrefix(mediaSection + sessionpart,\n    'a=fingerprint:');\n  // Note: a=setup line is ignored since we use the 'auto' role in Edge.\n  return {\n    role: 'auto',\n    fingerprints: lines.map(SDPUtils.parseFingerprint),\n  };\n};\n\n// Serializes DTLS parameters to SDP.\nSDPUtils.writeDtlsParameters = function(params, setupType) {\n  let sdp = 'a=setup:' + setupType + '\\r\\n';\n  params.fingerprints.forEach(fp => {\n    sdp += 'a=fingerprint:' + fp.algorithm + ' ' + fp.value + '\\r\\n';\n  });\n  return sdp;\n};\n\n// Parses a=crypto lines into\n//   https://rawgit.com/aboba/edgertc/master/msortc-rs4.html#dictionary-rtcsrtpsdesparameters-members\nSDPUtils.parseCryptoLine = function(line) {\n  const parts = line.substring(9).split(' ');\n  return {\n    tag: parseInt(parts[0], 10),\n    cryptoSuite: parts[1],\n    keyParams: parts[2],\n    sessionParams: parts.slice(3),\n  };\n};\n\nSDPUtils.writeCryptoLine = function(parameters) {\n  return 'a=crypto:' + parameters.tag + ' ' +\n    parameters.cryptoSuite + ' ' +\n    (typeof parameters.keyParams === 'object'\n      ? SDPUtils.writeCryptoKeyParams(parameters.keyParams)\n      : parameters.keyParams) +\n    (parameters.sessionParams ? ' ' + parameters.sessionParams.join(' ') : '') +\n    '\\r\\n';\n};\n\n// Parses the crypto key parameters into\n//   https://rawgit.com/aboba/edgertc/master/msortc-rs4.html#rtcsrtpkeyparam*\nSDPUtils.parseCryptoKeyParams = function(keyParams) {\n  if (keyParams.indexOf('inline:') !== 0) {\n    return null;\n  }\n  const parts = keyParams.substring(7).split('|');\n  return {\n    keyMethod: 'inline',\n    keySalt: parts[0],\n    lifeTime: parts[1],\n    mkiValue: parts[2] ? parts[2].split(':')[0] : undefined,\n    mkiLength: parts[2] ? parts[2].split(':')[1] : undefined,\n  };\n};\n\nSDPUtils.writeCryptoKeyParams = function(keyParams) {\n  return keyParams.keyMethod + ':'\n    + keyParams.keySalt +\n    (keyParams.lifeTime ? '|' + keyParams.lifeTime : '') +\n    (keyParams.mkiValue && keyParams.mkiLength\n      ? '|' + keyParams.mkiValue + ':' + keyParams.mkiLength\n      : '');\n};\n\n// Extracts all SDES parameters.\nSDPUtils.getCryptoParameters = function(mediaSection, sessionpart) {\n  const lines = SDPUtils.matchPrefix(mediaSection + sessionpart,\n    'a=crypto:');\n  return lines.map(SDPUtils.parseCryptoLine);\n};\n\n// Parses ICE information from SDP media section or sessionpart.\n// FIXME: for consistency with other functions this should only\n//   get the ice-ufrag and ice-pwd lines as input.\nSDPUtils.getIceParameters = function(mediaSection, sessionpart) {\n  const ufrag = SDPUtils.matchPrefix(mediaSection + sessionpart,\n    'a=ice-ufrag:')[0];\n  const pwd = SDPUtils.matchPrefix(mediaSection + sessionpart,\n    'a=ice-pwd:')[0];\n  if (!(ufrag && pwd)) {\n    return null;\n  }\n  return {\n    usernameFragment: ufrag.substring(12),\n    password: pwd.substring(10),\n  };\n};\n\n// Serializes ICE parameters to SDP.\nSDPUtils.writeIceParameters = function(params) {\n  let sdp = 'a=ice-ufrag:' + params.usernameFragment + '\\r\\n' +\n      'a=ice-pwd:' + params.password + '\\r\\n';\n  if (params.iceLite) {\n    sdp += 'a=ice-lite\\r\\n';\n  }\n  return sdp;\n};\n\n// Parses the SDP media section and returns RTCRtpParameters.\nSDPUtils.parseRtpParameters = function(mediaSection) {\n  const description = {\n    codecs: [],\n    headerExtensions: [],\n    fecMechanisms: [],\n    rtcp: [],\n  };\n  const lines = SDPUtils.splitLines(mediaSection);\n  const mline = lines[0].split(' ');\n  description.profile = mline[2];\n  for (let i = 3; i < mline.length; i++) { // find all codecs from mline[3..]\n    const pt = mline[i];\n    const rtpmapline = SDPUtils.matchPrefix(\n      mediaSection, 'a=rtpmap:' + pt + ' ')[0];\n    if (rtpmapline) {\n      const codec = SDPUtils.parseRtpMap(rtpmapline);\n      const fmtps = SDPUtils.matchPrefix(\n        mediaSection, 'a=fmtp:' + pt + ' ');\n      // Only the first a=fmtp:<pt> is considered.\n      codec.parameters = fmtps.length ? SDPUtils.parseFmtp(fmtps[0]) : {};\n      codec.rtcpFeedback = SDPUtils.matchPrefix(\n        mediaSection, 'a=rtcp-fb:' + pt + ' ')\n        .map(SDPUtils.parseRtcpFb);\n      description.codecs.push(codec);\n      // parse FEC mechanisms from rtpmap lines.\n      switch (codec.name.toUpperCase()) {\n        case 'RED':\n        case 'ULPFEC':\n          description.fecMechanisms.push(codec.name.toUpperCase());\n          break;\n        default: // only RED and ULPFEC are recognized as FEC mechanisms.\n          break;\n      }\n    }\n  }\n  SDPUtils.matchPrefix(mediaSection, 'a=extmap:').forEach(line => {\n    description.headerExtensions.push(SDPUtils.parseExtmap(line));\n  });\n  const wildcardRtcpFb = SDPUtils.matchPrefix(mediaSection, 'a=rtcp-fb:* ')\n    .map(SDPUtils.parseRtcpFb);\n  description.codecs.forEach(codec => {\n    wildcardRtcpFb.forEach(fb=> {\n      const duplicate = codec.rtcpFeedback.find(existingFeedback => {\n        return existingFeedback.type === fb.type &&\n          existingFeedback.parameter === fb.parameter;\n      });\n      if (!duplicate) {\n        codec.rtcpFeedback.push(fb);\n      }\n    });\n  });\n  // FIXME: parse rtcp.\n  return description;\n};\n\n// Generates parts of the SDP media section describing the capabilities /\n// parameters.\nSDPUtils.writeRtpDescription = function(kind, caps) {\n  let sdp = '';\n\n  // Build the mline.\n  sdp += 'm=' + kind + ' ';\n  sdp += caps.codecs.length > 0 ? '9' : '0'; // reject if no codecs.\n  sdp += ' ' + (caps.profile || 'UDP/TLS/RTP/SAVPF') + ' ';\n  sdp += caps.codecs.map(codec => {\n    if (codec.preferredPayloadType !== undefined) {\n      return codec.preferredPayloadType;\n    }\n    return codec.payloadType;\n  }).join(' ') + '\\r\\n';\n\n  sdp += 'c=IN IP4 0.0.0.0\\r\\n';\n  sdp += 'a=rtcp:9 IN IP4 0.0.0.0\\r\\n';\n\n  // Add a=rtpmap lines for each codec. Also fmtp and rtcp-fb.\n  caps.codecs.forEach(codec => {\n    sdp += SDPUtils.writeRtpMap(codec);\n    sdp += SDPUtils.writeFmtp(codec);\n    sdp += SDPUtils.writeRtcpFb(codec);\n  });\n  let maxptime = 0;\n  caps.codecs.forEach(codec => {\n    if (codec.maxptime > maxptime) {\n      maxptime = codec.maxptime;\n    }\n  });\n  if (maxptime > 0) {\n    sdp += 'a=maxptime:' + maxptime + '\\r\\n';\n  }\n\n  if (caps.headerExtensions) {\n    caps.headerExtensions.forEach(extension => {\n      sdp += SDPUtils.writeExtmap(extension);\n    });\n  }\n  // FIXME: write fecMechanisms.\n  return sdp;\n};\n\n// Parses the SDP media section and returns an array of\n// RTCRtpEncodingParameters.\nSDPUtils.parseRtpEncodingParameters = function(mediaSection) {\n  const encodingParameters = [];\n  const description = SDPUtils.parseRtpParameters(mediaSection);\n  const hasRed = description.fecMechanisms.indexOf('RED') !== -1;\n  const hasUlpfec = description.fecMechanisms.indexOf('ULPFEC') !== -1;\n\n  // filter a=ssrc:... cname:, ignore PlanB-msid\n  const ssrcs = SDPUtils.matchPrefix(mediaSection, 'a=ssrc:')\n    .map(line => SDPUtils.parseSsrcMedia(line))\n    .filter(parts => parts.attribute === 'cname');\n  const primarySsrc = ssrcs.length > 0 && ssrcs[0].ssrc;\n  let secondarySsrc;\n\n  const flows = SDPUtils.matchPrefix(mediaSection, 'a=ssrc-group:FID')\n    .map(line => {\n      const parts = line.substring(17).split(' ');\n      return parts.map(part => parseInt(part, 10));\n    });\n  if (flows.length > 0 && flows[0].length > 1 && flows[0][0] === primarySsrc) {\n    secondarySsrc = flows[0][1];\n  }\n\n  description.codecs.forEach(codec => {\n    if (codec.name.toUpperCase() === 'RTX' && codec.parameters.apt) {\n      let encParam = {\n        ssrc: primarySsrc,\n        codecPayloadType: parseInt(codec.parameters.apt, 10),\n      };\n      if (primarySsrc && secondarySsrc) {\n        encParam.rtx = {ssrc: secondarySsrc};\n      }\n      encodingParameters.push(encParam);\n      if (hasRed) {\n        encParam = JSON.parse(JSON.stringify(encParam));\n        encParam.fec = {\n          ssrc: primarySsrc,\n          mechanism: hasUlpfec ? 'red+ulpfec' : 'red',\n        };\n        encodingParameters.push(encParam);\n      }\n    }\n  });\n  if (encodingParameters.length === 0 && primarySsrc) {\n    encodingParameters.push({\n      ssrc: primarySsrc,\n    });\n  }\n\n  // we support both b=AS and b=TIAS but interpret AS as TIAS.\n  let bandwidth = SDPUtils.matchPrefix(mediaSection, 'b=');\n  if (bandwidth.length) {\n    if (bandwidth[0].indexOf('b=TIAS:') === 0) {\n      bandwidth = parseInt(bandwidth[0].substring(7), 10);\n    } else if (bandwidth[0].indexOf('b=AS:') === 0) {\n      // use formula from JSEP to convert b=AS to TIAS value.\n      bandwidth = parseInt(bandwidth[0].substring(5), 10) * 1000 * 0.95\n          - (50 * 40 * 8);\n    } else {\n      bandwidth = undefined;\n    }\n    encodingParameters.forEach(params => {\n      params.maxBitrate = bandwidth;\n    });\n  }\n  return encodingParameters;\n};\n\n// parses http://draft.ortc.org/#rtcrtcpparameters*\nSDPUtils.parseRtcpParameters = function(mediaSection) {\n  const rtcpParameters = {};\n\n  // Gets the first SSRC. Note that with RTX there might be multiple\n  // SSRCs.\n  const remoteSsrc = SDPUtils.matchPrefix(mediaSection, 'a=ssrc:')\n    .map(line => SDPUtils.parseSsrcMedia(line))\n    .filter(obj => obj.attribute === 'cname')[0];\n  if (remoteSsrc) {\n    rtcpParameters.cname = remoteSsrc.value;\n    rtcpParameters.ssrc = remoteSsrc.ssrc;\n  }\n\n  // Edge uses the compound attribute instead of reducedSize\n  // compound is !reducedSize\n  const rsize = SDPUtils.matchPrefix(mediaSection, 'a=rtcp-rsize');\n  rtcpParameters.reducedSize = rsize.length > 0;\n  rtcpParameters.compound = rsize.length === 0;\n\n  // parses the rtcp-mux attrіbute.\n  // Note that Edge does not support unmuxed RTCP.\n  const mux = SDPUtils.matchPrefix(mediaSection, 'a=rtcp-mux');\n  rtcpParameters.mux = mux.length > 0;\n\n  return rtcpParameters;\n};\n\nSDPUtils.writeRtcpParameters = function(rtcpParameters) {\n  let sdp = '';\n  if (rtcpParameters.reducedSize) {\n    sdp += 'a=rtcp-rsize\\r\\n';\n  }\n  if (rtcpParameters.mux) {\n    sdp += 'a=rtcp-mux\\r\\n';\n  }\n  if (rtcpParameters.ssrc !== undefined && rtcpParameters.cname) {\n    sdp += 'a=ssrc:' + rtcpParameters.ssrc +\n      ' cname:' + rtcpParameters.cname + '\\r\\n';\n  }\n  return sdp;\n};\n\n\n// parses either a=msid: or a=ssrc:... msid lines and returns\n// the id of the MediaStream and MediaStreamTrack.\nSDPUtils.parseMsid = function(mediaSection) {\n  let parts;\n  const spec = SDPUtils.matchPrefix(mediaSection, 'a=msid:');\n  if (spec.length === 1) {\n    parts = spec[0].substring(7).split(' ');\n    return {stream: parts[0], track: parts[1]};\n  }\n  const planB = SDPUtils.matchPrefix(mediaSection, 'a=ssrc:')\n    .map(line => SDPUtils.parseSsrcMedia(line))\n    .filter(msidParts => msidParts.attribute === 'msid');\n  if (planB.length > 0) {\n    parts = planB[0].value.split(' ');\n    return {stream: parts[0], track: parts[1]};\n  }\n};\n\n// SCTP\n// parses draft-ietf-mmusic-sctp-sdp-26 first and falls back\n// to draft-ietf-mmusic-sctp-sdp-05\nSDPUtils.parseSctpDescription = function(mediaSection) {\n  const mline = SDPUtils.parseMLine(mediaSection);\n  const maxSizeLine = SDPUtils.matchPrefix(mediaSection, 'a=max-message-size:');\n  let maxMessageSize;\n  if (maxSizeLine.length > 0) {\n    maxMessageSize = parseInt(maxSizeLine[0].substring(19), 10);\n  }\n  if (isNaN(maxMessageSize)) {\n    maxMessageSize = 65536;\n  }\n  const sctpPort = SDPUtils.matchPrefix(mediaSection, 'a=sctp-port:');\n  if (sctpPort.length > 0) {\n    return {\n      port: parseInt(sctpPort[0].substring(12), 10),\n      protocol: mline.fmt,\n      maxMessageSize,\n    };\n  }\n  const sctpMapLines = SDPUtils.matchPrefix(mediaSection, 'a=sctpmap:');\n  if (sctpMapLines.length > 0) {\n    const parts = sctpMapLines[0]\n      .substring(10)\n      .split(' ');\n    return {\n      port: parseInt(parts[0], 10),\n      protocol: parts[1],\n      maxMessageSize,\n    };\n  }\n};\n\n// SCTP\n// outputs the draft-ietf-mmusic-sctp-sdp-26 version that all browsers\n// support by now receiving in this format, unless we originally parsed\n// as the draft-ietf-mmusic-sctp-sdp-05 format (indicated by the m-line\n// protocol of DTLS/SCTP -- without UDP/ or TCP/)\nSDPUtils.writeSctpDescription = function(media, sctp) {\n  let output = [];\n  if (media.protocol !== 'DTLS/SCTP') {\n    output = [\n      'm=' + media.kind + ' 9 ' + media.protocol + ' ' + sctp.protocol + '\\r\\n',\n      'c=IN IP4 0.0.0.0\\r\\n',\n      'a=sctp-port:' + sctp.port + '\\r\\n',\n    ];\n  } else {\n    output = [\n      'm=' + media.kind + ' 9 ' + media.protocol + ' ' + sctp.port + '\\r\\n',\n      'c=IN IP4 0.0.0.0\\r\\n',\n      'a=sctpmap:' + sctp.port + ' ' + sctp.protocol + ' 65535\\r\\n',\n    ];\n  }\n  if (sctp.maxMessageSize !== undefined) {\n    output.push('a=max-message-size:' + sctp.maxMessageSize + '\\r\\n');\n  }\n  return output.join('');\n};\n\n// Generate a session ID for SDP.\n// https://tools.ietf.org/html/draft-ietf-rtcweb-jsep-20#section-5.2.1\n// recommends using a cryptographically random +ve 64-bit value\n// but right now this should be acceptable and within the right range\nSDPUtils.generateSessionId = function() {\n  return Math.random().toString().substr(2, 22);\n};\n\n// Write boiler plate for start of SDP\n// sessId argument is optional - if not supplied it will\n// be generated randomly\n// sessVersion is optional and defaults to 2\n// sessUser is optional and defaults to 'thisisadapterortc'\nSDPUtils.writeSessionBoilerplate = function(sessId, sessVer, sessUser) {\n  let sessionId;\n  const version = sessVer !== undefined ? sessVer : 2;\n  if (sessId) {\n    sessionId = sessId;\n  } else {\n    sessionId = SDPUtils.generateSessionId();\n  }\n  const user = sessUser || 'thisisadapterortc';\n  // FIXME: sess-id should be an NTP timestamp.\n  return 'v=0\\r\\n' +\n      'o=' + user + ' ' + sessionId + ' ' + version +\n        ' IN IP4 127.0.0.1\\r\\n' +\n      's=-\\r\\n' +\n      't=0 0\\r\\n';\n};\n\n// Gets the direction from the mediaSection or the sessionpart.\nSDPUtils.getDirection = function(mediaSection, sessionpart) {\n  // Look for sendrecv, sendonly, recvonly, inactive, default to sendrecv.\n  const lines = SDPUtils.splitLines(mediaSection);\n  for (let i = 0; i < lines.length; i++) {\n    switch (lines[i]) {\n      case 'a=sendrecv':\n      case 'a=sendonly':\n      case 'a=recvonly':\n      case 'a=inactive':\n        return lines[i].substring(2);\n      default:\n        // FIXME: What should happen here?\n    }\n  }\n  if (sessionpart) {\n    return SDPUtils.getDirection(sessionpart);\n  }\n  return 'sendrecv';\n};\n\nSDPUtils.getKind = function(mediaSection) {\n  const lines = SDPUtils.splitLines(mediaSection);\n  const mline = lines[0].split(' ');\n  return mline[0].substring(2);\n};\n\nSDPUtils.isRejected = function(mediaSection) {\n  return mediaSection.split(' ', 2)[1] === '0';\n};\n\nSDPUtils.parseMLine = function(mediaSection) {\n  const lines = SDPUtils.splitLines(mediaSection);\n  const parts = lines[0].substring(2).split(' ');\n  return {\n    kind: parts[0],\n    port: parseInt(parts[1], 10),\n    protocol: parts[2],\n    fmt: parts.slice(3).join(' '),\n  };\n};\n\nSDPUtils.parseOLine = function(mediaSection) {\n  const line = SDPUtils.matchPrefix(mediaSection, 'o=')[0];\n  const parts = line.substring(2).split(' ');\n  return {\n    username: parts[0],\n    sessionId: parts[1],\n    sessionVersion: parseInt(parts[2], 10),\n    netType: parts[3],\n    addressType: parts[4],\n    address: parts[5],\n  };\n};\n\n// a very naive interpretation of a valid SDP.\nSDPUtils.isValidSDP = function(blob) {\n  if (typeof blob !== 'string' || blob.length === 0) {\n    return false;\n  }\n  const lines = SDPUtils.splitLines(blob);\n  for (let i = 0; i < lines.length; i++) {\n    if (lines[i].length < 2 || lines[i].charAt(1) !== '=') {\n      return false;\n    }\n    // TODO: check the modifier a bit more.\n  }\n  return true;\n};\n\n// Expose public methods.\nif (typeof module === 'object') {\n  module.exports = SDPUtils;\n}\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(497);\n"],"names":["JanusPluginHandle","session","this","id","undefined","JanusSession","output","options","nextTxId","txns","eventHandlers","Object","assign","verbose","timeoutMs","keepaliveMs","prototype","attach","plugin","loop_index","payload","send","then","resp","data","detach","on","ev","callback","signal","sender","type","handle_id","sendMessage","body","sendJsep","jsep","sendTrickle","candidate","create","destroy","dispose","txId","_killKeepalive","hasOwnProperty","txn","clearTimeout","timeout","reject","Error","isError","janus","handlers","push","receive","_logIncoming","session_id","console","warn","responseType","i","length","transaction","resolve","toString","Promise","setTimeout","_transmit","_logOutgoing","JSON","stringify","_resetKeepalive","kind","message","debug","_sendKeepalive","keepaliveTimeout","catch","e","error","module","exports","mj","require","sendOriginal","indexOf","NAF","connection","adapter","reconnect","sdpUtils","isSafari","test","navigator","userAgent","debounce","fn","curr","args","Array","slice","call","arguments","_","apply","untilDataChannelOpen","dataChannel","readyState","resolver","rejector","clear","removeEventListener","addEventListener","isH264VideoSupported","document","createElement","canPlayType","OPUS_PARAMETERS","usedtx","stereo","DEFAULT_PEER_CONNECTION_CONFIG","iceServers","urls","JanusAdapter","constructor","room","clientId","joinToken","serverUrl","webRtcOptions","peerConnectionConfig","ws","reliableTransport","unreliableTransport","initialReconnectionDelay","Math","random","reconnectionDelay","reconnectionTimeout","maxReconnectionAttempts","reconnectionAttempts","isReconnecting","publisher","occupantIds","occupants","mediaStreams","localMediaStream","pendingMediaRequests","Map","pendingOccupants","Set","availableOccupants","requestedOccupants","blockedClients","frozenUpdates","timeOffsets","serverTimeRequests","avgTimeOffset","onWebsocketOpen","bind","onWebsocketClose","onWebsocketMessage","onDataChannelMessage","onData","setServerUrl","url","setApp","app","setRoom","roomName","setJoinToken","setClientId","setWebRtcOptions","setPeerConnectionConfig","setServerConnectListeners","successListener","failureListener","connectSuccess","connectFailure","setRoomOccupantListener","occupantListener","onOccupantsChanged","setDataChannelListeners","openListener","closedListener","messageListener","onOccupantConnected","onOccupantDisconnected","onOccupantMessage","setReconnectionListeners","reconnectingListener","reconnectedListener","reconnectionErrorListener","onReconnecting","onReconnected","onReconnectionError","setEventLoops","loops","connect","location","protocol","host","websocketConnection","WebSocket","websocketConnectionPromise","wsOnOpen","all","updateTimeOffset","disconnect","removeAllOccupants","conn","close","delayedReconnectTimeout","isDisconnected","createPublisher","initialOccupants","occupantId","addAvailableOccupant","syncOccupants","event","code","performDelayedReconnect","parse","removeAvailableOccupant","idx","splice","has","addOccupant","j","removeOccupant","add","delay","subscriber","createSubscriber","delete","setMediaStream","mediaStream","msg","get","audio","video","associate","handle","iceConnectionState","log","offer","createOffer","configurePublisherSdp","fixSafariIceUFrag","local","o","setLocalDescription","remote","r","setRemoteDescription","answer","configureSubscriberSdp","createAnswer","a","RTCPeerConnection","parseInt","webrtcup","reliableChannel","createDataChannel","ordered","unreliableChannel","maxRetransmits","getTracks","forEach","track","addTrack","plugindata","room_id","user_id","dispatchEvent","CustomEvent","detail","by","sendJoin","notifications","success","err","response","users","includes","sdp","replace","line","pt","parameters","parseFmtp","writeFmtp","payloadType","maxRetries","webrtcFailed","leftInterval","setInterval","clearInterval","media","_iOSHackDelayedInitialPeer","MediaStream","getReceivers","receiver","subscribe","token","toggleFreeze","frozen","unfreeze","freeze","flushPendingUpdates","dataForUpdateMultiMessage","networkId","l","d","getPendingData","dataType","owner","getPendingDataForNetworkId","source","storeMessage","storeSingleMessage","index","storedMessage","storedData","isOutdatedMessage","lastOwnerTime","isContemporaneousMessage","isFirstSync","set","components","enabled","shouldStartConnectionTo","client","startStreamConnection","closeStreamConnection","getConnectStatus","adapters","IS_CONNECTED","NOT_CONNECTED","clientSentTime","Date","now","res","fetch","href","method","cache","serverReceivedTime","headers","getTime","precision","clientReceivedTime","timeOffset","reduce","acc","offset","getServerTime","getMediaStream","audioPromise","videoPromise","promise","stream","audioStream","getAudioTracks","videoStream","getVideoTracks","getLocalMediaStream","setLocalMediaStream","existingSenders","getSenders","newSenders","tracks","t","find","s","replaceTrack","removeTrack","enableMicrophone","sendData","whom","sendDataGuaranteed","broadcastData","broadcastDataGuaranteed","kick","permsToken","block","unblock","register","formatArgs","useColors","namespace","humanize","diff","c","color","lastC","match","save","namespaces","storage","setItem","removeItem","load","getItem","process","env","DEBUG","window","__nwjs","toLowerCase","m","documentElement","style","WebkitAppearance","firebug","exception","table","localStorage","localstorage","warned","colors","formatters","v","createDebug","prevTime","namespacesCache","enabledCache","enableOverride","self","Number","ms","prev","coerce","unshift","format","formatter","val","selectColor","extend","defineProperty","enumerable","configurable","init","delimiter","newDebug","matchesTemplate","search","template","searchIndex","templateIndex","starIndex","matchIndex","default","stack","disable","names","skips","map","join","enable","split","trim","filter","Boolean","ns","name","skip","keys","key","hash","charCodeAt","abs","h","w","plural","msAbs","n","isPlural","round","str","String","exec","parseFloat","isFinite","long","fmtShort","SDPUtils","substring","localCName","generateIdentifier","splitLines","blob","splitSections","part","getDescription","sections","getMediaSections","shift","matchPrefix","prefix","parseCandidate","parts","foundation","component","priority","ip","address","port","relatedAddress","relatedPort","tcpType","ufrag","usernameFragment","writeCandidate","toUpperCase","parseIceOptions","parseRtpMap","parsed","clockRate","channels","numChannels","writeRtpMap","codec","preferredPayloadType","parseExtmap","direction","uri","attributes","writeExtmap","headerExtension","preferredId","kv","params","param","parseRtcpFb","parameter","writeRtcpFb","lines","rtcpFeedback","fb","parseSsrcMedia","sp","ssrc","colon","attribute","value","parseSsrcGroup","semantics","ssrcs","getMid","mediaSection","mid","parseFingerprint","algorithm","getDtlsParameters","sessionpart","role","fingerprints","writeDtlsParameters","setupType","fp","parseCryptoLine","tag","cryptoSuite","keyParams","sessionParams","writeCryptoLine","writeCryptoKeyParams","parseCryptoKeyParams","keyMethod","keySalt","lifeTime","mkiValue","mkiLength","getCryptoParameters","getIceParameters","pwd","password","writeIceParameters","iceLite","parseRtpParameters","description","codecs","headerExtensions","fecMechanisms","rtcp","mline","profile","rtpmapline","fmtps","wildcardRtcpFb","existingFeedback","writeRtpDescription","caps","maxptime","extension","parseRtpEncodingParameters","encodingParameters","hasRed","hasUlpfec","primarySsrc","secondarySsrc","flows","apt","encParam","codecPayloadType","rtx","fec","mechanism","bandwidth","maxBitrate","parseRtcpParameters","rtcpParameters","remoteSsrc","obj","cname","rsize","reducedSize","compound","mux","writeRtcpParameters","parseMsid","spec","planB","msidParts","parseSctpDescription","parseMLine","maxSizeLine","maxMessageSize","isNaN","sctpPort","fmt","sctpMapLines","writeSctpDescription","sctp","generateSessionId","substr","writeSessionBoilerplate","sessId","sessVer","sessUser","sessionId","version","getDirection","getKind","isRejected","parseOLine","username","sessionVersion","netType","addressType","isValidSDP","charAt","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","__webpack_modules__"],"sourceRoot":""}