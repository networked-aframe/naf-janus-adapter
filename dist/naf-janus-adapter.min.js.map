{"version":3,"file":"naf-janus-adapter.min.js","mappings":"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","sources":["webpack://@networked-aframe/naf-janus-adapter/./node_modules/@networked-aframe/minijanus/minijanus.js","webpack://@networked-aframe/naf-janus-adapter/./src/index.js","webpack://@networked-aframe/naf-janus-adapter/./node_modules/debug/src/browser.js","webpack://@networked-aframe/naf-janus-adapter/./node_modules/debug/src/common.js","webpack://@networked-aframe/naf-janus-adapter/./node_modules/ms/index.js","webpack://@networked-aframe/naf-janus-adapter/./node_modules/sdp/sdp.js","webpack://@networked-aframe/naf-janus-adapter/webpack/bootstrap","webpack://@networked-aframe/naf-janus-adapter/webpack/startup"],"sourcesContent":["/**\n * Represents a handle to a single Janus plugin on a Janus session. Each WebRTC connection to the Janus server will be\n * associated with a single handle. Once attached to the server, this handle will be given a unique ID which should be\n * used to associate it with future signalling messages.\n *\n * See https://janus.conf.meetecho.com/docs/rest.html#handles.\n **/\nfunction JanusPluginHandle(session) {\n  this.session = session;\n  this.id = undefined;\n}\n\n/** Attaches this handle to the Janus server and sets its ID. **/\nJanusPluginHandle.prototype.attach = function(plugin, loop_index) {\n  var payload = { plugin: plugin, loop_index: loop_index, \"force-bundle\": true, \"force-rtcp-mux\": true };\n  return this.session.send(\"attach\", payload).then(resp => {\n    this.id = resp.data.id;\n    return resp;\n  });\n};\n\n/** Detaches this handle. **/\nJanusPluginHandle.prototype.detach = function() {\n  return this.send(\"detach\");\n};\n\n/** Registers a callback to be fired upon the reception of any incoming Janus signals for this plugin handle with the\n * `janus` attribute equal to `ev`.\n **/\nJanusPluginHandle.prototype.on = function(ev, callback) {\n  return this.session.on(ev, signal => {\n    if (signal.sender == this.id) {\n      callback(signal);\n    }\n  });\n};\n\n/**\n * Sends a signal associated with this handle. Signals should be JSON-serializable objects. Returns a promise that will\n * be resolved or rejected when a response to this signal is received, or when no response is received within the\n * session timeout.\n **/\nJanusPluginHandle.prototype.send = function(type, signal) {\n  return this.session.send(type, Object.assign({ handle_id: this.id }, signal));\n};\n\n/** Sends a plugin-specific message associated with this handle. **/\nJanusPluginHandle.prototype.sendMessage = function(body) {\n  return this.send(\"message\", { body: body });\n};\n\n/** Sends a JSEP offer or answer associated with this handle. **/\nJanusPluginHandle.prototype.sendJsep = function(jsep) {\n  return this.send(\"message\", { body: {}, jsep: jsep });\n};\n\n/** Sends an ICE trickle candidate associated with this handle. **/\nJanusPluginHandle.prototype.sendTrickle = function(candidate) {\n  return this.send(\"trickle\", { candidate: candidate });\n};\n\n/**\n * Represents a Janus session -- a Janus context from within which you can open multiple handles and connections. Once\n * created, this session will be given a unique ID which should be used to associate it with future signalling messages.\n *\n * See https://janus.conf.meetecho.com/docs/rest.html#sessions.\n **/\nfunction JanusSession(output, options) {\n  this.output = output;\n  this.id = undefined;\n  this.nextTxId = 0;\n  this.txns = {};\n  this.eventHandlers = {};\n  this.options = Object.assign({\n    verbose: false,\n    timeoutMs: 10000,\n    keepaliveMs: 30000\n  }, options);\n}\n\n/** Creates this session on the Janus server and sets its ID. **/\nJanusSession.prototype.create = function() {\n  return this.send(\"create\").then(resp => {\n    this.id = resp.data.id;\n    return resp;\n  });\n};\n\n/**\n * Destroys this session. Note that upon destruction, Janus will also close the signalling transport (if applicable) and\n * any open WebRTC connections.\n **/\nJanusSession.prototype.destroy = function() {\n  return this.send(\"destroy\").then((resp) => {\n    this.dispose();\n    return resp;\n  });\n};\n\n/**\n * Disposes of this session in a way such that no further incoming signalling messages will be processed.\n * Outstanding transactions will be rejected.\n **/\nJanusSession.prototype.dispose = function() {\n  this._killKeepalive();\n  this.eventHandlers = {};\n  for (var txId in this.txns) {\n    if (this.txns.hasOwnProperty(txId)) {\n      var txn = this.txns[txId];\n      clearTimeout(txn.timeout);\n      txn.reject(new Error(\"Janus session was disposed.\"));\n      delete this.txns[txId];\n    }\n  }\n};\n\n/**\n * Whether this signal represents an error, and the associated promise (if any) should be rejected.\n * Users should override this to handle any custom plugin-specific error conventions.\n **/\nJanusSession.prototype.isError = function(signal) {\n  return signal.janus === \"error\";\n};\n\n/** Registers a callback to be fired upon the reception of any incoming Janus signals for this session with the\n * `janus` attribute equal to `ev`.\n **/\nJanusSession.prototype.on = function(ev, callback) {\n  var handlers = this.eventHandlers[ev];\n  if (handlers == null) {\n    handlers = this.eventHandlers[ev] = [];\n  }\n  handlers.push(callback);\n};\n\n/**\n * Callback for receiving JSON signalling messages pertinent to this session. If the signals are responses to previously\n * sent signals, the promises for the outgoing signals will be resolved or rejected appropriately with this signal as an\n * argument.\n *\n * External callers should call this function every time a new signal arrives on the transport; for example, in a\n * WebSocket's `message` event, or when a new datum shows up in an HTTP long-polling response.\n **/\nJanusSession.prototype.receive = function(signal) {\n  if (this.options.verbose) {\n    this._logIncoming(signal);\n  }\n  if (signal.session_id != this.id) {\n    console.warn(\"Incorrect session ID received in Janus signalling message: was \" + signal.session_id + \", expected \" + this.id + \".\");\n  }\n\n  var responseType = signal.janus;\n  var handlers = this.eventHandlers[responseType];\n  if (handlers != null) {\n    for (var i = 0; i < handlers.length; i++) {\n      handlers[i](signal);\n    }\n  }\n\n  if (signal.transaction != null) {\n    var txn = this.txns[signal.transaction];\n    if (txn == null) {\n      // this is a response to a transaction that wasn't caused via JanusSession.send, or a plugin replied twice to a\n      // single request, or the session was disposed, or something else that isn't under our purview; that's fine\n      return;\n    }\n\n    if (responseType === \"ack\" && txn.type == \"message\") {\n      // this is an ack of an asynchronously-processed plugin request, we should wait to resolve the promise until the\n      // actual response comes in\n      return;\n    }\n\n    clearTimeout(txn.timeout);\n\n    delete this.txns[signal.transaction];\n    (this.isError(signal) ? txn.reject : txn.resolve)(signal);\n  }\n};\n\n/**\n * Sends a signal associated with this session, beginning a new transaction. Returns a promise that will be resolved or\n * rejected when a response is received in the same transaction, or when no response is received within the session\n * timeout.\n **/\nJanusSession.prototype.send = function(type, signal) {\n  signal = Object.assign({ transaction: (this.nextTxId++).toString() }, signal);\n  return new Promise((resolve, reject) => {\n    var timeout = null;\n    if (this.options.timeoutMs) {\n      timeout = setTimeout(() => {\n        delete this.txns[signal.transaction];\n        reject(new Error(\"Signalling transaction with txid \" + signal.transaction + \" timed out.\"));\n      }, this.options.timeoutMs);\n    }\n    this.txns[signal.transaction] = { resolve: resolve, reject: reject, timeout: timeout, type: type };\n    this._transmit(type, signal);\n  });\n};\n\nJanusSession.prototype._transmit = function(type, signal) {\n  signal = Object.assign({ janus: type }, signal);\n\n  if (this.id != null) { // this.id is undefined in the special case when we're sending the session create message\n    signal = Object.assign({ session_id: this.id }, signal);\n  }\n\n  if (this.options.verbose) {\n    this._logOutgoing(signal);\n  }\n\n  this.output(JSON.stringify(signal));\n  this._resetKeepalive();\n};\n\nJanusSession.prototype._logOutgoing = function(signal) {\n  var kind = signal.janus;\n  if (kind === \"message\" && signal.jsep) {\n    kind = signal.jsep.type;\n  }\n  var message = \"> Outgoing Janus \" + (kind || \"signal\") + \" (#\" + signal.transaction + \"): \";\n  console.debug(\"%c\" + message, \"color: #040\", signal);\n};\n\nJanusSession.prototype._logIncoming = function(signal) {\n  var kind = signal.janus;\n  var message = signal.transaction ?\n      \"< Incoming Janus \" + (kind || \"signal\") + \" (#\" + signal.transaction + \"): \" :\n      \"< Incoming Janus \" + (kind || \"signal\") + \": \";\n  console.debug(\"%c\" + message, \"color: #004\", signal);\n};\n\nJanusSession.prototype._sendKeepalive = function() {\n  return this.send(\"keepalive\");\n};\n\nJanusSession.prototype._killKeepalive = function() {\n  clearTimeout(this.keepaliveTimeout);\n};\n\nJanusSession.prototype._resetKeepalive = function() {\n  this._killKeepalive();\n  if (this.options.keepaliveMs) {\n    this.keepaliveTimeout = setTimeout(() => {\n      this._sendKeepalive().catch(e => console.error(\"Error received from keepalive: \", e));\n    }, this.options.keepaliveMs);\n  }\n};\n\nmodule.exports = {\n  JanusPluginHandle,\n  JanusSession\n};\n","/* global NAF */\nvar mj = require(\"@networked-aframe/minijanus\");\nmj.JanusSession.prototype.sendOriginal = mj.JanusSession.prototype.send;\nmj.JanusSession.prototype.send = function(type, signal) {\n  return this.sendOriginal(type, signal).catch((e) => {\n    if (e.message && e.message.indexOf(\"timed out\") > -1) {\n      console.error(\"web socket timed out\");\n      NAF.connection.adapter.reconnect();\n    } else {\n      throw(e);\n    }\n  });\n}\n\nvar sdpUtils = require(\"sdp\");\nvar debug = require(\"debug\")(\"naf-janus-adapter:debug\");\nvar warn = require(\"debug\")(\"naf-janus-adapter:warn\");\nvar error = require(\"debug\")(\"naf-janus-adapter:error\");\nvar isSafari = /^((?!chrome|android).)*safari/i.test(navigator.userAgent);\n\nconst SUBSCRIBE_TIMEOUT_MS = 15000;\n\nconst AVAILABLE_OCCUPANTS_THRESHOLD = 5;\nconst MAX_SUBSCRIBE_DELAY = 5000;\n\nfunction randomDelay(min, max) {\n  return new Promise(resolve => {\n    const delay = Math.random() * (max - min) + min;\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction debounce(fn) {\n  var curr = Promise.resolve();\n  return function() {\n    var args = Array.prototype.slice.call(arguments);\n    curr = curr.then(_ => fn.apply(this, args));\n  };\n}\n\nfunction randomUint() {\n  return Math.floor(Math.random() * Number.MAX_SAFE_INTEGER);\n}\n\nfunction untilDataChannelOpen(dataChannel) {\n  return new Promise((resolve, reject) => {\n    if (dataChannel.readyState === \"open\") {\n      resolve();\n    } else {\n      let resolver, rejector;\n\n      const clear = () => {\n        dataChannel.removeEventListener(\"open\", resolver);\n        dataChannel.removeEventListener(\"error\", rejector);\n      };\n\n      resolver = () => {\n        clear();\n        resolve();\n      };\n      rejector = () => {\n        clear();\n        reject();\n      };\n\n      dataChannel.addEventListener(\"open\", resolver);\n      dataChannel.addEventListener(\"error\", rejector);\n    }\n  });\n}\n\nconst isH264VideoSupported = (() => {\n  const video = document.createElement(\"video\");\n  return video.canPlayType('video/mp4; codecs=\"avc1.42E01E, mp4a.40.2\"') !== \"\";\n})();\n\nconst OPUS_PARAMETERS = {\n  // indicates that we want to enable DTX to elide silence packets\n  usedtx: 1,\n  // indicates that we prefer to receive mono audio (important for voip profile)\n  stereo: 0,\n  // indicates that we prefer to send mono audio (important for voip profile)\n  \"sprop-stereo\": 0\n};\n\nconst DEFAULT_PEER_CONNECTION_CONFIG = {\n  iceServers: [{ urls: \"stun:stun1.l.google.com:19302\" }, { urls: \"stun:stun2.l.google.com:19302\" }]\n};\n\nconst WS_NORMAL_CLOSURE = 1000;\n\nclass JanusAdapter {\n  constructor() {\n    this.room = null;\n    // We expect the consumer to set a client id before connecting.\n    this.clientId = null;\n    this.joinToken = null;\n\n    this.serverUrl = null;\n    this.webRtcOptions = {};\n    this.peerConnectionConfig = null;\n    this.ws = null;\n    this.session = null;\n    this.reliableTransport = \"datachannel\";\n    this.unreliableTransport = \"datachannel\";\n\n    // In the event the server restarts and all clients lose connection, reconnect with\n    // some random jitter added to prevent simultaneous reconnection requests.\n    this.initialReconnectionDelay = 1000 * Math.random();\n    this.reconnectionDelay = this.initialReconnectionDelay;\n    this.reconnectionTimeout = null;\n    this.maxReconnectionAttempts = 10;\n    this.reconnectionAttempts = 0;\n\n    this.publisher = null;\n    this.occupantIds = [];\n    this.occupants = {};\n    this.mediaStreams = {};\n    this.localMediaStream = null;\n    this.pendingMediaRequests = new Map();\n\n    this.pendingOccupants = new Set();\n    this.availableOccupants = [];\n    this.requestedOccupants = null;\n\n    this.blockedClients = new Map();\n    this.frozenUpdates = new Map();\n\n    this.timeOffsets = [];\n    this.serverTimeRequests = 0;\n    this.avgTimeOffset = 0;\n\n    this.onWebsocketOpen = this.onWebsocketOpen.bind(this);\n    this.onWebsocketClose = this.onWebsocketClose.bind(this);\n    this.onWebsocketMessage = this.onWebsocketMessage.bind(this);\n    this.onDataChannelMessage = this.onDataChannelMessage.bind(this);\n    this.onData = this.onData.bind(this);\n  }\n\n  setServerUrl(url) {\n    this.serverUrl = url;\n  }\n\n  setApp(app) {}\n\n  setRoom(roomName) {\n    this.room = roomName;\n  }\n\n  setJoinToken(joinToken) {\n    this.joinToken = joinToken;\n  }\n\n  setClientId(clientId) {\n    this.clientId = clientId;\n  }\n\n  setWebRtcOptions(options) {\n    this.webRtcOptions = options;\n  }\n\n  setPeerConnectionConfig(peerConnectionConfig) {\n    this.peerConnectionConfig = peerConnectionConfig;\n  }\n\n  setServerConnectListeners(successListener, failureListener) {\n    this.connectSuccess = successListener;\n    this.connectFailure = failureListener;\n  }\n\n  setRoomOccupantListener(occupantListener) {\n    this.onOccupantsChanged = occupantListener;\n  }\n\n  setDataChannelListeners(openListener, closedListener, messageListener) {\n    this.onOccupantConnected = openListener;\n    this.onOccupantDisconnected = closedListener;\n    this.onOccupantMessage = messageListener;\n  }\n\n  setReconnectionListeners(reconnectingListener, reconnectedListener, reconnectionErrorListener) {\n    // onReconnecting is called with the number of milliseconds until the next reconnection attempt\n    this.onReconnecting = reconnectingListener;\n    // onReconnected is called when the connection has been reestablished\n    this.onReconnected = reconnectedListener;\n    // onReconnectionError is called with an error when maxReconnectionAttempts has been reached\n    this.onReconnectionError = reconnectionErrorListener;\n  }\n\n  setEventLoops(loops) {\n    this.loops = loops;\n  }\n\n  connect() {\n    debug(`connecting to ${this.serverUrl}`);\n\n    const websocketConnection = new Promise((resolve, reject) => {\n      this.ws = new WebSocket(this.serverUrl, \"janus-protocol\");\n\n      this.session = new mj.JanusSession(this.ws.send.bind(this.ws), { timeoutMs: 40000 });\n\n      this.ws.addEventListener(\"close\", this.onWebsocketClose);\n      this.ws.addEventListener(\"message\", this.onWebsocketMessage);\n\n      this.wsOnOpen = () => {\n        this.ws.removeEventListener(\"open\", this.wsOnOpen);\n        this.onWebsocketOpen()\n          .then(resolve)\n          .catch(reject);\n      };\n\n      this.ws.addEventListener(\"open\", this.wsOnOpen);\n    });\n\n    return Promise.all([websocketConnection, this.updateTimeOffset()]);\n  }\n\n  disconnect() {\n    debug(`disconnecting`);\n\n    clearTimeout(this.reconnectionTimeout);\n\n    this.removeAllOccupants();\n\n    if (this.publisher) {\n      // Close the publisher peer connection. Which also detaches the plugin handle.\n      this.publisher.conn.close();\n      this.publisher = null;\n    }\n\n    if (this.session) {\n      this.session.dispose();\n      this.session = null;\n    }\n\n    if (this.ws) {\n      this.ws.removeEventListener(\"open\", this.wsOnOpen);\n      this.ws.removeEventListener(\"close\", this.onWebsocketClose);\n      this.ws.removeEventListener(\"message\", this.onWebsocketMessage);\n      this.ws.close();\n      this.ws = null;\n    }\n\n    // Now that all RTCPeerConnection closed, be sure to not call\n    // reconnect() again via performDelayedReconnect if previous\n    // RTCPeerConnection was in the failed state.\n    if (this.delayedReconnectTimeout) {\n      clearTimeout(this.delayedReconnectTimeout);\n      this.delayedReconnectTimeout = null;\n    }\n  }\n\n  isDisconnected() {\n    return this.ws === null;\n  }\n\n  async onWebsocketOpen() {\n    // Create the Janus Session\n    await this.session.create();\n\n    // Attach the SFU Plugin and create a RTCPeerConnection for the publisher.\n    // The publisher sends audio and opens two bidirectional data channels.\n    // One reliable datachannel and one unreliable.\n    this.publisher = await this.createPublisher();\n\n    // Call the naf connectSuccess callback before we start receiving WebRTC messages.\n    this.connectSuccess(this.clientId);\n\n    for (let i = 0; i < this.publisher.initialOccupants.length; i++) {\n      const occupantId = this.publisher.initialOccupants[i];\n      if (occupantId === this.clientId) continue; // Happens during non-graceful reconnects due to zombie sessions\n      this.addAvailableOccupant(occupantId);\n    }\n\n    this.syncOccupants();\n  }\n\n  onWebsocketClose(event) {\n    // The connection was closed successfully. Don't try to reconnect.\n    if (event.code === WS_NORMAL_CLOSURE) {\n      return;\n    }\n\n    console.warn(\"Janus websocket closed unexpectedly.\");\n    if (this.onReconnecting) {\n      this.onReconnecting(this.reconnectionDelay);\n    }\n\n    this.reconnectionTimeout = setTimeout(() => this.reconnect(), this.reconnectionDelay);\n  }\n\n  reconnect() {\n    // Dispose of all networked entities and other resources tied to the session.\n    this.disconnect();\n\n    this.connect()\n      .then(() => {\n        this.reconnectionDelay = this.initialReconnectionDelay;\n        this.reconnectionAttempts = 0;\n\n        if (this.onReconnected) {\n          this.onReconnected();\n        }\n      })\n      .catch(error => {\n        this.reconnectionDelay += 1000;\n        this.reconnectionAttempts++;\n\n        if (this.reconnectionAttempts > this.maxReconnectionAttempts && this.onReconnectionError) {\n          return this.onReconnectionError(\n            new Error(\"Connection could not be reestablished, exceeded maximum number of reconnection attempts.\")\n          );\n        }\n\n        console.warn(\"Error during reconnect, retrying.\");\n        console.warn(error);\n\n        if (this.onReconnecting) {\n          this.onReconnecting(this.reconnectionDelay);\n        }\n\n        this.reconnectionTimeout = setTimeout(() => this.reconnect(), this.reconnectionDelay);\n      });\n  }\n\n  performDelayedReconnect() {\n    if (this.delayedReconnectTimeout) {\n      clearTimeout(this.delayedReconnectTimeout);\n    }\n\n    this.delayedReconnectTimeout = setTimeout(() => {\n      this.delayedReconnectTimeout = null;\n      this.reconnect();\n    }, 10000);\n  }\n\n  onWebsocketMessage(event) {\n    this.session.receive(JSON.parse(event.data));\n  }\n\n  addAvailableOccupant(occupantId) {\n    if (this.availableOccupants.indexOf(occupantId) === -1) {\n      this.availableOccupants.push(occupantId);\n    }\n  }\n\n  removeAvailableOccupant(occupantId) {\n    const idx = this.availableOccupants.indexOf(occupantId);\n    if (idx !== -1) {\n      this.availableOccupants.splice(idx, 1);\n    }\n  }\n\n  syncOccupants(requestedOccupants) {\n    if (requestedOccupants) {\n      this.requestedOccupants = requestedOccupants;\n    }\n\n    if (!this.requestedOccupants) {\n      return;\n    }\n\n    // Add any requested, available, and non-pending occupants.\n    for (let i = 0; i < this.requestedOccupants.length; i++) {\n      const occupantId = this.requestedOccupants[i];\n      if (!this.occupants[occupantId] && this.availableOccupants.indexOf(occupantId) !== -1 && !this.pendingOccupants.has(occupantId)) {\n        this.addOccupant(occupantId);\n      }\n    }\n\n    // Remove any unrequested and currently added occupants.\n    for (let j = 0; j < this.availableOccupants.length; j++) {\n      const occupantId = this.availableOccupants[j];\n      if (this.occupants[occupantId] && this.requestedOccupants.indexOf(occupantId) === -1) {\n        this.removeOccupant(occupantId);\n      }\n    }\n\n    // Call the Networked AFrame callbacks for the updated occupants list.\n    this.onOccupantsChanged(this.occupants);\n  }\n\n  async addOccupant(occupantId) {\n    this.pendingOccupants.add(occupantId);\n    \n    const availableOccupantsCount = this.availableOccupants.length;\n    if (availableOccupantsCount > AVAILABLE_OCCUPANTS_THRESHOLD) {\n      await randomDelay(0, MAX_SUBSCRIBE_DELAY);\n    }\n  \n    const subscriber = await this.createSubscriber(occupantId);\n    if (subscriber) {\n      if(!this.pendingOccupants.has(occupantId)) {\n        subscriber.conn.close();\n      } else {\n        this.pendingOccupants.delete(occupantId);\n        this.occupantIds.push(occupantId);\n        this.occupants[occupantId] = subscriber;\n\n        this.setMediaStream(occupantId, subscriber.mediaStream);\n\n        // Call the Networked AFrame callbacks for the new occupant.\n        this.onOccupantConnected(occupantId);\n      }\n    }\n  }\n\n  removeAllOccupants() {\n    this.pendingOccupants.clear();\n    for (let i = this.occupantIds.length - 1; i >= 0; i--) {\n      this.removeOccupant(this.occupantIds[i]);\n    }\n  }\n\n  removeOccupant(occupantId) {\n    this.pendingOccupants.delete(occupantId);\n    \n    if (this.occupants[occupantId]) {\n      // Close the subscriber peer connection. Which also detaches the plugin handle.\n      this.occupants[occupantId].conn.close();\n      delete this.occupants[occupantId];\n      \n      this.occupantIds.splice(this.occupantIds.indexOf(occupantId), 1);\n    }\n\n    if (this.mediaStreams[occupantId]) {\n      delete this.mediaStreams[occupantId];\n    }\n\n    if (this.pendingMediaRequests.has(occupantId)) {\n      const msg = \"The user disconnected before the media stream was resolved.\";\n      this.pendingMediaRequests.get(occupantId).audio.reject(msg);\n      this.pendingMediaRequests.get(occupantId).video.reject(msg);\n      this.pendingMediaRequests.delete(occupantId);\n    }\n\n    // Call the Networked AFrame callbacks for the removed occupant.\n    this.onOccupantDisconnected(occupantId);\n  }\n\n  associate(conn, handle) {\n    conn.addEventListener(\"icecandidate\", ev => {\n      handle.sendTrickle(ev.candidate || null).catch(e => error(\"Error trickling ICE: %o\", e));\n    });\n    conn.addEventListener(\"iceconnectionstatechange\", ev => {\n      if (conn.iceConnectionState === \"connected\") {\n        console.log(\"ICE state changed to connected\");\n      }\n      if (conn.iceConnectionState === \"disconnected\") {\n        console.warn(\"ICE state changed to disconnected\");\n      }\n      if (conn.iceConnectionState === \"failed\") {\n        console.warn(\"ICE failure detected. Reconnecting in 10s.\");\n        this.performDelayedReconnect();\n      }\n    })\n\n    // we have to debounce these because janus gets angry if you send it a new SDP before\n    // it's finished processing an existing SDP. in actuality, it seems like this is maybe\n    // too liberal and we need to wait some amount of time after an offer before sending another,\n    // but we don't currently know any good way of detecting exactly how long :(\n    conn.addEventListener(\n      \"negotiationneeded\",\n      debounce(ev => {\n        debug(\"Sending new offer for handle: %o\", handle);\n        var offer = conn.createOffer().then(this.configurePublisherSdp).then(this.fixSafariIceUFrag);\n        var local = offer.then(o => conn.setLocalDescription(o));\n        var remote = offer;\n\n        remote = remote\n          .then(this.fixSafariIceUFrag)\n          .then(j => handle.sendJsep(j))\n          .then(r => conn.setRemoteDescription(r.jsep));\n        return Promise.all([local, remote]).catch(e => error(\"Error negotiating offer: %o\", e));\n      })\n    );\n    handle.on(\n      \"event\",\n      debounce(ev => {\n        var jsep = ev.jsep;\n        if (jsep && jsep.type == \"offer\") {\n          debug(\"Accepting new offer for handle: %o\", handle);\n          var answer = conn\n            .setRemoteDescription(this.configureSubscriberSdp(jsep))\n            .then(_ => conn.createAnswer())\n            .then(this.fixSafariIceUFrag);\n          var local = answer.then(a => conn.setLocalDescription(a));\n          var remote = answer.then(j => handle.sendJsep(j));\n          return Promise.all([local, remote]).catch(e => error(\"Error negotiating answer: %o\", e));\n        } else {\n          // some other kind of event, nothing to do\n          return null;\n        }\n      })\n    );\n  }\n\n  async createPublisher() {\n    var handle = new mj.JanusPluginHandle(this.session);\n    var conn = new RTCPeerConnection(this.peerConnectionConfig || DEFAULT_PEER_CONNECTION_CONFIG);\n\n    debug(\"pub waiting for sfu\");\n    await handle.attach(\"janus.plugin.sfu\", this.loops && this.clientId ? parseInt(this.clientId) % this.loops : undefined);\n\n    this.associate(conn, handle);\n\n    debug(\"pub waiting for data channels & webrtcup\");\n    var webrtcup = new Promise(resolve => handle.on(\"webrtcup\", resolve));\n\n    // Unreliable datachannel: sending and receiving component updates.\n    // Reliable datachannel: sending and recieving entity instantiations.\n    var reliableChannel = conn.createDataChannel(\"reliable\", { ordered: true });\n    var unreliableChannel = conn.createDataChannel(\"unreliable\", {\n      ordered: false,\n      maxRetransmits: 0\n    });\n\n    reliableChannel.addEventListener(\"message\", e => this.onDataChannelMessage(e, \"janus-reliable\"));\n    unreliableChannel.addEventListener(\"message\", e => this.onDataChannelMessage(e, \"janus-unreliable\"));\n\n    await webrtcup;\n    await untilDataChannelOpen(reliableChannel);\n    await untilDataChannelOpen(unreliableChannel);\n\n    // doing this here is sort of a hack around chrome renegotiation weirdness --\n    // if we do it prior to webrtcup, chrome on gear VR will sometimes put a\n    // renegotiation offer in flight while the first offer was still being\n    // processed by janus. we should find some more principled way to figure out\n    // when janus is done in the future.\n    if (this.localMediaStream) {\n      this.localMediaStream.getTracks().forEach(track => {\n        conn.addTrack(track, this.localMediaStream);\n      });\n    }\n\n    // Handle all of the join and leave events.\n    handle.on(\"event\", ev => {\n      var data = ev.plugindata.data;\n      if (data.event == \"join\" && data.room_id == this.room) {\n        if (this.delayedReconnectTimeout) {\n          // Don't create a new RTCPeerConnection, all RTCPeerConnection will be closed in less than 10s.\n          return;\n        }\n        this.addAvailableOccupant(data.user_id);\n        this.syncOccupants();\n      } else if (data.event == \"leave\" && data.room_id == this.room) {\n        this.removeAvailableOccupant(data.user_id);\n        this.removeOccupant(data.user_id);\n      } else if (data.event == \"blocked\") {\n        document.body.dispatchEvent(new CustomEvent(\"blocked\", { detail: { clientId: data.by } }));\n      } else if (data.event == \"unblocked\") {\n        document.body.dispatchEvent(new CustomEvent(\"unblocked\", { detail: { clientId: data.by } }));\n      } else if (data.event === \"data\") {\n        this.onData(JSON.parse(data.body), \"janus-event\");\n      }\n    });\n\n    debug(\"pub waiting for join\");\n\n    // Send join message to janus. Listen for join/leave messages. Automatically subscribe to all users' WebRTC data.\n    var message = await this.sendJoin(handle, {\n      notifications: true,\n      data: true\n    });\n\n    if (!message.plugindata.data.success) {\n      const err = message.plugindata.data.error;\n      console.error(err);\n      // We may get here because of an expired JWT.\n      // Close the connection ourself otherwise janus will close it after\n      // session_timeout because we didn't send any keepalive and this will\n      // trigger a delayed reconnect because of the iceconnectionstatechange\n      // listener for failure state.\n      // Even if the app code calls disconnect in case of error, disconnect\n      // won't close the peer connection because this.publisher is not set.\n      conn.close();\n      throw err;\n    }\n\n    var initialOccupants = message.plugindata.data.response.users[this.room] || [];\n\n    if (initialOccupants.includes(this.clientId)) {\n      console.warn(\"Janus still has previous session for this client. Reconnecting in 10s.\");\n      this.performDelayedReconnect();\n    }\n\n    debug(\"publisher ready\");\n    return {\n      handle,\n      initialOccupants,\n      reliableChannel,\n      unreliableChannel,\n      conn\n    };\n  }\n\n  configurePublisherSdp(jsep) {\n    jsep.sdp = jsep.sdp.replace(/a=fmtp:(109|111).*\\r\\n/g, (line, pt) => {\n      const parameters = Object.assign(sdpUtils.parseFmtp(line), OPUS_PARAMETERS);\n      return sdpUtils.writeFmtp({ payloadType: pt, parameters: parameters });\n    });\n    return jsep;\n  }\n\n  configureSubscriberSdp(jsep) {\n    // todo: consider cleaning up these hacks to use sdputils\n    if (!isH264VideoSupported) {\n      if (navigator.userAgent.indexOf(\"HeadlessChrome\") !== -1) {\n        // HeadlessChrome (e.g. puppeteer) doesn't support webrtc video streams, so we remove those lines from the SDP.\n        jsep.sdp = jsep.sdp.replace(/m=video[^]*m=/, \"m=\");\n      }\n    }\n\n    // TODO: Hack to get video working on Chrome for Android. https://groups.google.com/forum/#!topic/mozilla.dev.media/Ye29vuMTpo8\n    if (navigator.userAgent.indexOf(\"Android\") === -1) {\n      jsep.sdp = jsep.sdp.replace(\n        \"a=rtcp-fb:107 goog-remb\\r\\n\",\n        \"a=rtcp-fb:107 goog-remb\\r\\na=rtcp-fb:107 transport-cc\\r\\na=fmtp:107 level-asymmetry-allowed=1;packetization-mode=1;profile-level-id=42e01f\\r\\n\"\n      );\n    } else {\n      jsep.sdp = jsep.sdp.replace(\n        \"a=rtcp-fb:107 goog-remb\\r\\n\",\n        \"a=rtcp-fb:107 goog-remb\\r\\na=rtcp-fb:107 transport-cc\\r\\na=fmtp:107 level-asymmetry-allowed=1;packetization-mode=1;profile-level-id=42001f\\r\\n\"\n      );\n    }\n    return jsep;\n  }\n\n  async fixSafariIceUFrag(jsep) {\n    // Safari produces a \\n instead of an \\r\\n for the ice-ufrag. See https://github.com/meetecho/janus-gateway/issues/1818\n    jsep.sdp = jsep.sdp.replace(/[^\\r]\\na=ice-ufrag/g, \"\\r\\na=ice-ufrag\");\n    return jsep\n  }\n\n  async createSubscriber(occupantId, maxRetries = 5) {\n    if (this.availableOccupants.indexOf(occupantId) === -1) {\n      console.warn(occupantId + \": cancelled occupant connection, occupant left before subscription negotation.\");\n      return null;\n    }\n\n    var handle = new mj.JanusPluginHandle(this.session);\n    var conn = new RTCPeerConnection(this.peerConnectionConfig || DEFAULT_PEER_CONNECTION_CONFIG);\n\n    debug(occupantId + \": sub waiting for sfu\");\n    await handle.attach(\"janus.plugin.sfu\", this.loops ? parseInt(occupantId) % this.loops : undefined);\n\n    this.associate(conn, handle);\n\n    debug(occupantId + \": sub waiting for join\");\n\n    if (this.availableOccupants.indexOf(occupantId) === -1) {\n      conn.close();\n      console.warn(occupantId + \": cancelled occupant connection, occupant left after attach\");\n      return null;\n    }\n\n    let webrtcFailed = false;\n\n    const webrtcup = new Promise(resolve => {\n      const leftInterval = setInterval(() => {\n        if (this.availableOccupants.indexOf(occupantId) === -1) {\n          clearInterval(leftInterval);\n          resolve();\n        }\n      }, 1000);\n\n      const timeout = setTimeout(() => {\n        clearInterval(leftInterval);\n        webrtcFailed = true;\n        resolve();\n      }, SUBSCRIBE_TIMEOUT_MS);\n\n      handle.on(\"webrtcup\", () => {\n        clearTimeout(timeout);\n        clearInterval(leftInterval);\n        resolve();\n      });\n    });\n\n    // Send join message to janus. Don't listen for join/leave messages. Subscribe to the occupant's media.\n    // Janus should send us an offer for this occupant's media in response to this.\n    await this.sendJoin(handle, { media: occupantId });\n\n    if (this.availableOccupants.indexOf(occupantId) === -1) {\n      conn.close();\n      console.warn(occupantId + \": cancelled occupant connection, occupant left after join\");\n      return null;\n    }\n\n    debug(occupantId + \": sub waiting for webrtcup\");\n    await webrtcup;\n\n    if (this.availableOccupants.indexOf(occupantId) === -1) {\n      conn.close();\n      console.warn(occupantId + \": cancel occupant connection, occupant left during or after webrtcup\");\n      return null;\n    }\n\n    if (webrtcFailed) {\n      conn.close();\n      if (maxRetries > 0) {\n        console.warn(occupantId + \": webrtc up timed out, retrying\");\n        return this.createSubscriber(occupantId, maxRetries - 1);\n      } else {\n        console.warn(occupantId + \": webrtc up timed out\");\n        return null;\n      }\n    }\n\n    if (isSafari && !this._iOSHackDelayedInitialPeer) {\n      // HACK: the first peer on Safari during page load can fail to work if we don't\n      // wait some time before continuing here. See: https://github.com/mozilla/hubs/pull/1692\n      await (new Promise((resolve) => setTimeout(resolve, 3000)));\n      this._iOSHackDelayedInitialPeer = true;\n    }\n\n    var mediaStream = new MediaStream();\n    var receivers = conn.getReceivers();\n    receivers.forEach(receiver => {\n      if (receiver.track) {\n        mediaStream.addTrack(receiver.track);\n      }\n    });\n    if (mediaStream.getTracks().length === 0) {\n      mediaStream = null;\n    }\n\n    debug(occupantId + \": subscriber ready\");\n    return {\n      handle,\n      mediaStream,\n      conn\n    };\n  }\n\n  sendJoin(handle, subscribe) {\n    return handle.sendMessage({\n      kind: \"join\",\n      room_id: this.room,\n      user_id: this.clientId,\n      subscribe,\n      token: this.joinToken\n    });\n  }\n\n  toggleFreeze() {\n    if (this.frozen) {\n      this.unfreeze();\n    } else {\n      this.freeze();\n    }\n  }\n\n  freeze() {\n    this.frozen = true;\n  }\n\n  unfreeze() {\n    this.frozen = false;\n    this.flushPendingUpdates();\n  }\n\n  dataForUpdateMultiMessage(networkId, message) {\n    // \"d\" is an array of entity datas, where each item in the array represents a unique entity and contains\n    // metadata for the entity, and an array of components that have been updated on the entity.\n    // This method finds the data corresponding to the given networkId.\n    for (let i = 0, l = message.data.d.length; i < l; i++) {\n      const data = message.data.d[i];\n\n      if (data.networkId === networkId) {\n        return data;\n      }\n    }\n\n    return null;\n  }\n\n  getPendingData(networkId, message) {\n    if (!message) return null;\n\n    let data = message.dataType === \"um\" ? this.dataForUpdateMultiMessage(networkId, message) : message.data;\n\n    // Ignore messages relating to users who have disconnected since freezing, their entities\n    // will have aleady been removed by NAF.\n    // Note that delete messages have no \"owner\" so we have to check for that as well.\n    if (data.owner && !this.occupants[data.owner]) return null;\n\n    // Ignore messages from users that we may have blocked while frozen.\n    if (data.owner && this.blockedClients.has(data.owner)) return null;\n\n    return data\n  }\n\n  // Used externally\n  getPendingDataForNetworkId(networkId) {\n    return this.getPendingData(networkId, this.frozenUpdates.get(networkId));\n  }\n\n  flushPendingUpdates() {\n    for (const [networkId, message] of this.frozenUpdates) {\n      let data = this.getPendingData(networkId, message);\n      if (!data) continue;\n\n      // Override the data type on \"um\" messages types, since we extract entity updates from \"um\" messages into\n      // individual frozenUpdates in storeSingleMessage.\n      const dataType = message.dataType === \"um\" ? \"u\" : message.dataType;\n\n      this.onOccupantMessage(null, dataType, data, message.source);\n    }\n    this.frozenUpdates.clear();\n  }\n\n  storeMessage(message) {\n    if (message.dataType === \"um\") { // UpdateMulti\n      for (let i = 0, l = message.data.d.length; i < l; i++) {\n        this.storeSingleMessage(message, i);\n      }\n    } else {\n      this.storeSingleMessage(message);\n    }\n  }\n\n  storeSingleMessage(message, index) {\n    const data = index !== undefined ? message.data.d[index] : message.data;\n    const dataType = message.dataType;\n    const source = message.source;\n\n    const networkId = data.networkId;\n\n    if (!this.frozenUpdates.has(networkId)) {\n      this.frozenUpdates.set(networkId, message);\n    } else {\n      const storedMessage = this.frozenUpdates.get(networkId);\n      const storedData = storedMessage.dataType === \"um\" ? this.dataForUpdateMultiMessage(networkId, storedMessage) : storedMessage.data;\n\n      // Avoid updating components if the entity data received did not come from the current owner.\n      const isOutdatedMessage = data.lastOwnerTime < storedData.lastOwnerTime;\n      const isContemporaneousMessage = data.lastOwnerTime === storedData.lastOwnerTime;\n      if (isOutdatedMessage || (isContemporaneousMessage && storedData.owner > data.owner)) {\n        return;\n      }\n\n      if (dataType === \"r\") {\n        const createdWhileFrozen = storedData && storedData.isFirstSync;\n        if (createdWhileFrozen) {\n          // If the entity was created and deleted while frozen, don't bother conveying anything to the consumer.\n          this.frozenUpdates.delete(networkId);\n        } else {\n          // Delete messages override any other messages for this entity\n          this.frozenUpdates.set(networkId, message);\n        }\n      } else {\n        // merge in component updates\n        if (storedData.components && data.components) {\n          Object.assign(storedData.components, data.components);\n        }\n      }\n    }\n  }\n\n  onDataChannelMessage(e, source) {\n    this.onData(JSON.parse(e.data), source);\n  }\n\n  onData(message, source) {\n    if (debug.enabled) {\n      debug(`DC in: ${message}`);\n    }\n\n    if (!message.dataType) return;\n\n    message.source = source;\n\n    if (this.frozen) {\n      this.storeMessage(message);\n    } else {\n      this.onOccupantMessage(null, message.dataType, message.data, message.source);\n    }\n  }\n\n  shouldStartConnectionTo(client) {\n    return true;\n  }\n\n  startStreamConnection(client) {}\n\n  closeStreamConnection(client) {}\n\n  getConnectStatus(clientId) {\n    return this.occupants[clientId] ? NAF.adapters.IS_CONNECTED : NAF.adapters.NOT_CONNECTED;\n  }\n\n  async updateTimeOffset() {\n    if (this.isDisconnected()) return;\n\n    const clientSentTime = Date.now();\n\n    const res = await fetch(document.location.href, {\n      method: \"HEAD\",\n      cache: \"no-cache\"\n    });\n\n    const precision = 1000;\n    const serverReceivedTime = new Date(res.headers.get(\"Date\")).getTime() + precision / 2;\n    const clientReceivedTime = Date.now();\n    const serverTime = serverReceivedTime + (clientReceivedTime - clientSentTime) / 2;\n    const timeOffset = serverTime - clientReceivedTime;\n\n    this.serverTimeRequests++;\n\n    if (this.serverTimeRequests <= 10) {\n      this.timeOffsets.push(timeOffset);\n    } else {\n      this.timeOffsets[this.serverTimeRequests % 10] = timeOffset;\n    }\n\n    this.avgTimeOffset = this.timeOffsets.reduce((acc, offset) => (acc += offset), 0) / this.timeOffsets.length;\n\n    if (this.serverTimeRequests > 10) {\n      debug(`new server time offset: ${this.avgTimeOffset}ms`);\n      setTimeout(() => this.updateTimeOffset(), 5 * 60 * 1000); // Sync clock every 5 minutes.\n    } else {\n      this.updateTimeOffset();\n    }\n  }\n\n  getServerTime() {\n    return Date.now() + this.avgTimeOffset;\n  }\n\n  getMediaStream(clientId, type = \"audio\") {\n    if (this.mediaStreams[clientId]) {\n      debug(`Already had ${type} for ${clientId}`);\n      return Promise.resolve(this.mediaStreams[clientId][type]);\n    } else {\n      debug(`Waiting on ${type} for ${clientId}`);\n      if (!this.pendingMediaRequests.has(clientId)) {\n        this.pendingMediaRequests.set(clientId, {});\n\n        const audioPromise = new Promise((resolve, reject) => {\n          this.pendingMediaRequests.get(clientId).audio = { resolve, reject };\n        });\n        const videoPromise = new Promise((resolve, reject) => {\n          this.pendingMediaRequests.get(clientId).video = { resolve, reject };\n        });\n\n        this.pendingMediaRequests.get(clientId).audio.promise = audioPromise;\n        this.pendingMediaRequests.get(clientId).video.promise = videoPromise;\n\n        audioPromise.catch(e => console.warn(`${clientId} getMediaStream Audio Error`, e));\n        videoPromise.catch(e => console.warn(`${clientId} getMediaStream Video Error`, e));\n      }\n      return this.pendingMediaRequests.get(clientId)[type].promise;\n    }\n  }\n\n  setMediaStream(clientId, stream) {\n    // Safari doesn't like it when you use single a mixed media stream where one of the tracks is inactive, so we\n    // split the tracks into two streams.\n    const audioStream = new MediaStream();\n    try {\n    stream.getAudioTracks().forEach(track => audioStream.addTrack(track));\n\n    } catch(e) {\n      console.warn(`${clientId} setMediaStream Audio Error`, e);\n    }\n    const videoStream = new MediaStream();\n    try {\n    stream.getVideoTracks().forEach(track => videoStream.addTrack(track));\n\n    } catch (e) {\n      console.warn(`${clientId} setMediaStream Video Error`, e);\n    }\n\n    this.mediaStreams[clientId] = { audio: audioStream, video: videoStream };\n\n    // Resolve the promise for the user's media stream if it exists.\n    if (this.pendingMediaRequests.has(clientId)) {\n      this.pendingMediaRequests.get(clientId).audio.resolve(audioStream);\n      this.pendingMediaRequests.get(clientId).video.resolve(videoStream);\n    }\n  }\n\n  getLocalMediaStream() {\n    return this.localMediaStream;\n  }\n\n  async setLocalMediaStream(stream) {\n    // our job here is to make sure the connection winds up with RTP senders sending the stuff in this stream,\n    // and not the stuff that isn't in this stream. strategy is to replace existing tracks if we can, add tracks\n    // that we can't replace, and disable tracks that don't exist anymore.\n\n    // note that we don't ever remove a track from the stream -- since Janus doesn't support Unified Plan, we absolutely\n    // can't wind up with a SDP that has >1 audio or >1 video tracks, even if one of them is inactive (what you get if\n    // you remove a track from an existing stream.)\n    if (this.publisher && this.publisher.conn) {\n      const existingSenders = this.publisher.conn.getSenders();\n      const newSenders = [];\n      const tracks = stream.getTracks();\n\n      for (let i = 0; i < tracks.length; i++) {\n        const t = tracks[i];\n        const sender = existingSenders.find(s => s.track != null && s.track.kind == t.kind);\n\n        if (sender != null) {\n          if (sender.replaceTrack) {\n            await sender.replaceTrack(t);\n          } else {\n            // Fallback for browsers that don't support replaceTrack. At this time of this writing\n            // most browsers support it, and testing this code path seems to not work properly\n            // in Chrome anymore.\n            stream.removeTrack(sender.track);\n            stream.addTrack(t);\n          }\n          newSenders.push(sender);\n        } else {\n          newSenders.push(this.publisher.conn.addTrack(t, stream));\n        }\n      }\n      existingSenders.forEach(s => {\n        if (!newSenders.includes(s)) {\n          s.track.enabled = false;\n        }\n      });\n    }\n    this.localMediaStream = stream;\n    this.setMediaStream(this.clientId, stream);\n  }\n\n  enableMicrophone(enabled) {\n    if (this.publisher && this.publisher.conn) {\n      this.publisher.conn.getSenders().forEach(s => {\n        if (s.track.kind == \"audio\") {\n          s.track.enabled = enabled;\n        }\n      });\n    }\n  }\n\n  sendData(clientId, dataType, data) {\n    if (!this.publisher) {\n      console.warn(\"sendData called without a publisher\");\n    } else {\n      switch (this.unreliableTransport) {\n        case \"websocket\":\n          if (this.ws.readyState === 1) { // OPEN\n            this.publisher.handle.sendMessage({ kind: \"data\", body: JSON.stringify({ dataType, data }), whom: clientId });\n          }\n          break;\n        case \"datachannel\":\n          if (this.publisher.unreliableChannel.readyState === \"open\") {\n            this.publisher.unreliableChannel.send(JSON.stringify({ clientId, dataType, data }));\n          }\n          break;\n        default:\n          this.unreliableTransport(clientId, dataType, data);\n          break;\n      }\n    }\n  }\n\n  sendDataGuaranteed(clientId, dataType, data) {\n    if (!this.publisher) {\n      console.warn(\"sendDataGuaranteed called without a publisher\");\n    } else {\n      switch (this.reliableTransport) {\n        case \"websocket\":\n          if (this.ws.readyState === 1) { // OPEN\n            this.publisher.handle.sendMessage({ kind: \"data\", body: JSON.stringify({ dataType, data }), whom: clientId });\n          }\n          break;\n        case \"datachannel\":\n          if (this.publisher.reliableChannel.readyState === \"open\") {\n            this.publisher.reliableChannel.send(JSON.stringify({ clientId, dataType, data }));\n          }\n          break;\n        default:\n          this.reliableTransport(clientId, dataType, data);\n          break;\n      }\n    }\n  }\n\n  broadcastData(dataType, data) {\n    if (!this.publisher) {\n      console.warn(\"broadcastData called without a publisher\");\n    } else {\n      switch (this.unreliableTransport) {\n        case \"websocket\":\n          if (this.ws.readyState === 1) { // OPEN\n            this.publisher.handle.sendMessage({ kind: \"data\", body: JSON.stringify({ dataType, data }) });\n          }\n          break;\n        case \"datachannel\":\n          if (this.publisher.unreliableChannel.readyState === \"open\") {\n            this.publisher.unreliableChannel.send(JSON.stringify({ dataType, data }));\n          }\n          break;\n        default:\n          this.unreliableTransport(undefined, dataType, data);\n          break;\n      }\n    }\n  }\n\n  broadcastDataGuaranteed(dataType, data) {\n    if (!this.publisher) {\n      console.warn(\"broadcastDataGuaranteed called without a publisher\");\n    } else {\n      switch (this.reliableTransport) {\n        case \"websocket\":\n          if (this.ws.readyState === 1) { // OPEN\n            this.publisher.handle.sendMessage({ kind: \"data\", body: JSON.stringify({ dataType, data }) });\n          }\n          break;\n        case \"datachannel\":\n          if (this.publisher.reliableChannel.readyState === \"open\") {\n            this.publisher.reliableChannel.send(JSON.stringify({ dataType, data }));\n          }\n          break;\n        default:\n          this.reliableTransport(undefined, dataType, data);\n          break;\n      }\n    }\n  }\n\n  kick(clientId, permsToken) {\n    return this.publisher.handle.sendMessage({ kind: \"kick\", room_id: this.room, user_id: clientId, token: permsToken }).then(() => {\n      document.body.dispatchEvent(new CustomEvent(\"kicked\", { detail: { clientId: clientId } }));\n    });\n  }\n\n  block(clientId) {\n    return this.publisher.handle.sendMessage({ kind: \"block\", whom: clientId }).then(() => {\n      this.blockedClients.set(clientId, true);\n      document.body.dispatchEvent(new CustomEvent(\"blocked\", { detail: { clientId: clientId } }));\n    });\n  }\n\n  unblock(clientId) {\n    return this.publisher.handle.sendMessage({ kind: \"unblock\", whom: clientId }).then(() => {\n      this.blockedClients.delete(clientId);\n      document.body.dispatchEvent(new CustomEvent(\"unblocked\", { detail: { clientId: clientId } }));\n    });\n  }\n}\n\nNAF.adapters.register(\"janus\", JanusAdapter);\n\nmodule.exports = JanusAdapter;\n","/* eslint-env browser */\n\n/**\n * This is the web browser implementation of `debug()`.\n */\n\nexports.formatArgs = formatArgs;\nexports.save = save;\nexports.load = load;\nexports.useColors = useColors;\nexports.storage = localstorage();\nexports.destroy = (() => {\n\tlet warned = false;\n\n\treturn () => {\n\t\tif (!warned) {\n\t\t\twarned = true;\n\t\t\tconsole.warn('Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`.');\n\t\t}\n\t};\n})();\n\n/**\n * Colors.\n */\n\nexports.colors = [\n\t'#0000CC',\n\t'#0000FF',\n\t'#0033CC',\n\t'#0033FF',\n\t'#0066CC',\n\t'#0066FF',\n\t'#0099CC',\n\t'#0099FF',\n\t'#00CC00',\n\t'#00CC33',\n\t'#00CC66',\n\t'#00CC99',\n\t'#00CCCC',\n\t'#00CCFF',\n\t'#3300CC',\n\t'#3300FF',\n\t'#3333CC',\n\t'#3333FF',\n\t'#3366CC',\n\t'#3366FF',\n\t'#3399CC',\n\t'#3399FF',\n\t'#33CC00',\n\t'#33CC33',\n\t'#33CC66',\n\t'#33CC99',\n\t'#33CCCC',\n\t'#33CCFF',\n\t'#6600CC',\n\t'#6600FF',\n\t'#6633CC',\n\t'#6633FF',\n\t'#66CC00',\n\t'#66CC33',\n\t'#9900CC',\n\t'#9900FF',\n\t'#9933CC',\n\t'#9933FF',\n\t'#99CC00',\n\t'#99CC33',\n\t'#CC0000',\n\t'#CC0033',\n\t'#CC0066',\n\t'#CC0099',\n\t'#CC00CC',\n\t'#CC00FF',\n\t'#CC3300',\n\t'#CC3333',\n\t'#CC3366',\n\t'#CC3399',\n\t'#CC33CC',\n\t'#CC33FF',\n\t'#CC6600',\n\t'#CC6633',\n\t'#CC9900',\n\t'#CC9933',\n\t'#CCCC00',\n\t'#CCCC33',\n\t'#FF0000',\n\t'#FF0033',\n\t'#FF0066',\n\t'#FF0099',\n\t'#FF00CC',\n\t'#FF00FF',\n\t'#FF3300',\n\t'#FF3333',\n\t'#FF3366',\n\t'#FF3399',\n\t'#FF33CC',\n\t'#FF33FF',\n\t'#FF6600',\n\t'#FF6633',\n\t'#FF9900',\n\t'#FF9933',\n\t'#FFCC00',\n\t'#FFCC33'\n];\n\n/**\n * Currently only WebKit-based Web Inspectors, Firefox >= v31,\n * and the Firebug extension (any Firefox version) are known\n * to support \"%c\" CSS customizations.\n *\n * TODO: add a `localStorage` variable to explicitly enable/disable colors\n */\n\n// eslint-disable-next-line complexity\nfunction useColors() {\n\t// NB: In an Electron preload script, document will be defined but not fully\n\t// initialized. Since we know we're in Chrome, we'll just detect this case\n\t// explicitly\n\tif (typeof window !== 'undefined' && window.process && (window.process.type === 'renderer' || window.process.__nwjs)) {\n\t\treturn true;\n\t}\n\n\t// Internet Explorer and Edge do not support colors.\n\tif (typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/(edge|trident)\\/(\\d+)/)) {\n\t\treturn false;\n\t}\n\n\t// Is webkit? http://stackoverflow.com/a/16459606/376773\n\t// document is undefined in react-native: https://github.com/facebook/react-native/pull/1632\n\treturn (typeof document !== 'undefined' && document.documentElement && document.documentElement.style && document.documentElement.style.WebkitAppearance) ||\n\t\t// Is firebug? http://stackoverflow.com/a/398120/376773\n\t\t(typeof window !== 'undefined' && window.console && (window.console.firebug || (window.console.exception && window.console.table))) ||\n\t\t// Is firefox >= v31?\n\t\t// https://developer.mozilla.org/en-US/docs/Tools/Web_Console#Styling_messages\n\t\t(typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/firefox\\/(\\d+)/) && parseInt(RegExp.$1, 10) >= 31) ||\n\t\t// Double check webkit in userAgent just in case we are in a worker\n\t\t(typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/applewebkit\\/(\\d+)/));\n}\n\n/**\n * Colorize log arguments if enabled.\n *\n * @api public\n */\n\nfunction formatArgs(args) {\n\targs[0] = (this.useColors ? '%c' : '') +\n\t\tthis.namespace +\n\t\t(this.useColors ? ' %c' : ' ') +\n\t\targs[0] +\n\t\t(this.useColors ? '%c ' : ' ') +\n\t\t'+' + module.exports.humanize(this.diff);\n\n\tif (!this.useColors) {\n\t\treturn;\n\t}\n\n\tconst c = 'color: ' + this.color;\n\targs.splice(1, 0, c, 'color: inherit');\n\n\t// The final \"%c\" is somewhat tricky, because there could be other\n\t// arguments passed either before or after the %c, so we need to\n\t// figure out the correct index to insert the CSS into\n\tlet index = 0;\n\tlet lastC = 0;\n\targs[0].replace(/%[a-zA-Z%]/g, match => {\n\t\tif (match === '%%') {\n\t\t\treturn;\n\t\t}\n\t\tindex++;\n\t\tif (match === '%c') {\n\t\t\t// We only are interested in the *last* %c\n\t\t\t// (the user may have provided their own)\n\t\t\tlastC = index;\n\t\t}\n\t});\n\n\targs.splice(lastC, 0, c);\n}\n\n/**\n * Invokes `console.debug()` when available.\n * No-op when `console.debug` is not a \"function\".\n * If `console.debug` is not available, falls back\n * to `console.log`.\n *\n * @api public\n */\nexports.log = console.debug || console.log || (() => {});\n\n/**\n * Save `namespaces`.\n *\n * @param {String} namespaces\n * @api private\n */\nfunction save(namespaces) {\n\ttry {\n\t\tif (namespaces) {\n\t\t\texports.storage.setItem('debug', namespaces);\n\t\t} else {\n\t\t\texports.storage.removeItem('debug');\n\t\t}\n\t} catch (error) {\n\t\t// Swallow\n\t\t// XXX (@Qix-) should we be logging these?\n\t}\n}\n\n/**\n * Load `namespaces`.\n *\n * @return {String} returns the previously persisted debug modes\n * @api private\n */\nfunction load() {\n\tlet r;\n\ttry {\n\t\tr = exports.storage.getItem('debug');\n\t} catch (error) {\n\t\t// Swallow\n\t\t// XXX (@Qix-) should we be logging these?\n\t}\n\n\t// If debug isn't set in LS, and we're in Electron, try to load $DEBUG\n\tif (!r && typeof process !== 'undefined' && 'env' in process) {\n\t\tr = process.env.DEBUG;\n\t}\n\n\treturn r;\n}\n\n/**\n * Localstorage attempts to return the localstorage.\n *\n * This is necessary because safari throws\n * when a user disables cookies/localstorage\n * and you attempt to access it.\n *\n * @return {LocalStorage}\n * @api private\n */\n\nfunction localstorage() {\n\ttry {\n\t\t// TVMLKit (Apple TV JS Runtime) does not have a window object, just localStorage in the global context\n\t\t// The Browser also has localStorage in the global context.\n\t\treturn localStorage;\n\t} catch (error) {\n\t\t// Swallow\n\t\t// XXX (@Qix-) should we be logging these?\n\t}\n}\n\nmodule.exports = require('./common')(exports);\n\nconst {formatters} = module.exports;\n\n/**\n * Map %j to `JSON.stringify()`, since no Web Inspectors do that by default.\n */\n\nformatters.j = function (v) {\n\ttry {\n\t\treturn JSON.stringify(v);\n\t} catch (error) {\n\t\treturn '[UnexpectedJSONParseError]: ' + error.message;\n\t}\n};\n","\n/**\n * This is the common logic for both the Node.js and web browser\n * implementations of `debug()`.\n */\n\nfunction setup(env) {\n\tcreateDebug.debug = createDebug;\n\tcreateDebug.default = createDebug;\n\tcreateDebug.coerce = coerce;\n\tcreateDebug.disable = disable;\n\tcreateDebug.enable = enable;\n\tcreateDebug.enabled = enabled;\n\tcreateDebug.humanize = require('ms');\n\tcreateDebug.destroy = destroy;\n\n\tObject.keys(env).forEach(key => {\n\t\tcreateDebug[key] = env[key];\n\t});\n\n\t/**\n\t* The currently active debug mode names, and names to skip.\n\t*/\n\n\tcreateDebug.names = [];\n\tcreateDebug.skips = [];\n\n\t/**\n\t* Map of special \"%n\" handling functions, for the debug \"format\" argument.\n\t*\n\t* Valid key names are a single, lower or upper-case letter, i.e. \"n\" and \"N\".\n\t*/\n\tcreateDebug.formatters = {};\n\n\t/**\n\t* Selects a color for a debug namespace\n\t* @param {String} namespace The namespace string for the debug instance to be colored\n\t* @return {Number|String} An ANSI color code for the given namespace\n\t* @api private\n\t*/\n\tfunction selectColor(namespace) {\n\t\tlet hash = 0;\n\n\t\tfor (let i = 0; i < namespace.length; i++) {\n\t\t\thash = ((hash << 5) - hash) + namespace.charCodeAt(i);\n\t\t\thash |= 0; // Convert to 32bit integer\n\t\t}\n\n\t\treturn createDebug.colors[Math.abs(hash) % createDebug.colors.length];\n\t}\n\tcreateDebug.selectColor = selectColor;\n\n\t/**\n\t* Create a debugger with the given `namespace`.\n\t*\n\t* @param {String} namespace\n\t* @return {Function}\n\t* @api public\n\t*/\n\tfunction createDebug(namespace) {\n\t\tlet prevTime;\n\t\tlet enableOverride = null;\n\t\tlet namespacesCache;\n\t\tlet enabledCache;\n\n\t\tfunction debug(...args) {\n\t\t\t// Disabled?\n\t\t\tif (!debug.enabled) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst self = debug;\n\n\t\t\t// Set `diff` timestamp\n\t\t\tconst curr = Number(new Date());\n\t\t\tconst ms = curr - (prevTime || curr);\n\t\t\tself.diff = ms;\n\t\t\tself.prev = prevTime;\n\t\t\tself.curr = curr;\n\t\t\tprevTime = curr;\n\n\t\t\targs[0] = createDebug.coerce(args[0]);\n\n\t\t\tif (typeof args[0] !== 'string') {\n\t\t\t\t// Anything else let's inspect with %O\n\t\t\t\targs.unshift('%O');\n\t\t\t}\n\n\t\t\t// Apply any `formatters` transformations\n\t\t\tlet index = 0;\n\t\t\targs[0] = args[0].replace(/%([a-zA-Z%])/g, (match, format) => {\n\t\t\t\t// If we encounter an escaped % then don't increase the array index\n\t\t\t\tif (match === '%%') {\n\t\t\t\t\treturn '%';\n\t\t\t\t}\n\t\t\t\tindex++;\n\t\t\t\tconst formatter = createDebug.formatters[format];\n\t\t\t\tif (typeof formatter === 'function') {\n\t\t\t\t\tconst val = args[index];\n\t\t\t\t\tmatch = formatter.call(self, val);\n\n\t\t\t\t\t// Now we need to remove `args[index]` since it's inlined in the `format`\n\t\t\t\t\targs.splice(index, 1);\n\t\t\t\t\tindex--;\n\t\t\t\t}\n\t\t\t\treturn match;\n\t\t\t});\n\n\t\t\t// Apply env-specific formatting (colors, etc.)\n\t\t\tcreateDebug.formatArgs.call(self, args);\n\n\t\t\tconst logFn = self.log || createDebug.log;\n\t\t\tlogFn.apply(self, args);\n\t\t}\n\n\t\tdebug.namespace = namespace;\n\t\tdebug.useColors = createDebug.useColors();\n\t\tdebug.color = createDebug.selectColor(namespace);\n\t\tdebug.extend = extend;\n\t\tdebug.destroy = createDebug.destroy; // XXX Temporary. Will be removed in the next major release.\n\n\t\tObject.defineProperty(debug, 'enabled', {\n\t\t\tenumerable: true,\n\t\t\tconfigurable: false,\n\t\t\tget: () => {\n\t\t\t\tif (enableOverride !== null) {\n\t\t\t\t\treturn enableOverride;\n\t\t\t\t}\n\t\t\t\tif (namespacesCache !== createDebug.namespaces) {\n\t\t\t\t\tnamespacesCache = createDebug.namespaces;\n\t\t\t\t\tenabledCache = createDebug.enabled(namespace);\n\t\t\t\t}\n\n\t\t\t\treturn enabledCache;\n\t\t\t},\n\t\t\tset: v => {\n\t\t\t\tenableOverride = v;\n\t\t\t}\n\t\t});\n\n\t\t// Env-specific initialization logic for debug instances\n\t\tif (typeof createDebug.init === 'function') {\n\t\t\tcreateDebug.init(debug);\n\t\t}\n\n\t\treturn debug;\n\t}\n\n\tfunction extend(namespace, delimiter) {\n\t\tconst newDebug = createDebug(this.namespace + (typeof delimiter === 'undefined' ? ':' : delimiter) + namespace);\n\t\tnewDebug.log = this.log;\n\t\treturn newDebug;\n\t}\n\n\t/**\n\t* Enables a debug mode by namespaces. This can include modes\n\t* separated by a colon and wildcards.\n\t*\n\t* @param {String} namespaces\n\t* @api public\n\t*/\n\tfunction enable(namespaces) {\n\t\tcreateDebug.save(namespaces);\n\t\tcreateDebug.namespaces = namespaces;\n\n\t\tcreateDebug.names = [];\n\t\tcreateDebug.skips = [];\n\n\t\tlet i;\n\t\tconst split = (typeof namespaces === 'string' ? namespaces : '').split(/[\\s,]+/);\n\t\tconst len = split.length;\n\n\t\tfor (i = 0; i < len; i++) {\n\t\t\tif (!split[i]) {\n\t\t\t\t// ignore empty strings\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tnamespaces = split[i].replace(/\\*/g, '.*?');\n\n\t\t\tif (namespaces[0] === '-') {\n\t\t\t\tcreateDebug.skips.push(new RegExp('^' + namespaces.slice(1) + '$'));\n\t\t\t} else {\n\t\t\t\tcreateDebug.names.push(new RegExp('^' + namespaces + '$'));\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t* Disable debug output.\n\t*\n\t* @return {String} namespaces\n\t* @api public\n\t*/\n\tfunction disable() {\n\t\tconst namespaces = [\n\t\t\t...createDebug.names.map(toNamespace),\n\t\t\t...createDebug.skips.map(toNamespace).map(namespace => '-' + namespace)\n\t\t].join(',');\n\t\tcreateDebug.enable('');\n\t\treturn namespaces;\n\t}\n\n\t/**\n\t* Returns true if the given mode name is enabled, false otherwise.\n\t*\n\t* @param {String} name\n\t* @return {Boolean}\n\t* @api public\n\t*/\n\tfunction enabled(name) {\n\t\tif (name[name.length - 1] === '*') {\n\t\t\treturn true;\n\t\t}\n\n\t\tlet i;\n\t\tlet len;\n\n\t\tfor (i = 0, len = createDebug.skips.length; i < len; i++) {\n\t\t\tif (createDebug.skips[i].test(name)) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\tfor (i = 0, len = createDebug.names.length; i < len; i++) {\n\t\t\tif (createDebug.names[i].test(name)) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\n\t\treturn false;\n\t}\n\n\t/**\n\t* Convert regexp to namespace\n\t*\n\t* @param {RegExp} regxep\n\t* @return {String} namespace\n\t* @api private\n\t*/\n\tfunction toNamespace(regexp) {\n\t\treturn regexp.toString()\n\t\t\t.substring(2, regexp.toString().length - 2)\n\t\t\t.replace(/\\.\\*\\?$/, '*');\n\t}\n\n\t/**\n\t* Coerce `val`.\n\t*\n\t* @param {Mixed} val\n\t* @return {Mixed}\n\t* @api private\n\t*/\n\tfunction coerce(val) {\n\t\tif (val instanceof Error) {\n\t\t\treturn val.stack || val.message;\n\t\t}\n\t\treturn val;\n\t}\n\n\t/**\n\t* XXX DO NOT USE. This is a temporary stub function.\n\t* XXX It WILL be removed in the next major release.\n\t*/\n\tfunction destroy() {\n\t\tconsole.warn('Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`.');\n\t}\n\n\tcreateDebug.enable(createDebug.load());\n\n\treturn createDebug;\n}\n\nmodule.exports = setup;\n","/**\n * Helpers.\n */\n\nvar s = 1000;\nvar m = s * 60;\nvar h = m * 60;\nvar d = h * 24;\nvar w = d * 7;\nvar y = d * 365.25;\n\n/**\n * Parse or format the given `val`.\n *\n * Options:\n *\n *  - `long` verbose formatting [false]\n *\n * @param {String|Number} val\n * @param {Object} [options]\n * @throws {Error} throw an error if val is not a non-empty string or a number\n * @return {String|Number}\n * @api public\n */\n\nmodule.exports = function(val, options) {\n  options = options || {};\n  var type = typeof val;\n  if (type === 'string' && val.length > 0) {\n    return parse(val);\n  } else if (type === 'number' && isFinite(val)) {\n    return options.long ? fmtLong(val) : fmtShort(val);\n  }\n  throw new Error(\n    'val is not a non-empty string or a valid number. val=' +\n      JSON.stringify(val)\n  );\n};\n\n/**\n * Parse the given `str` and return milliseconds.\n *\n * @param {String} str\n * @return {Number}\n * @api private\n */\n\nfunction parse(str) {\n  str = String(str);\n  if (str.length > 100) {\n    return;\n  }\n  var match = /^(-?(?:\\d+)?\\.?\\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|weeks?|w|years?|yrs?|y)?$/i.exec(\n    str\n  );\n  if (!match) {\n    return;\n  }\n  var n = parseFloat(match[1]);\n  var type = (match[2] || 'ms').toLowerCase();\n  switch (type) {\n    case 'years':\n    case 'year':\n    case 'yrs':\n    case 'yr':\n    case 'y':\n      return n * y;\n    case 'weeks':\n    case 'week':\n    case 'w':\n      return n * w;\n    case 'days':\n    case 'day':\n    case 'd':\n      return n * d;\n    case 'hours':\n    case 'hour':\n    case 'hrs':\n    case 'hr':\n    case 'h':\n      return n * h;\n    case 'minutes':\n    case 'minute':\n    case 'mins':\n    case 'min':\n    case 'm':\n      return n * m;\n    case 'seconds':\n    case 'second':\n    case 'secs':\n    case 'sec':\n    case 's':\n      return n * s;\n    case 'milliseconds':\n    case 'millisecond':\n    case 'msecs':\n    case 'msec':\n    case 'ms':\n      return n;\n    default:\n      return undefined;\n  }\n}\n\n/**\n * Short format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction fmtShort(ms) {\n  var msAbs = Math.abs(ms);\n  if (msAbs >= d) {\n    return Math.round(ms / d) + 'd';\n  }\n  if (msAbs >= h) {\n    return Math.round(ms / h) + 'h';\n  }\n  if (msAbs >= m) {\n    return Math.round(ms / m) + 'm';\n  }\n  if (msAbs >= s) {\n    return Math.round(ms / s) + 's';\n  }\n  return ms + 'ms';\n}\n\n/**\n * Long format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction fmtLong(ms) {\n  var msAbs = Math.abs(ms);\n  if (msAbs >= d) {\n    return plural(ms, msAbs, d, 'day');\n  }\n  if (msAbs >= h) {\n    return plural(ms, msAbs, h, 'hour');\n  }\n  if (msAbs >= m) {\n    return plural(ms, msAbs, m, 'minute');\n  }\n  if (msAbs >= s) {\n    return plural(ms, msAbs, s, 'second');\n  }\n  return ms + ' ms';\n}\n\n/**\n * Pluralization helper.\n */\n\nfunction plural(ms, msAbs, n, name) {\n  var isPlural = msAbs >= n * 1.5;\n  return Math.round(ms / n) + ' ' + name + (isPlural ? 's' : '');\n}\n","/* eslint-env node */\n'use strict';\n\n// SDP helpers.\nconst SDPUtils = {};\n\n// Generate an alphanumeric identifier for cname or mids.\n// TODO: use UUIDs instead? https://gist.github.com/jed/982883\nSDPUtils.generateIdentifier = function() {\n  return Math.random().toString(36).substring(2, 12);\n};\n\n// The RTCP CNAME used by all peerconnections from the same JS.\nSDPUtils.localCName = SDPUtils.generateIdentifier();\n\n// Splits SDP into lines, dealing with both CRLF and LF.\nSDPUtils.splitLines = function(blob) {\n  return blob.trim().split('\\n').map(line => line.trim());\n};\n// Splits SDP into sessionpart and mediasections. Ensures CRLF.\nSDPUtils.splitSections = function(blob) {\n  const parts = blob.split('\\nm=');\n  return parts.map((part, index) => (index > 0 ?\n    'm=' + part : part).trim() + '\\r\\n');\n};\n\n// Returns the session description.\nSDPUtils.getDescription = function(blob) {\n  const sections = SDPUtils.splitSections(blob);\n  return sections && sections[0];\n};\n\n// Returns the individual media sections.\nSDPUtils.getMediaSections = function(blob) {\n  const sections = SDPUtils.splitSections(blob);\n  sections.shift();\n  return sections;\n};\n\n// Returns lines that start with a certain prefix.\nSDPUtils.matchPrefix = function(blob, prefix) {\n  return SDPUtils.splitLines(blob).filter(line => line.indexOf(prefix) === 0);\n};\n\n// Parses an ICE candidate line. Sample input:\n// candidate:702786350 2 udp 41819902 8.8.8.8 60769 typ relay raddr 8.8.8.8\n// rport 55996\"\n// Input can be prefixed with a=.\nSDPUtils.parseCandidate = function(line) {\n  let parts;\n  // Parse both variants.\n  if (line.indexOf('a=candidate:') === 0) {\n    parts = line.substring(12).split(' ');\n  } else {\n    parts = line.substring(10).split(' ');\n  }\n\n  const candidate = {\n    foundation: parts[0],\n    component: {1: 'rtp', 2: 'rtcp'}[parts[1]] || parts[1],\n    protocol: parts[2].toLowerCase(),\n    priority: parseInt(parts[3], 10),\n    ip: parts[4],\n    address: parts[4], // address is an alias for ip.\n    port: parseInt(parts[5], 10),\n    // skip parts[6] == 'typ'\n    type: parts[7],\n  };\n\n  for (let i = 8; i < parts.length; i += 2) {\n    switch (parts[i]) {\n      case 'raddr':\n        candidate.relatedAddress = parts[i + 1];\n        break;\n      case 'rport':\n        candidate.relatedPort = parseInt(parts[i + 1], 10);\n        break;\n      case 'tcptype':\n        candidate.tcpType = parts[i + 1];\n        break;\n      case 'ufrag':\n        candidate.ufrag = parts[i + 1]; // for backward compatibility.\n        candidate.usernameFragment = parts[i + 1];\n        break;\n      default: // extension handling, in particular ufrag. Don't overwrite.\n        if (candidate[parts[i]] === undefined) {\n          candidate[parts[i]] = parts[i + 1];\n        }\n        break;\n    }\n  }\n  return candidate;\n};\n\n// Translates a candidate object into SDP candidate attribute.\n// This does not include the a= prefix!\nSDPUtils.writeCandidate = function(candidate) {\n  const sdp = [];\n  sdp.push(candidate.foundation);\n\n  const component = candidate.component;\n  if (component === 'rtp') {\n    sdp.push(1);\n  } else if (component === 'rtcp') {\n    sdp.push(2);\n  } else {\n    sdp.push(component);\n  }\n  sdp.push(candidate.protocol.toUpperCase());\n  sdp.push(candidate.priority);\n  sdp.push(candidate.address || candidate.ip);\n  sdp.push(candidate.port);\n\n  const type = candidate.type;\n  sdp.push('typ');\n  sdp.push(type);\n  if (type !== 'host' && candidate.relatedAddress &&\n      candidate.relatedPort) {\n    sdp.push('raddr');\n    sdp.push(candidate.relatedAddress);\n    sdp.push('rport');\n    sdp.push(candidate.relatedPort);\n  }\n  if (candidate.tcpType && candidate.protocol.toLowerCase() === 'tcp') {\n    sdp.push('tcptype');\n    sdp.push(candidate.tcpType);\n  }\n  if (candidate.usernameFragment || candidate.ufrag) {\n    sdp.push('ufrag');\n    sdp.push(candidate.usernameFragment || candidate.ufrag);\n  }\n  return 'candidate:' + sdp.join(' ');\n};\n\n// Parses an ice-options line, returns an array of option tags.\n// Sample input:\n// a=ice-options:foo bar\nSDPUtils.parseIceOptions = function(line) {\n  return line.substring(14).split(' ');\n};\n\n// Parses a rtpmap line, returns RTCRtpCoddecParameters. Sample input:\n// a=rtpmap:111 opus/48000/2\nSDPUtils.parseRtpMap = function(line) {\n  let parts = line.substring(9).split(' ');\n  const parsed = {\n    payloadType: parseInt(parts.shift(), 10), // was: id\n  };\n\n  parts = parts[0].split('/');\n\n  parsed.name = parts[0];\n  parsed.clockRate = parseInt(parts[1], 10); // was: clockrate\n  parsed.channels = parts.length === 3 ? parseInt(parts[2], 10) : 1;\n  // legacy alias, got renamed back to channels in ORTC.\n  parsed.numChannels = parsed.channels;\n  return parsed;\n};\n\n// Generates a rtpmap line from RTCRtpCodecCapability or\n// RTCRtpCodecParameters.\nSDPUtils.writeRtpMap = function(codec) {\n  let pt = codec.payloadType;\n  if (codec.preferredPayloadType !== undefined) {\n    pt = codec.preferredPayloadType;\n  }\n  const channels = codec.channels || codec.numChannels || 1;\n  return 'a=rtpmap:' + pt + ' ' + codec.name + '/' + codec.clockRate +\n      (channels !== 1 ? '/' + channels : '') + '\\r\\n';\n};\n\n// Parses a extmap line (headerextension from RFC 5285). Sample input:\n// a=extmap:2 urn:ietf:params:rtp-hdrext:toffset\n// a=extmap:2/sendonly urn:ietf:params:rtp-hdrext:toffset\nSDPUtils.parseExtmap = function(line) {\n  const parts = line.substring(9).split(' ');\n  return {\n    id: parseInt(parts[0], 10),\n    direction: parts[0].indexOf('/') > 0 ? parts[0].split('/')[1] : 'sendrecv',\n    uri: parts[1],\n    attributes: parts.slice(2).join(' '),\n  };\n};\n\n// Generates an extmap line from RTCRtpHeaderExtensionParameters or\n// RTCRtpHeaderExtension.\nSDPUtils.writeExtmap = function(headerExtension) {\n  return 'a=extmap:' + (headerExtension.id || headerExtension.preferredId) +\n      (headerExtension.direction && headerExtension.direction !== 'sendrecv'\n        ? '/' + headerExtension.direction\n        : '') +\n      ' ' + headerExtension.uri +\n      (headerExtension.attributes ? ' ' + headerExtension.attributes : '') +\n      '\\r\\n';\n};\n\n// Parses a fmtp line, returns dictionary. Sample input:\n// a=fmtp:96 vbr=on;cng=on\n// Also deals with vbr=on; cng=on\nSDPUtils.parseFmtp = function(line) {\n  const parsed = {};\n  let kv;\n  const parts = line.substring(line.indexOf(' ') + 1).split(';');\n  for (let j = 0; j < parts.length; j++) {\n    kv = parts[j].trim().split('=');\n    parsed[kv[0].trim()] = kv[1];\n  }\n  return parsed;\n};\n\n// Generates a fmtp line from RTCRtpCodecCapability or RTCRtpCodecParameters.\nSDPUtils.writeFmtp = function(codec) {\n  let line = '';\n  let pt = codec.payloadType;\n  if (codec.preferredPayloadType !== undefined) {\n    pt = codec.preferredPayloadType;\n  }\n  if (codec.parameters && Object.keys(codec.parameters).length) {\n    const params = [];\n    Object.keys(codec.parameters).forEach(param => {\n      if (codec.parameters[param] !== undefined) {\n        params.push(param + '=' + codec.parameters[param]);\n      } else {\n        params.push(param);\n      }\n    });\n    line += 'a=fmtp:' + pt + ' ' + params.join(';') + '\\r\\n';\n  }\n  return line;\n};\n\n// Parses a rtcp-fb line, returns RTCPRtcpFeedback object. Sample input:\n// a=rtcp-fb:98 nack rpsi\nSDPUtils.parseRtcpFb = function(line) {\n  const parts = line.substring(line.indexOf(' ') + 1).split(' ');\n  return {\n    type: parts.shift(),\n    parameter: parts.join(' '),\n  };\n};\n\n// Generate a=rtcp-fb lines from RTCRtpCodecCapability or RTCRtpCodecParameters.\nSDPUtils.writeRtcpFb = function(codec) {\n  let lines = '';\n  let pt = codec.payloadType;\n  if (codec.preferredPayloadType !== undefined) {\n    pt = codec.preferredPayloadType;\n  }\n  if (codec.rtcpFeedback && codec.rtcpFeedback.length) {\n    // FIXME: special handling for trr-int?\n    codec.rtcpFeedback.forEach(fb => {\n      lines += 'a=rtcp-fb:' + pt + ' ' + fb.type +\n      (fb.parameter && fb.parameter.length ? ' ' + fb.parameter : '') +\n          '\\r\\n';\n    });\n  }\n  return lines;\n};\n\n// Parses a RFC 5576 ssrc media attribute. Sample input:\n// a=ssrc:3735928559 cname:something\nSDPUtils.parseSsrcMedia = function(line) {\n  const sp = line.indexOf(' ');\n  const parts = {\n    ssrc: parseInt(line.substring(7, sp), 10),\n  };\n  const colon = line.indexOf(':', sp);\n  if (colon > -1) {\n    parts.attribute = line.substring(sp + 1, colon);\n    parts.value = line.substring(colon + 1);\n  } else {\n    parts.attribute = line.substring(sp + 1);\n  }\n  return parts;\n};\n\n// Parse a ssrc-group line (see RFC 5576). Sample input:\n// a=ssrc-group:semantics 12 34\nSDPUtils.parseSsrcGroup = function(line) {\n  const parts = line.substring(13).split(' ');\n  return {\n    semantics: parts.shift(),\n    ssrcs: parts.map(ssrc => parseInt(ssrc, 10)),\n  };\n};\n\n// Extracts the MID (RFC 5888) from a media section.\n// Returns the MID or undefined if no mid line was found.\nSDPUtils.getMid = function(mediaSection) {\n  const mid = SDPUtils.matchPrefix(mediaSection, 'a=mid:')[0];\n  if (mid) {\n    return mid.substring(6);\n  }\n};\n\n// Parses a fingerprint line for DTLS-SRTP.\nSDPUtils.parseFingerprint = function(line) {\n  const parts = line.substring(14).split(' ');\n  return {\n    algorithm: parts[0].toLowerCase(), // algorithm is case-sensitive in Edge.\n    value: parts[1].toUpperCase(), // the definition is upper-case in RFC 4572.\n  };\n};\n\n// Extracts DTLS parameters from SDP media section or sessionpart.\n// FIXME: for consistency with other functions this should only\n//   get the fingerprint line as input. See also getIceParameters.\nSDPUtils.getDtlsParameters = function(mediaSection, sessionpart) {\n  const lines = SDPUtils.matchPrefix(mediaSection + sessionpart,\n    'a=fingerprint:');\n  // Note: a=setup line is ignored since we use the 'auto' role in Edge.\n  return {\n    role: 'auto',\n    fingerprints: lines.map(SDPUtils.parseFingerprint),\n  };\n};\n\n// Serializes DTLS parameters to SDP.\nSDPUtils.writeDtlsParameters = function(params, setupType) {\n  let sdp = 'a=setup:' + setupType + '\\r\\n';\n  params.fingerprints.forEach(fp => {\n    sdp += 'a=fingerprint:' + fp.algorithm + ' ' + fp.value + '\\r\\n';\n  });\n  return sdp;\n};\n\n// Parses a=crypto lines into\n//   https://rawgit.com/aboba/edgertc/master/msortc-rs4.html#dictionary-rtcsrtpsdesparameters-members\nSDPUtils.parseCryptoLine = function(line) {\n  const parts = line.substring(9).split(' ');\n  return {\n    tag: parseInt(parts[0], 10),\n    cryptoSuite: parts[1],\n    keyParams: parts[2],\n    sessionParams: parts.slice(3),\n  };\n};\n\nSDPUtils.writeCryptoLine = function(parameters) {\n  return 'a=crypto:' + parameters.tag + ' ' +\n    parameters.cryptoSuite + ' ' +\n    (typeof parameters.keyParams === 'object'\n      ? SDPUtils.writeCryptoKeyParams(parameters.keyParams)\n      : parameters.keyParams) +\n    (parameters.sessionParams ? ' ' + parameters.sessionParams.join(' ') : '') +\n    '\\r\\n';\n};\n\n// Parses the crypto key parameters into\n//   https://rawgit.com/aboba/edgertc/master/msortc-rs4.html#rtcsrtpkeyparam*\nSDPUtils.parseCryptoKeyParams = function(keyParams) {\n  if (keyParams.indexOf('inline:') !== 0) {\n    return null;\n  }\n  const parts = keyParams.substring(7).split('|');\n  return {\n    keyMethod: 'inline',\n    keySalt: parts[0],\n    lifeTime: parts[1],\n    mkiValue: parts[2] ? parts[2].split(':')[0] : undefined,\n    mkiLength: parts[2] ? parts[2].split(':')[1] : undefined,\n  };\n};\n\nSDPUtils.writeCryptoKeyParams = function(keyParams) {\n  return keyParams.keyMethod + ':'\n    + keyParams.keySalt +\n    (keyParams.lifeTime ? '|' + keyParams.lifeTime : '') +\n    (keyParams.mkiValue && keyParams.mkiLength\n      ? '|' + keyParams.mkiValue + ':' + keyParams.mkiLength\n      : '');\n};\n\n// Extracts all SDES parameters.\nSDPUtils.getCryptoParameters = function(mediaSection, sessionpart) {\n  const lines = SDPUtils.matchPrefix(mediaSection + sessionpart,\n    'a=crypto:');\n  return lines.map(SDPUtils.parseCryptoLine);\n};\n\n// Parses ICE information from SDP media section or sessionpart.\n// FIXME: for consistency with other functions this should only\n//   get the ice-ufrag and ice-pwd lines as input.\nSDPUtils.getIceParameters = function(mediaSection, sessionpart) {\n  const ufrag = SDPUtils.matchPrefix(mediaSection + sessionpart,\n    'a=ice-ufrag:')[0];\n  const pwd = SDPUtils.matchPrefix(mediaSection + sessionpart,\n    'a=ice-pwd:')[0];\n  if (!(ufrag && pwd)) {\n    return null;\n  }\n  return {\n    usernameFragment: ufrag.substring(12),\n    password: pwd.substring(10),\n  };\n};\n\n// Serializes ICE parameters to SDP.\nSDPUtils.writeIceParameters = function(params) {\n  let sdp = 'a=ice-ufrag:' + params.usernameFragment + '\\r\\n' +\n      'a=ice-pwd:' + params.password + '\\r\\n';\n  if (params.iceLite) {\n    sdp += 'a=ice-lite\\r\\n';\n  }\n  return sdp;\n};\n\n// Parses the SDP media section and returns RTCRtpParameters.\nSDPUtils.parseRtpParameters = function(mediaSection) {\n  const description = {\n    codecs: [],\n    headerExtensions: [],\n    fecMechanisms: [],\n    rtcp: [],\n  };\n  const lines = SDPUtils.splitLines(mediaSection);\n  const mline = lines[0].split(' ');\n  description.profile = mline[2];\n  for (let i = 3; i < mline.length; i++) { // find all codecs from mline[3..]\n    const pt = mline[i];\n    const rtpmapline = SDPUtils.matchPrefix(\n      mediaSection, 'a=rtpmap:' + pt + ' ')[0];\n    if (rtpmapline) {\n      const codec = SDPUtils.parseRtpMap(rtpmapline);\n      const fmtps = SDPUtils.matchPrefix(\n        mediaSection, 'a=fmtp:' + pt + ' ');\n      // Only the first a=fmtp:<pt> is considered.\n      codec.parameters = fmtps.length ? SDPUtils.parseFmtp(fmtps[0]) : {};\n      codec.rtcpFeedback = SDPUtils.matchPrefix(\n        mediaSection, 'a=rtcp-fb:' + pt + ' ')\n        .map(SDPUtils.parseRtcpFb);\n      description.codecs.push(codec);\n      // parse FEC mechanisms from rtpmap lines.\n      switch (codec.name.toUpperCase()) {\n        case 'RED':\n        case 'ULPFEC':\n          description.fecMechanisms.push(codec.name.toUpperCase());\n          break;\n        default: // only RED and ULPFEC are recognized as FEC mechanisms.\n          break;\n      }\n    }\n  }\n  SDPUtils.matchPrefix(mediaSection, 'a=extmap:').forEach(line => {\n    description.headerExtensions.push(SDPUtils.parseExtmap(line));\n  });\n  const wildcardRtcpFb = SDPUtils.matchPrefix(mediaSection, 'a=rtcp-fb:* ')\n    .map(SDPUtils.parseRtcpFb);\n  description.codecs.forEach(codec => {\n    wildcardRtcpFb.forEach(fb=> {\n      const duplicate = codec.rtcpFeedback.find(existingFeedback => {\n        return existingFeedback.type === fb.type &&\n          existingFeedback.parameter === fb.parameter;\n      });\n      if (!duplicate) {\n        codec.rtcpFeedback.push(fb);\n      }\n    });\n  });\n  // FIXME: parse rtcp.\n  return description;\n};\n\n// Generates parts of the SDP media section describing the capabilities /\n// parameters.\nSDPUtils.writeRtpDescription = function(kind, caps) {\n  let sdp = '';\n\n  // Build the mline.\n  sdp += 'm=' + kind + ' ';\n  sdp += caps.codecs.length > 0 ? '9' : '0'; // reject if no codecs.\n  sdp += ' ' + (caps.profile || 'UDP/TLS/RTP/SAVPF') + ' ';\n  sdp += caps.codecs.map(codec => {\n    if (codec.preferredPayloadType !== undefined) {\n      return codec.preferredPayloadType;\n    }\n    return codec.payloadType;\n  }).join(' ') + '\\r\\n';\n\n  sdp += 'c=IN IP4 0.0.0.0\\r\\n';\n  sdp += 'a=rtcp:9 IN IP4 0.0.0.0\\r\\n';\n\n  // Add a=rtpmap lines for each codec. Also fmtp and rtcp-fb.\n  caps.codecs.forEach(codec => {\n    sdp += SDPUtils.writeRtpMap(codec);\n    sdp += SDPUtils.writeFmtp(codec);\n    sdp += SDPUtils.writeRtcpFb(codec);\n  });\n  let maxptime = 0;\n  caps.codecs.forEach(codec => {\n    if (codec.maxptime > maxptime) {\n      maxptime = codec.maxptime;\n    }\n  });\n  if (maxptime > 0) {\n    sdp += 'a=maxptime:' + maxptime + '\\r\\n';\n  }\n\n  if (caps.headerExtensions) {\n    caps.headerExtensions.forEach(extension => {\n      sdp += SDPUtils.writeExtmap(extension);\n    });\n  }\n  // FIXME: write fecMechanisms.\n  return sdp;\n};\n\n// Parses the SDP media section and returns an array of\n// RTCRtpEncodingParameters.\nSDPUtils.parseRtpEncodingParameters = function(mediaSection) {\n  const encodingParameters = [];\n  const description = SDPUtils.parseRtpParameters(mediaSection);\n  const hasRed = description.fecMechanisms.indexOf('RED') !== -1;\n  const hasUlpfec = description.fecMechanisms.indexOf('ULPFEC') !== -1;\n\n  // filter a=ssrc:... cname:, ignore PlanB-msid\n  const ssrcs = SDPUtils.matchPrefix(mediaSection, 'a=ssrc:')\n    .map(line => SDPUtils.parseSsrcMedia(line))\n    .filter(parts => parts.attribute === 'cname');\n  const primarySsrc = ssrcs.length > 0 && ssrcs[0].ssrc;\n  let secondarySsrc;\n\n  const flows = SDPUtils.matchPrefix(mediaSection, 'a=ssrc-group:FID')\n    .map(line => {\n      const parts = line.substring(17).split(' ');\n      return parts.map(part => parseInt(part, 10));\n    });\n  if (flows.length > 0 && flows[0].length > 1 && flows[0][0] === primarySsrc) {\n    secondarySsrc = flows[0][1];\n  }\n\n  description.codecs.forEach(codec => {\n    if (codec.name.toUpperCase() === 'RTX' && codec.parameters.apt) {\n      let encParam = {\n        ssrc: primarySsrc,\n        codecPayloadType: parseInt(codec.parameters.apt, 10),\n      };\n      if (primarySsrc && secondarySsrc) {\n        encParam.rtx = {ssrc: secondarySsrc};\n      }\n      encodingParameters.push(encParam);\n      if (hasRed) {\n        encParam = JSON.parse(JSON.stringify(encParam));\n        encParam.fec = {\n          ssrc: primarySsrc,\n          mechanism: hasUlpfec ? 'red+ulpfec' : 'red',\n        };\n        encodingParameters.push(encParam);\n      }\n    }\n  });\n  if (encodingParameters.length === 0 && primarySsrc) {\n    encodingParameters.push({\n      ssrc: primarySsrc,\n    });\n  }\n\n  // we support both b=AS and b=TIAS but interpret AS as TIAS.\n  let bandwidth = SDPUtils.matchPrefix(mediaSection, 'b=');\n  if (bandwidth.length) {\n    if (bandwidth[0].indexOf('b=TIAS:') === 0) {\n      bandwidth = parseInt(bandwidth[0].substring(7), 10);\n    } else if (bandwidth[0].indexOf('b=AS:') === 0) {\n      // use formula from JSEP to convert b=AS to TIAS value.\n      bandwidth = parseInt(bandwidth[0].substring(5), 10) * 1000 * 0.95\n          - (50 * 40 * 8);\n    } else {\n      bandwidth = undefined;\n    }\n    encodingParameters.forEach(params => {\n      params.maxBitrate = bandwidth;\n    });\n  }\n  return encodingParameters;\n};\n\n// parses http://draft.ortc.org/#rtcrtcpparameters*\nSDPUtils.parseRtcpParameters = function(mediaSection) {\n  const rtcpParameters = {};\n\n  // Gets the first SSRC. Note that with RTX there might be multiple\n  // SSRCs.\n  const remoteSsrc = SDPUtils.matchPrefix(mediaSection, 'a=ssrc:')\n    .map(line => SDPUtils.parseSsrcMedia(line))\n    .filter(obj => obj.attribute === 'cname')[0];\n  if (remoteSsrc) {\n    rtcpParameters.cname = remoteSsrc.value;\n    rtcpParameters.ssrc = remoteSsrc.ssrc;\n  }\n\n  // Edge uses the compound attribute instead of reducedSize\n  // compound is !reducedSize\n  const rsize = SDPUtils.matchPrefix(mediaSection, 'a=rtcp-rsize');\n  rtcpParameters.reducedSize = rsize.length > 0;\n  rtcpParameters.compound = rsize.length === 0;\n\n  // parses the rtcp-mux attrіbute.\n  // Note that Edge does not support unmuxed RTCP.\n  const mux = SDPUtils.matchPrefix(mediaSection, 'a=rtcp-mux');\n  rtcpParameters.mux = mux.length > 0;\n\n  return rtcpParameters;\n};\n\nSDPUtils.writeRtcpParameters = function(rtcpParameters) {\n  let sdp = '';\n  if (rtcpParameters.reducedSize) {\n    sdp += 'a=rtcp-rsize\\r\\n';\n  }\n  if (rtcpParameters.mux) {\n    sdp += 'a=rtcp-mux\\r\\n';\n  }\n  if (rtcpParameters.ssrc !== undefined && rtcpParameters.cname) {\n    sdp += 'a=ssrc:' + rtcpParameters.ssrc +\n      ' cname:' + rtcpParameters.cname + '\\r\\n';\n  }\n  return sdp;\n};\n\n\n// parses either a=msid: or a=ssrc:... msid lines and returns\n// the id of the MediaStream and MediaStreamTrack.\nSDPUtils.parseMsid = function(mediaSection) {\n  let parts;\n  const spec = SDPUtils.matchPrefix(mediaSection, 'a=msid:');\n  if (spec.length === 1) {\n    parts = spec[0].substring(7).split(' ');\n    return {stream: parts[0], track: parts[1]};\n  }\n  const planB = SDPUtils.matchPrefix(mediaSection, 'a=ssrc:')\n    .map(line => SDPUtils.parseSsrcMedia(line))\n    .filter(msidParts => msidParts.attribute === 'msid');\n  if (planB.length > 0) {\n    parts = planB[0].value.split(' ');\n    return {stream: parts[0], track: parts[1]};\n  }\n};\n\n// SCTP\n// parses draft-ietf-mmusic-sctp-sdp-26 first and falls back\n// to draft-ietf-mmusic-sctp-sdp-05\nSDPUtils.parseSctpDescription = function(mediaSection) {\n  const mline = SDPUtils.parseMLine(mediaSection);\n  const maxSizeLine = SDPUtils.matchPrefix(mediaSection, 'a=max-message-size:');\n  let maxMessageSize;\n  if (maxSizeLine.length > 0) {\n    maxMessageSize = parseInt(maxSizeLine[0].substring(19), 10);\n  }\n  if (isNaN(maxMessageSize)) {\n    maxMessageSize = 65536;\n  }\n  const sctpPort = SDPUtils.matchPrefix(mediaSection, 'a=sctp-port:');\n  if (sctpPort.length > 0) {\n    return {\n      port: parseInt(sctpPort[0].substring(12), 10),\n      protocol: mline.fmt,\n      maxMessageSize,\n    };\n  }\n  const sctpMapLines = SDPUtils.matchPrefix(mediaSection, 'a=sctpmap:');\n  if (sctpMapLines.length > 0) {\n    const parts = sctpMapLines[0]\n      .substring(10)\n      .split(' ');\n    return {\n      port: parseInt(parts[0], 10),\n      protocol: parts[1],\n      maxMessageSize,\n    };\n  }\n};\n\n// SCTP\n// outputs the draft-ietf-mmusic-sctp-sdp-26 version that all browsers\n// support by now receiving in this format, unless we originally parsed\n// as the draft-ietf-mmusic-sctp-sdp-05 format (indicated by the m-line\n// protocol of DTLS/SCTP -- without UDP/ or TCP/)\nSDPUtils.writeSctpDescription = function(media, sctp) {\n  let output = [];\n  if (media.protocol !== 'DTLS/SCTP') {\n    output = [\n      'm=' + media.kind + ' 9 ' + media.protocol + ' ' + sctp.protocol + '\\r\\n',\n      'c=IN IP4 0.0.0.0\\r\\n',\n      'a=sctp-port:' + sctp.port + '\\r\\n',\n    ];\n  } else {\n    output = [\n      'm=' + media.kind + ' 9 ' + media.protocol + ' ' + sctp.port + '\\r\\n',\n      'c=IN IP4 0.0.0.0\\r\\n',\n      'a=sctpmap:' + sctp.port + ' ' + sctp.protocol + ' 65535\\r\\n',\n    ];\n  }\n  if (sctp.maxMessageSize !== undefined) {\n    output.push('a=max-message-size:' + sctp.maxMessageSize + '\\r\\n');\n  }\n  return output.join('');\n};\n\n// Generate a session ID for SDP.\n// https://tools.ietf.org/html/draft-ietf-rtcweb-jsep-20#section-5.2.1\n// recommends using a cryptographically random +ve 64-bit value\n// but right now this should be acceptable and within the right range\nSDPUtils.generateSessionId = function() {\n  return Math.random().toString().substr(2, 22);\n};\n\n// Write boiler plate for start of SDP\n// sessId argument is optional - if not supplied it will\n// be generated randomly\n// sessVersion is optional and defaults to 2\n// sessUser is optional and defaults to 'thisisadapterortc'\nSDPUtils.writeSessionBoilerplate = function(sessId, sessVer, sessUser) {\n  let sessionId;\n  const version = sessVer !== undefined ? sessVer : 2;\n  if (sessId) {\n    sessionId = sessId;\n  } else {\n    sessionId = SDPUtils.generateSessionId();\n  }\n  const user = sessUser || 'thisisadapterortc';\n  // FIXME: sess-id should be an NTP timestamp.\n  return 'v=0\\r\\n' +\n      'o=' + user + ' ' + sessionId + ' ' + version +\n        ' IN IP4 127.0.0.1\\r\\n' +\n      's=-\\r\\n' +\n      't=0 0\\r\\n';\n};\n\n// Gets the direction from the mediaSection or the sessionpart.\nSDPUtils.getDirection = function(mediaSection, sessionpart) {\n  // Look for sendrecv, sendonly, recvonly, inactive, default to sendrecv.\n  const lines = SDPUtils.splitLines(mediaSection);\n  for (let i = 0; i < lines.length; i++) {\n    switch (lines[i]) {\n      case 'a=sendrecv':\n      case 'a=sendonly':\n      case 'a=recvonly':\n      case 'a=inactive':\n        return lines[i].substring(2);\n      default:\n        // FIXME: What should happen here?\n    }\n  }\n  if (sessionpart) {\n    return SDPUtils.getDirection(sessionpart);\n  }\n  return 'sendrecv';\n};\n\nSDPUtils.getKind = function(mediaSection) {\n  const lines = SDPUtils.splitLines(mediaSection);\n  const mline = lines[0].split(' ');\n  return mline[0].substring(2);\n};\n\nSDPUtils.isRejected = function(mediaSection) {\n  return mediaSection.split(' ', 2)[1] === '0';\n};\n\nSDPUtils.parseMLine = function(mediaSection) {\n  const lines = SDPUtils.splitLines(mediaSection);\n  const parts = lines[0].substring(2).split(' ');\n  return {\n    kind: parts[0],\n    port: parseInt(parts[1], 10),\n    protocol: parts[2],\n    fmt: parts.slice(3).join(' '),\n  };\n};\n\nSDPUtils.parseOLine = function(mediaSection) {\n  const line = SDPUtils.matchPrefix(mediaSection, 'o=')[0];\n  const parts = line.substring(2).split(' ');\n  return {\n    username: parts[0],\n    sessionId: parts[1],\n    sessionVersion: parseInt(parts[2], 10),\n    netType: parts[3],\n    addressType: parts[4],\n    address: parts[5],\n  };\n};\n\n// a very naive interpretation of a valid SDP.\nSDPUtils.isValidSDP = function(blob) {\n  if (typeof blob !== 'string' || blob.length === 0) {\n    return false;\n  }\n  const lines = SDPUtils.splitLines(blob);\n  for (let i = 0; i < lines.length; i++) {\n    if (lines[i].length < 2 || lines[i].charAt(1) !== '=') {\n      return false;\n    }\n    // TODO: check the modifier a bit more.\n  }\n  return true;\n};\n\n// Expose public methods.\nif (typeof module === 'object') {\n  module.exports = SDPUtils;\n}\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(497);\n"],"names":["JanusPluginHandle","session","this","id","undefined","JanusSession","output","options","nextTxId","txns","eventHandlers","Object","assign","verbose","timeoutMs","keepaliveMs","prototype","attach","plugin","loop_index","payload","send","then","resp","data","detach","on","ev","callback","signal","sender","type","handle_id","sendMessage","body","sendJsep","jsep","sendTrickle","candidate","create","destroy","dispose","txId","_killKeepalive","hasOwnProperty","txn","clearTimeout","timeout","reject","Error","isError","janus","handlers","push","receive","_logIncoming","session_id","console","warn","responseType","i","length","transaction","resolve","toString","Promise","setTimeout","_transmit","_logOutgoing","JSON","stringify","_resetKeepalive","kind","message","debug","_sendKeepalive","keepaliveTimeout","catch","e","error","module","exports","mj","require","sendOriginal","indexOf","NAF","connection","adapter","reconnect","sdpUtils","isSafari","test","navigator","userAgent","debounce","fn","curr","args","Array","slice","call","arguments","_","apply","untilDataChannelOpen","dataChannel","readyState","resolver","rejector","clear","removeEventListener","addEventListener","isH264VideoSupported","document","createElement","canPlayType","OPUS_PARAMETERS","usedtx","stereo","DEFAULT_PEER_CONNECTION_CONFIG","iceServers","urls","JanusAdapter","constructor","room","clientId","joinToken","serverUrl","webRtcOptions","peerConnectionConfig","ws","reliableTransport","unreliableTransport","initialReconnectionDelay","Math","random","reconnectionDelay","reconnectionTimeout","maxReconnectionAttempts","reconnectionAttempts","publisher","occupantIds","occupants","mediaStreams","localMediaStream","pendingMediaRequests","Map","pendingOccupants","Set","availableOccupants","requestedOccupants","blockedClients","frozenUpdates","timeOffsets","serverTimeRequests","avgTimeOffset","onWebsocketOpen","bind","onWebsocketClose","onWebsocketMessage","onDataChannelMessage","onData","setServerUrl","url","setApp","app","setRoom","roomName","setJoinToken","setClientId","setWebRtcOptions","setPeerConnectionConfig","setServerConnectListeners","successListener","failureListener","connectSuccess","connectFailure","setRoomOccupantListener","occupantListener","onOccupantsChanged","setDataChannelListeners","openListener","closedListener","messageListener","onOccupantConnected","onOccupantDisconnected","onOccupantMessage","setReconnectionListeners","reconnectingListener","reconnectedListener","reconnectionErrorListener","onReconnecting","onReconnected","onReconnectionError","setEventLoops","loops","connect","websocketConnection","WebSocket","wsOnOpen","all","updateTimeOffset","disconnect","removeAllOccupants","conn","close","delayedReconnectTimeout","isDisconnected","createPublisher","initialOccupants","occupantId","addAvailableOccupant","syncOccupants","event","code","performDelayedReconnect","parse","removeAvailableOccupant","idx","splice","has","addOccupant","j","removeOccupant","add","delay","subscriber","createSubscriber","delete","setMediaStream","mediaStream","msg","get","audio","video","associate","handle","iceConnectionState","log","offer","createOffer","configurePublisherSdp","fixSafariIceUFrag","local","o","setLocalDescription","remote","r","setRemoteDescription","answer","configureSubscriberSdp","createAnswer","a","RTCPeerConnection","parseInt","webrtcup","reliableChannel","createDataChannel","ordered","unreliableChannel","maxRetransmits","getTracks","forEach","track","addTrack","plugindata","room_id","user_id","dispatchEvent","CustomEvent","detail","by","sendJoin","notifications","success","err","response","users","includes","sdp","replace","line","pt","parameters","parseFmtp","writeFmtp","payloadType","maxRetries","webrtcFailed","leftInterval","setInterval","clearInterval","media","_iOSHackDelayedInitialPeer","MediaStream","getReceivers","receiver","subscribe","token","toggleFreeze","frozen","unfreeze","freeze","flushPendingUpdates","dataForUpdateMultiMessage","networkId","l","d","getPendingData","dataType","owner","getPendingDataForNetworkId","source","storeMessage","storeSingleMessage","index","storedMessage","storedData","isOutdatedMessage","lastOwnerTime","isContemporaneousMessage","isFirstSync","set","components","enabled","shouldStartConnectionTo","client","startStreamConnection","closeStreamConnection","getConnectStatus","adapters","IS_CONNECTED","NOT_CONNECTED","clientSentTime","Date","now","res","fetch","location","href","method","cache","serverReceivedTime","headers","getTime","precision","clientReceivedTime","timeOffset","reduce","acc","offset","getServerTime","getMediaStream","audioPromise","videoPromise","promise","stream","audioStream","getAudioTracks","videoStream","getVideoTracks","getLocalMediaStream","setLocalMediaStream","existingSenders","getSenders","newSenders","tracks","t","find","s","replaceTrack","removeTrack","enableMicrophone","sendData","whom","sendDataGuaranteed","broadcastData","broadcastDataGuaranteed","kick","permsToken","block","unblock","register","formatArgs","useColors","namespace","humanize","diff","c","color","lastC","match","save","namespaces","storage","setItem","removeItem","load","getItem","process","env","DEBUG","window","__nwjs","toLowerCase","documentElement","style","WebkitAppearance","firebug","exception","table","RegExp","$1","localStorage","localstorage","warned","colors","formatters","v","createDebug","prevTime","namespacesCache","enabledCache","enableOverride","self","Number","ms","prev","coerce","unshift","format","formatter","val","selectColor","extend","defineProperty","enumerable","configurable","init","delimiter","newDebug","toNamespace","regexp","substring","default","stack","disable","names","map","skips","join","enable","split","len","name","keys","key","hash","charCodeAt","abs","m","h","plural","msAbs","n","isPlural","round","str","String","exec","parseFloat","isFinite","long","fmtShort","SDPUtils","localCName","generateIdentifier","splitLines","blob","trim","splitSections","part","getDescription","sections","getMediaSections","shift","matchPrefix","prefix","filter","parseCandidate","parts","foundation","component","protocol","priority","ip","address","port","relatedAddress","relatedPort","tcpType","ufrag","usernameFragment","writeCandidate","toUpperCase","parseIceOptions","parseRtpMap","parsed","clockRate","channels","numChannels","writeRtpMap","codec","preferredPayloadType","parseExtmap","direction","uri","attributes","writeExtmap","headerExtension","preferredId","kv","params","param","parseRtcpFb","parameter","writeRtcpFb","lines","rtcpFeedback","fb","parseSsrcMedia","sp","ssrc","colon","attribute","value","parseSsrcGroup","semantics","ssrcs","getMid","mediaSection","mid","parseFingerprint","algorithm","getDtlsParameters","sessionpart","role","fingerprints","writeDtlsParameters","setupType","fp","parseCryptoLine","tag","cryptoSuite","keyParams","sessionParams","writeCryptoLine","writeCryptoKeyParams","parseCryptoKeyParams","keyMethod","keySalt","lifeTime","mkiValue","mkiLength","getCryptoParameters","getIceParameters","pwd","password","writeIceParameters","iceLite","parseRtpParameters","description","codecs","headerExtensions","fecMechanisms","rtcp","mline","profile","rtpmapline","fmtps","wildcardRtcpFb","existingFeedback","writeRtpDescription","caps","maxptime","extension","parseRtpEncodingParameters","encodingParameters","hasRed","hasUlpfec","primarySsrc","secondarySsrc","flows","apt","encParam","codecPayloadType","rtx","fec","mechanism","bandwidth","maxBitrate","parseRtcpParameters","rtcpParameters","remoteSsrc","obj","cname","rsize","reducedSize","compound","mux","writeRtcpParameters","parseMsid","spec","planB","msidParts","parseSctpDescription","parseMLine","maxSizeLine","maxMessageSize","isNaN","sctpPort","fmt","sctpMapLines","writeSctpDescription","sctp","generateSessionId","substr","writeSessionBoilerplate","sessId","sessVer","sessUser","sessionId","version","getDirection","getKind","isRejected","parseOLine","username","sessionVersion","netType","addressType","isValidSDP","charAt","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","__webpack_modules__"],"sourceRoot":""}